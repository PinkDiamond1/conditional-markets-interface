(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{521:function(module){eval('module.exports = {"contractName":"IERC1155","abi":[{"constant":true,"inputs":[{"name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"anonymous":false,"inputs":[{"indexed":true,"name":"_operator","type":"address"},{"indexed":true,"name":"_from","type":"address"},{"indexed":true,"name":"_to","type":"address"},{"indexed":false,"name":"_id","type":"uint256"},{"indexed":false,"name":"_value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"_operator","type":"address"},{"indexed":true,"name":"_from","type":"address"},{"indexed":true,"name":"_to","type":"address"},{"indexed":false,"name":"_ids","type":"uint256[]"},{"indexed":false,"name":"_values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"_owner","type":"address"},{"indexed":true,"name":"_operator","type":"address"},{"indexed":false,"name":"_approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"_value","type":"string"},{"indexed":true,"name":"_id","type":"uint256"}],"name":"URI","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"_value","type":"string"},{"indexed":true,"name":"_id","type":"uint256"}],"name":"Name","type":"event"},{"constant":false,"inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_id","type":"uint256"},{"name":"_value","type":"uint256"},{"name":"_data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_ids","type":"uint256[]"},{"name":"_values","type":"uint256[]"},{"name":"_data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_owner","type":"address"},{"name":"_id","type":"uint256"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_owners","type":"address[]"},{"name":"_ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"name":"","type":"uint256[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_operator","type":"address"},{"name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_owner","type":"address"},{"name":"_operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"}],"bytecode":"0x","deployedBytecode":"0x","sourceMap":"","deployedSourceMap":"","source":"pragma solidity ^0.5.0;\\n\\nimport \\"openzeppelin-solidity/contracts/introspection/IERC165.sol\\";\\n\\n/**\\n    @title ERC-1155 Multi Token Standard\\n    @dev See https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1155.md\\n    Note: The ERC-165 identifier for this interface is 0xd9b67a26.\\n */\\n/*interface*/ contract IERC1155 is IERC165 {\\n    /**\\n        @dev Either TransferSingle or TransferBatch MUST emit when tokens are transferred, including zero value transfers as well as minting or burning.\\n        Either event from address `0x0` signifies a minting operation.\\n        An event to address `0x0` signifies a burning or melting operation.\\n        The total value transferred from address 0x0 minus the total value transferred to 0x0 may be used by clients and exchanges to be added to the \\"circulating supply\\" for a given token ID\\n        This MAY emit a 0 value, from `0x0` to `0x0` with `_operator` assuming the role of the token creator to define a token ID with no initial balance at the time of creation.\\n    */\\n    event TransferSingle(address indexed _operator, address indexed _from, address indexed _to, uint256 _id, uint256 _value);\\n    event TransferBatch(address indexed _operator, address indexed _from, address indexed _to, uint256[] _ids, uint256[] _values);\\n\\n    /**\\n        @dev MUST emit when an approval is updated.\\n    */\\n    event ApprovalForAll(address indexed _owner, address indexed _operator, bool _approved);\\n\\n    /**\\n        @dev MUST emit when the URI is updated for a token ID.\\n        The URI MUST point a JSON file that conforms to the \\"ERC-1155 Metadata JSON Schema\\".\\n    */\\n    event URI(string _value, uint256 indexed _id);\\n\\n    /**\\n        @dev MUST emit when the Name is updated for a token ID.\\n    */\\n    event Name(string _value, uint256 indexed _id);\\n\\n    /**\\n        @notice Transfers value amount of an _id from the _from address to the _to addresses specified. Each parameter array should be the same length, with each index correlating.\\n        @dev MUST emit TransferSingle event on success.\\n        Caller must be approved to manage the _from account\'s tokens (see isApprovedForAll).\\n        MUST Throw if `_to` is the zero address.\\n        MUST Throw if `_id` is not a valid token ID.\\n        MUST Throw on any other error.\\n        When transfer is complete, this function MUST check if `_to` is a smart contract (code size > 0). If so, it MUST call `onERC1155Received` on `_to` and revert if the return value is not `bytes4(keccak256(\\"onERC1155Received(address,address,uint256,uint256,bytes)\\"))`.\\n        @param _from    Source addresses\\n        @param _to      Target addresses\\n        @param _id      ID of the token type\\n        @param _value   Transfer amount\\n        @param _data    Additional data with no specified format, sent in call to `_to`\\n    */\\n    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes calldata _data) external;\\n\\n    /**\\n        @notice Send multiple types of Tokens from a 3rd party in one transfer (with safety call).\\n        @dev MUST emit TransferBatch event on success.\\n        Caller must be approved to manage the _from account\'s tokens (see isApprovedForAll).\\n        MUST Throw if `_to` is the zero address.\\n        MUST Throw if any of the `_ids` is not a valid token ID.\\n        MUST Throw on any other error.\\n        When transfer is complete, this function MUST check if `_to` is a smart contract (code size > 0). If so, it MUST call `onERC1155BatchReceived` on `_to` and revert if the return value is not `bytes4(keccak256(\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\"))`.\\n        @param _from    Source address\\n        @param _to      Target address\\n        @param _ids     IDs of each token type\\n        @param _values  Transfer amounts per token type\\n        @param _data    Additional data with no specified format, sent in call to `_to`\\n    */\\n    function safeBatchTransferFrom(address _from, address _to, uint256[] calldata _ids, uint256[] calldata _values, bytes calldata _data) external;\\n\\n    /**\\n        @notice Get the balance of an account\'s Tokens.\\n        @param _owner  The address of the token holder\\n        @param _id     ID of the Token\\n        @return        The _owner\'s balance of the Token type requested\\n     */\\n    function balanceOf(address _owner, uint256 _id) external view returns (uint256);\\n\\n    /**\\n        @notice Get the balance of multiple account/token pairs\\n        @param _owners The addresses of the token holders\\n        @param _ids    ID of the Tokens\\n        @return        The _owner\'s balance of the Token types requested\\n     */\\n    function balanceOfBatch(address[] calldata _owners, uint256[] calldata _ids) external view returns (uint256[] memory);\\n\\n    /**\\n        @notice Enable or disable approval for a third party (\\"operator\\") to manage all of the caller\'s tokens.\\n        @dev MUST emit the ApprovalForAll event on success.\\n        @param _operator  Address to add to the set of authorized operators\\n        @param _approved  True if the operator is approved, false to revoke approval\\n    */\\n    function setApprovalForAll(address _operator, bool _approved) external;\\n\\n    /**\\n        @notice Queries the approval status of an operator for a given owner.\\n        @param _owner     The owner of the Tokens\\n        @param _operator  Address of authorized operator\\n        @return           True if the operator is approved, false if not\\n    */\\n    function isApprovedForAll(address _owner, address _operator) external view returns (bool);\\n}\\n","sourcePath":"erc-1155/contracts/IERC1155.sol","ast":{"absolutePath":"erc-1155/contracts/IERC1155.sol","exportedSymbols":{"IERC1155":[5029]},"id":5030,"nodeType":"SourceUnit","nodes":[{"id":4914,"literals":["solidity","^","0.5",".0"],"nodeType":"PragmaDirective","src":"0:23:14"},{"absolutePath":"openzeppelin-solidity/contracts/introspection/IERC165.sol","file":"openzeppelin-solidity/contracts/introspection/IERC165.sol","id":4915,"nodeType":"ImportDirective","scope":5030,"sourceUnit":5075,"src":"25:67:14","symbolAliases":[],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":4916,"name":"IERC165","nodeType":"UserDefinedTypeName","referencedDeclaration":5074,"src":"320:7:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC165_$5074","typeString":"contract IERC165"}},"id":4917,"nodeType":"InheritanceSpecifier","src":"320:7:14"}],"contractDependencies":[5074],"contractKind":"contract","documentation":"@title ERC-1155 Multi Token Standard\\n@dev See https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1155.md\\nNote: The ERC-165 identifier for this interface is 0xd9b67a26.","fullyImplemented":false,"id":5029,"linearizedBaseContracts":[5029,5074],"name":"IERC1155","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":"@dev Either TransferSingle or TransferBatch MUST emit when tokens are transferred, including zero value transfers as well as minting or burning.\\nEither event from address `0x0` signifies a minting operation.\\nAn event to address `0x0` signifies a burning or melting operation.\\nThe total value transferred from address 0x0 minus the total value transferred to 0x0 may be used by clients and exchanges to be added to the \\"circulating supply\\" for a given token ID\\nThis MAY emit a 0 value, from `0x0` to `0x0` with `_operator` assuming the role of the token creator to define a token ID with no initial balance at the time of creation.","id":4929,"name":"TransferSingle","nodeType":"EventDefinition","parameters":{"id":4928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4919,"indexed":true,"name":"_operator","nodeType":"VariableDeclaration","scope":4929,"src":"1041:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4918,"name":"address","nodeType":"ElementaryTypeName","src":"1041:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":4921,"indexed":true,"name":"_from","nodeType":"VariableDeclaration","scope":4929,"src":"1068:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4920,"name":"address","nodeType":"ElementaryTypeName","src":"1068:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":4923,"indexed":true,"name":"_to","nodeType":"VariableDeclaration","scope":4929,"src":"1091:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4922,"name":"address","nodeType":"ElementaryTypeName","src":"1091:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":4925,"indexed":false,"name":"_id","nodeType":"VariableDeclaration","scope":4929,"src":"1112:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4924,"name":"uint256","nodeType":"ElementaryTypeName","src":"1112:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":4927,"indexed":false,"name":"_value","nodeType":"VariableDeclaration","scope":4929,"src":"1125:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4926,"name":"uint256","nodeType":"ElementaryTypeName","src":"1125:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1040:100:14"},"src":"1020:121:14"},{"anonymous":false,"documentation":null,"id":4943,"name":"TransferBatch","nodeType":"EventDefinition","parameters":{"id":4942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4931,"indexed":true,"name":"_operator","nodeType":"VariableDeclaration","scope":4943,"src":"1166:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4930,"name":"address","nodeType":"ElementaryTypeName","src":"1166:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":4933,"indexed":true,"name":"_from","nodeType":"VariableDeclaration","scope":4943,"src":"1193:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4932,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":4935,"indexed":true,"name":"_to","nodeType":"VariableDeclaration","scope":4943,"src":"1216:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4934,"name":"address","nodeType":"ElementaryTypeName","src":"1216:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":4938,"indexed":false,"name":"_ids","nodeType":"VariableDeclaration","scope":4943,"src":"1237:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4936,"name":"uint256","nodeType":"ElementaryTypeName","src":"1237:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4937,"length":null,"nodeType":"ArrayTypeName","src":"1237:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":4941,"indexed":false,"name":"_values","nodeType":"VariableDeclaration","scope":4943,"src":"1253:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4939,"name":"uint256","nodeType":"ElementaryTypeName","src":"1253:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4940,"length":null,"nodeType":"ArrayTypeName","src":"1253:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"1165:106:14"},"src":"1146:126:14"},{"anonymous":false,"documentation":"@dev MUST emit when an approval is updated.","id":4951,"name":"ApprovalForAll","nodeType":"EventDefinition","parameters":{"id":4950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4945,"indexed":true,"name":"_owner","nodeType":"VariableDeclaration","scope":4951,"src":"1366:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4944,"name":"address","nodeType":"ElementaryTypeName","src":"1366:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":4947,"indexed":true,"name":"_operator","nodeType":"VariableDeclaration","scope":4951,"src":"1390:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4946,"name":"address","nodeType":"ElementaryTypeName","src":"1390:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":4949,"indexed":false,"name":"_approved","nodeType":"VariableDeclaration","scope":4951,"src":"1417:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4948,"name":"bool","nodeType":"ElementaryTypeName","src":"1417:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1365:67:14"},"src":"1345:88:14"},{"anonymous":false,"documentation":"@dev MUST emit when the URI is updated for a token ID.\\nThe URI MUST point a JSON file that conforms to the \\"ERC-1155 Metadata JSON Schema\\".","id":4957,"name":"URI","nodeType":"EventDefinition","parameters":{"id":4956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4953,"indexed":false,"name":"_value","nodeType":"VariableDeclaration","scope":4957,"src":"1620:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4952,"name":"string","nodeType":"ElementaryTypeName","src":"1620:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":4955,"indexed":true,"name":"_id","nodeType":"VariableDeclaration","scope":4957,"src":"1635:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4954,"name":"uint256","nodeType":"ElementaryTypeName","src":"1635:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1619:36:14"},"src":"1610:46:14"},{"anonymous":false,"documentation":"@dev MUST emit when the Name is updated for a token ID.","id":4963,"name":"Name","nodeType":"EventDefinition","parameters":{"id":4962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4959,"indexed":false,"name":"_value","nodeType":"VariableDeclaration","scope":4963,"src":"1752:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4958,"name":"string","nodeType":"ElementaryTypeName","src":"1752:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":4961,"indexed":true,"name":"_id","nodeType":"VariableDeclaration","scope":4963,"src":"1767:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4960,"name":"uint256","nodeType":"ElementaryTypeName","src":"1767:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1751:36:14"},"src":"1741:47:14"},{"body":null,"documentation":"@notice Transfers value amount of an _id from the _from address to the _to addresses specified. Each parameter array should be the same length, with each index correlating.\\n@dev MUST emit TransferSingle event on success.\\nCaller must be approved to manage the _from account\'s tokens (see isApprovedForAll).\\nMUST Throw if `_to` is the zero address.\\nMUST Throw if `_id` is not a valid token ID.\\nMUST Throw on any other error.\\nWhen transfer is complete, this function MUST check if `_to` is a smart contract (code size > 0). If so, it MUST call `onERC1155Received` on `_to` and revert if the return value is not `bytes4(keccak256(\\"onERC1155Received(address,address,uint256,uint256,bytes)\\"))`.\\n@param _from    Source addresses\\n@param _to      Target addresses\\n@param _id      ID of the token type\\n@param _value   Transfer amount\\n@param _data    Additional data with no specified format, sent in call to `_to`","id":4976,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nodeType":"FunctionDefinition","parameters":{"id":4974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4965,"name":"_from","nodeType":"VariableDeclaration","scope":4976,"src":"2835:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4964,"name":"address","nodeType":"ElementaryTypeName","src":"2835:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":4967,"name":"_to","nodeType":"VariableDeclaration","scope":4976,"src":"2850:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4966,"name":"address","nodeType":"ElementaryTypeName","src":"2850:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":4969,"name":"_id","nodeType":"VariableDeclaration","scope":4976,"src":"2863:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4968,"name":"uint256","nodeType":"ElementaryTypeName","src":"2863:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":4971,"name":"_value","nodeType":"VariableDeclaration","scope":4976,"src":"2876:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4970,"name":"uint256","nodeType":"ElementaryTypeName","src":"2876:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":4973,"name":"_data","nodeType":"VariableDeclaration","scope":4976,"src":"2892:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4972,"name":"bytes","nodeType":"ElementaryTypeName","src":"2892:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"2834:79:14"},"returnParameters":{"id":4975,"nodeType":"ParameterList","parameters":[],"src":"2922:0:14"},"scope":5029,"src":"2809:114:14","stateMutability":"nonpayable","superFunction":null,"visibility":"external"},{"body":null,"documentation":"@notice Send multiple types of Tokens from a 3rd party in one transfer (with safety call).\\n@dev MUST emit TransferBatch event on success.\\nCaller must be approved to manage the _from account\'s tokens (see isApprovedForAll).\\nMUST Throw if `_to` is the zero address.\\nMUST Throw if any of the `_ids` is not a valid token ID.\\nMUST Throw on any other error.\\nWhen transfer is complete, this function MUST check if `_to` is a smart contract (code size > 0). If so, it MUST call `onERC1155BatchReceived` on `_to` and revert if the return value is not `bytes4(keccak256(\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\"))`.\\n@param _from    Source address\\n@param _to      Target address\\n@param _ids     IDs of each token type\\n@param _values  Transfer amounts per token type\\n@param _data    Additional data with no specified format, sent in call to `_to`","id":4991,"implemented":false,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nodeType":"FunctionDefinition","parameters":{"id":4989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4978,"name":"_from","nodeType":"VariableDeclaration","scope":4991,"src":"3932:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4977,"name":"address","nodeType":"ElementaryTypeName","src":"3932:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":4980,"name":"_to","nodeType":"VariableDeclaration","scope":4991,"src":"3947:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4979,"name":"address","nodeType":"ElementaryTypeName","src":"3947:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":4983,"name":"_ids","nodeType":"VariableDeclaration","scope":4991,"src":"3960:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4981,"name":"uint256","nodeType":"ElementaryTypeName","src":"3960:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4982,"length":null,"nodeType":"ArrayTypeName","src":"3960:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":4986,"name":"_values","nodeType":"VariableDeclaration","scope":4991,"src":"3985:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4984,"name":"uint256","nodeType":"ElementaryTypeName","src":"3985:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4985,"length":null,"nodeType":"ArrayTypeName","src":"3985:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":4988,"name":"_data","nodeType":"VariableDeclaration","scope":4991,"src":"4013:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4987,"name":"bytes","nodeType":"ElementaryTypeName","src":"4013:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"3931:103:14"},"returnParameters":{"id":4990,"nodeType":"ParameterList","parameters":[],"src":"4043:0:14"},"scope":5029,"src":"3901:143:14","stateMutability":"nonpayable","superFunction":null,"visibility":"external"},{"body":null,"documentation":"@notice Get the balance of an account\'s Tokens.\\n@param _owner  The address of the token holder\\n@param _id     ID of the Token\\n@return        The _owner\'s balance of the Token type requested","id":5000,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nodeType":"FunctionDefinition","parameters":{"id":4996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4993,"name":"_owner","nodeType":"VariableDeclaration","scope":5000,"src":"4307:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4992,"name":"address","nodeType":"ElementaryTypeName","src":"4307:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":4995,"name":"_id","nodeType":"VariableDeclaration","scope":5000,"src":"4323:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4994,"name":"uint256","nodeType":"ElementaryTypeName","src":"4323:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"4306:29:14"},"returnParameters":{"id":4999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4998,"name":"","nodeType":"VariableDeclaration","scope":5000,"src":"4359:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4997,"name":"uint256","nodeType":"ElementaryTypeName","src":"4359:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"4358:9:14"},"scope":5029,"src":"4288:80:14","stateMutability":"view","superFunction":null,"visibility":"external"},{"body":null,"documentation":"@notice Get the balance of multiple account/token pairs\\n@param _owners The addresses of the token holders\\n@param _ids    ID of the Tokens\\n@return        The _owner\'s balance of the Token types requested","id":5012,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOfBatch","nodeType":"FunctionDefinition","parameters":{"id":5007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5003,"name":"_owners","nodeType":"VariableDeclaration","scope":5012,"src":"4649:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5001,"name":"address","nodeType":"ElementaryTypeName","src":"4649:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5002,"length":null,"nodeType":"ArrayTypeName","src":"4649:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":5006,"name":"_ids","nodeType":"VariableDeclaration","scope":5012,"src":"4677:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5004,"name":"uint256","nodeType":"ElementaryTypeName","src":"4677:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5005,"length":null,"nodeType":"ArrayTypeName","src":"4677:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"4648:53:14"},"returnParameters":{"id":5011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5010,"name":"","nodeType":"VariableDeclaration","scope":5012,"src":"4725:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5008,"name":"uint256","nodeType":"ElementaryTypeName","src":"4725:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5009,"length":null,"nodeType":"ArrayTypeName","src":"4725:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"4724:18:14"},"scope":5029,"src":"4625:118:14","stateMutability":"view","superFunction":null,"visibility":"external"},{"body":null,"documentation":"@notice Enable or disable approval for a third party (\\"operator\\") to manage all of the caller\'s tokens.\\n@dev MUST emit the ApprovalForAll event on success.\\n@param _operator  Address to add to the set of authorized operators\\n@param _approved  True if the operator is approved, false to revoke approval","id":5019,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nodeType":"FunctionDefinition","parameters":{"id":5017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5014,"name":"_operator","nodeType":"VariableDeclaration","scope":5019,"src":"5124:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5013,"name":"address","nodeType":"ElementaryTypeName","src":"5124:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":5016,"name":"_approved","nodeType":"VariableDeclaration","scope":5019,"src":"5143:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5015,"name":"bool","nodeType":"ElementaryTypeName","src":"5143:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"5123:35:14"},"returnParameters":{"id":5018,"nodeType":"ParameterList","parameters":[],"src":"5167:0:14"},"scope":5029,"src":"5097:71:14","stateMutability":"nonpayable","superFunction":null,"visibility":"external"},{"body":null,"documentation":"@notice Queries the approval status of an operator for a given owner.\\n@param _owner     The owner of the Tokens\\n@param _operator  Address of authorized operator\\n@return           True if the operator is approved, false if not","id":5028,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nodeType":"FunctionDefinition","parameters":{"id":5024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5021,"name":"_owner","nodeType":"VariableDeclaration","scope":5028,"src":"5473:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5020,"name":"address","nodeType":"ElementaryTypeName","src":"5473:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":5023,"name":"_operator","nodeType":"VariableDeclaration","scope":5028,"src":"5489:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5022,"name":"address","nodeType":"ElementaryTypeName","src":"5489:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"5472:35:14"},"returnParameters":{"id":5027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5026,"name":"","nodeType":"VariableDeclaration","scope":5028,"src":"5531:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5025,"name":"bool","nodeType":"ElementaryTypeName","src":"5531:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"5530:6:14"},"scope":5029,"src":"5447:90:14","stateMutability":"view","superFunction":null,"visibility":"external"}],"scope":5030,"src":"299:5240:14"}],"src":"0:5540:14"},"legacyAST":{"absolutePath":"erc-1155/contracts/IERC1155.sol","exportedSymbols":{"IERC1155":[5029]},"id":5030,"nodeType":"SourceUnit","nodes":[{"id":4914,"literals":["solidity","^","0.5",".0"],"nodeType":"PragmaDirective","src":"0:23:14"},{"absolutePath":"openzeppelin-solidity/contracts/introspection/IERC165.sol","file":"openzeppelin-solidity/contracts/introspection/IERC165.sol","id":4915,"nodeType":"ImportDirective","scope":5030,"sourceUnit":5075,"src":"25:67:14","symbolAliases":[],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":4916,"name":"IERC165","nodeType":"UserDefinedTypeName","referencedDeclaration":5074,"src":"320:7:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC165_$5074","typeString":"contract IERC165"}},"id":4917,"nodeType":"InheritanceSpecifier","src":"320:7:14"}],"contractDependencies":[5074],"contractKind":"contract","documentation":"@title ERC-1155 Multi Token Standard\\n@dev See https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1155.md\\nNote: The ERC-165 identifier for this interface is 0xd9b67a26.","fullyImplemented":false,"id":5029,"linearizedBaseContracts":[5029,5074],"name":"IERC1155","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":"@dev Either TransferSingle or TransferBatch MUST emit when tokens are transferred, including zero value transfers as well as minting or burning.\\nEither event from address `0x0` signifies a minting operation.\\nAn event to address `0x0` signifies a burning or melting operation.\\nThe total value transferred from address 0x0 minus the total value transferred to 0x0 may be used by clients and exchanges to be added to the \\"circulating supply\\" for a given token ID\\nThis MAY emit a 0 value, from `0x0` to `0x0` with `_operator` assuming the role of the token creator to define a token ID with no initial balance at the time of creation.","id":4929,"name":"TransferSingle","nodeType":"EventDefinition","parameters":{"id":4928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4919,"indexed":true,"name":"_operator","nodeType":"VariableDeclaration","scope":4929,"src":"1041:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4918,"name":"address","nodeType":"ElementaryTypeName","src":"1041:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":4921,"indexed":true,"name":"_from","nodeType":"VariableDeclaration","scope":4929,"src":"1068:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4920,"name":"address","nodeType":"ElementaryTypeName","src":"1068:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":4923,"indexed":true,"name":"_to","nodeType":"VariableDeclaration","scope":4929,"src":"1091:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4922,"name":"address","nodeType":"ElementaryTypeName","src":"1091:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":4925,"indexed":false,"name":"_id","nodeType":"VariableDeclaration","scope":4929,"src":"1112:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4924,"name":"uint256","nodeType":"ElementaryTypeName","src":"1112:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":4927,"indexed":false,"name":"_value","nodeType":"VariableDeclaration","scope":4929,"src":"1125:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4926,"name":"uint256","nodeType":"ElementaryTypeName","src":"1125:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1040:100:14"},"src":"1020:121:14"},{"anonymous":false,"documentation":null,"id":4943,"name":"TransferBatch","nodeType":"EventDefinition","parameters":{"id":4942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4931,"indexed":true,"name":"_operator","nodeType":"VariableDeclaration","scope":4943,"src":"1166:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4930,"name":"address","nodeType":"ElementaryTypeName","src":"1166:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":4933,"indexed":true,"name":"_from","nodeType":"VariableDeclaration","scope":4943,"src":"1193:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4932,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":4935,"indexed":true,"name":"_to","nodeType":"VariableDeclaration","scope":4943,"src":"1216:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4934,"name":"address","nodeType":"ElementaryTypeName","src":"1216:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":4938,"indexed":false,"name":"_ids","nodeType":"VariableDeclaration","scope":4943,"src":"1237:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4936,"name":"uint256","nodeType":"ElementaryTypeName","src":"1237:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4937,"length":null,"nodeType":"ArrayTypeName","src":"1237:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":4941,"indexed":false,"name":"_values","nodeType":"VariableDeclaration","scope":4943,"src":"1253:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4939,"name":"uint256","nodeType":"ElementaryTypeName","src":"1253:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4940,"length":null,"nodeType":"ArrayTypeName","src":"1253:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"1165:106:14"},"src":"1146:126:14"},{"anonymous":false,"documentation":"@dev MUST emit when an approval is updated.","id":4951,"name":"ApprovalForAll","nodeType":"EventDefinition","parameters":{"id":4950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4945,"indexed":true,"name":"_owner","nodeType":"VariableDeclaration","scope":4951,"src":"1366:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4944,"name":"address","nodeType":"ElementaryTypeName","src":"1366:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":4947,"indexed":true,"name":"_operator","nodeType":"VariableDeclaration","scope":4951,"src":"1390:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4946,"name":"address","nodeType":"ElementaryTypeName","src":"1390:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":4949,"indexed":false,"name":"_approved","nodeType":"VariableDeclaration","scope":4951,"src":"1417:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4948,"name":"bool","nodeType":"ElementaryTypeName","src":"1417:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1365:67:14"},"src":"1345:88:14"},{"anonymous":false,"documentation":"@dev MUST emit when the URI is updated for a token ID.\\nThe URI MUST point a JSON file that conforms to the \\"ERC-1155 Metadata JSON Schema\\".","id":4957,"name":"URI","nodeType":"EventDefinition","parameters":{"id":4956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4953,"indexed":false,"name":"_value","nodeType":"VariableDeclaration","scope":4957,"src":"1620:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4952,"name":"string","nodeType":"ElementaryTypeName","src":"1620:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":4955,"indexed":true,"name":"_id","nodeType":"VariableDeclaration","scope":4957,"src":"1635:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4954,"name":"uint256","nodeType":"ElementaryTypeName","src":"1635:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1619:36:14"},"src":"1610:46:14"},{"anonymous":false,"documentation":"@dev MUST emit when the Name is updated for a token ID.","id":4963,"name":"Name","nodeType":"EventDefinition","parameters":{"id":4962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4959,"indexed":false,"name":"_value","nodeType":"VariableDeclaration","scope":4963,"src":"1752:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4958,"name":"string","nodeType":"ElementaryTypeName","src":"1752:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":4961,"indexed":true,"name":"_id","nodeType":"VariableDeclaration","scope":4963,"src":"1767:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4960,"name":"uint256","nodeType":"ElementaryTypeName","src":"1767:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1751:36:14"},"src":"1741:47:14"},{"body":null,"documentation":"@notice Transfers value amount of an _id from the _from address to the _to addresses specified. Each parameter array should be the same length, with each index correlating.\\n@dev MUST emit TransferSingle event on success.\\nCaller must be approved to manage the _from account\'s tokens (see isApprovedForAll).\\nMUST Throw if `_to` is the zero address.\\nMUST Throw if `_id` is not a valid token ID.\\nMUST Throw on any other error.\\nWhen transfer is complete, this function MUST check if `_to` is a smart contract (code size > 0). If so, it MUST call `onERC1155Received` on `_to` and revert if the return value is not `bytes4(keccak256(\\"onERC1155Received(address,address,uint256,uint256,bytes)\\"))`.\\n@param _from    Source addresses\\n@param _to      Target addresses\\n@param _id      ID of the token type\\n@param _value   Transfer amount\\n@param _data    Additional data with no specified format, sent in call to `_to`","id":4976,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nodeType":"FunctionDefinition","parameters":{"id":4974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4965,"name":"_from","nodeType":"VariableDeclaration","scope":4976,"src":"2835:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4964,"name":"address","nodeType":"ElementaryTypeName","src":"2835:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":4967,"name":"_to","nodeType":"VariableDeclaration","scope":4976,"src":"2850:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4966,"name":"address","nodeType":"ElementaryTypeName","src":"2850:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":4969,"name":"_id","nodeType":"VariableDeclaration","scope":4976,"src":"2863:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4968,"name":"uint256","nodeType":"ElementaryTypeName","src":"2863:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":4971,"name":"_value","nodeType":"VariableDeclaration","scope":4976,"src":"2876:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4970,"name":"uint256","nodeType":"ElementaryTypeName","src":"2876:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":4973,"name":"_data","nodeType":"VariableDeclaration","scope":4976,"src":"2892:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4972,"name":"bytes","nodeType":"ElementaryTypeName","src":"2892:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"2834:79:14"},"returnParameters":{"id":4975,"nodeType":"ParameterList","parameters":[],"src":"2922:0:14"},"scope":5029,"src":"2809:114:14","stateMutability":"nonpayable","superFunction":null,"visibility":"external"},{"body":null,"documentation":"@notice Send multiple types of Tokens from a 3rd party in one transfer (with safety call).\\n@dev MUST emit TransferBatch event on success.\\nCaller must be approved to manage the _from account\'s tokens (see isApprovedForAll).\\nMUST Throw if `_to` is the zero address.\\nMUST Throw if any of the `_ids` is not a valid token ID.\\nMUST Throw on any other error.\\nWhen transfer is complete, this function MUST check if `_to` is a smart contract (code size > 0). If so, it MUST call `onERC1155BatchReceived` on `_to` and revert if the return value is not `bytes4(keccak256(\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\"))`.\\n@param _from    Source address\\n@param _to      Target address\\n@param _ids     IDs of each token type\\n@param _values  Transfer amounts per token type\\n@param _data    Additional data with no specified format, sent in call to `_to`","id":4991,"implemented":false,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nodeType":"FunctionDefinition","parameters":{"id":4989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4978,"name":"_from","nodeType":"VariableDeclaration","scope":4991,"src":"3932:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4977,"name":"address","nodeType":"ElementaryTypeName","src":"3932:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":4980,"name":"_to","nodeType":"VariableDeclaration","scope":4991,"src":"3947:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4979,"name":"address","nodeType":"ElementaryTypeName","src":"3947:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":4983,"name":"_ids","nodeType":"VariableDeclaration","scope":4991,"src":"3960:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4981,"name":"uint256","nodeType":"ElementaryTypeName","src":"3960:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4982,"length":null,"nodeType":"ArrayTypeName","src":"3960:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":4986,"name":"_values","nodeType":"VariableDeclaration","scope":4991,"src":"3985:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4984,"name":"uint256","nodeType":"ElementaryTypeName","src":"3985:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4985,"length":null,"nodeType":"ArrayTypeName","src":"3985:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":4988,"name":"_data","nodeType":"VariableDeclaration","scope":4991,"src":"4013:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4987,"name":"bytes","nodeType":"ElementaryTypeName","src":"4013:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"3931:103:14"},"returnParameters":{"id":4990,"nodeType":"ParameterList","parameters":[],"src":"4043:0:14"},"scope":5029,"src":"3901:143:14","stateMutability":"nonpayable","superFunction":null,"visibility":"external"},{"body":null,"documentation":"@notice Get the balance of an account\'s Tokens.\\n@param _owner  The address of the token holder\\n@param _id     ID of the Token\\n@return        The _owner\'s balance of the Token type requested","id":5000,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nodeType":"FunctionDefinition","parameters":{"id":4996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4993,"name":"_owner","nodeType":"VariableDeclaration","scope":5000,"src":"4307:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4992,"name":"address","nodeType":"ElementaryTypeName","src":"4307:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":4995,"name":"_id","nodeType":"VariableDeclaration","scope":5000,"src":"4323:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4994,"name":"uint256","nodeType":"ElementaryTypeName","src":"4323:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"4306:29:14"},"returnParameters":{"id":4999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4998,"name":"","nodeType":"VariableDeclaration","scope":5000,"src":"4359:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4997,"name":"uint256","nodeType":"ElementaryTypeName","src":"4359:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"4358:9:14"},"scope":5029,"src":"4288:80:14","stateMutability":"view","superFunction":null,"visibility":"external"},{"body":null,"documentation":"@notice Get the balance of multiple account/token pairs\\n@param _owners The addresses of the token holders\\n@param _ids    ID of the Tokens\\n@return        The _owner\'s balance of the Token types requested","id":5012,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOfBatch","nodeType":"FunctionDefinition","parameters":{"id":5007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5003,"name":"_owners","nodeType":"VariableDeclaration","scope":5012,"src":"4649:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5001,"name":"address","nodeType":"ElementaryTypeName","src":"4649:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5002,"length":null,"nodeType":"ArrayTypeName","src":"4649:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":5006,"name":"_ids","nodeType":"VariableDeclaration","scope":5012,"src":"4677:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5004,"name":"uint256","nodeType":"ElementaryTypeName","src":"4677:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5005,"length":null,"nodeType":"ArrayTypeName","src":"4677:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"4648:53:14"},"returnParameters":{"id":5011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5010,"name":"","nodeType":"VariableDeclaration","scope":5012,"src":"4725:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5008,"name":"uint256","nodeType":"ElementaryTypeName","src":"4725:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5009,"length":null,"nodeType":"ArrayTypeName","src":"4725:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"4724:18:14"},"scope":5029,"src":"4625:118:14","stateMutability":"view","superFunction":null,"visibility":"external"},{"body":null,"documentation":"@notice Enable or disable approval for a third party (\\"operator\\") to manage all of the caller\'s tokens.\\n@dev MUST emit the ApprovalForAll event on success.\\n@param _operator  Address to add to the set of authorized operators\\n@param _approved  True if the operator is approved, false to revoke approval","id":5019,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nodeType":"FunctionDefinition","parameters":{"id":5017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5014,"name":"_operator","nodeType":"VariableDeclaration","scope":5019,"src":"5124:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5013,"name":"address","nodeType":"ElementaryTypeName","src":"5124:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":5016,"name":"_approved","nodeType":"VariableDeclaration","scope":5019,"src":"5143:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5015,"name":"bool","nodeType":"ElementaryTypeName","src":"5143:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"5123:35:14"},"returnParameters":{"id":5018,"nodeType":"ParameterList","parameters":[],"src":"5167:0:14"},"scope":5029,"src":"5097:71:14","stateMutability":"nonpayable","superFunction":null,"visibility":"external"},{"body":null,"documentation":"@notice Queries the approval status of an operator for a given owner.\\n@param _owner     The owner of the Tokens\\n@param _operator  Address of authorized operator\\n@return           True if the operator is approved, false if not","id":5028,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nodeType":"FunctionDefinition","parameters":{"id":5024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5021,"name":"_owner","nodeType":"VariableDeclaration","scope":5028,"src":"5473:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5020,"name":"address","nodeType":"ElementaryTypeName","src":"5473:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":5023,"name":"_operator","nodeType":"VariableDeclaration","scope":5028,"src":"5489:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5022,"name":"address","nodeType":"ElementaryTypeName","src":"5489:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"5472:35:14"},"returnParameters":{"id":5027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5026,"name":"","nodeType":"VariableDeclaration","scope":5028,"src":"5531:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5025,"name":"bool","nodeType":"ElementaryTypeName","src":"5531:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"5530:6:14"},"scope":5029,"src":"5447:90:14","stateMutability":"view","superFunction":null,"visibility":"external"}],"scope":5030,"src":"299:5240:14"}],"src":"0:5540:14"},"compiler":{"name":"solc","version":"0.5.1+commit.c8a2cb62.Emscripten.clang"},"networks":{},"schemaVersion":"3.0.1","updatedAt":"2019-03-05T09:44:32.346Z","devdoc":{"details":"See https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1155.md Note: The ERC-165 identifier for this interface is 0xd9b67a26.","methods":{"balanceOf(address,uint256)":{"params":{"_id":"ID of the Token","_owner":"The address of the token holder"},"return":"The _owner\'s balance of the Token type requested"},"balanceOfBatch(address[],uint256[])":{"params":{"_ids":"ID of the Tokens","_owners":"The addresses of the token holders"},"return":"The _owner\'s balance of the Token types requested"},"isApprovedForAll(address,address)":{"params":{"_operator":"Address of authorized operator","_owner":"The owner of the Tokens"},"return":"True if the operator is approved, false if not"},"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":{"details":"MUST emit TransferBatch event on success. Caller must be approved to manage the _from account\'s tokens (see isApprovedForAll). MUST Throw if `_to` is the zero address. MUST Throw if any of the `_ids` is not a valid token ID. MUST Throw on any other error. When transfer is complete, this function MUST check if `_to` is a smart contract (code size > 0). If so, it MUST call `onERC1155BatchReceived` on `_to` and revert if the return value is not `bytes4(keccak256(\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\"))`.","params":{"_data":"Additional data with no specified format, sent in call to `_to`","_from":"Source address","_ids":"IDs of each token type","_to":"Target address","_values":"Transfer amounts per token type"}},"safeTransferFrom(address,address,uint256,uint256,bytes)":{"details":"MUST emit TransferSingle event on success. Caller must be approved to manage the _from account\'s tokens (see isApprovedForAll). MUST Throw if `_to` is the zero address. MUST Throw if `_id` is not a valid token ID. MUST Throw on any other error. When transfer is complete, this function MUST check if `_to` is a smart contract (code size > 0). If so, it MUST call `onERC1155Received` on `_to` and revert if the return value is not `bytes4(keccak256(\\"onERC1155Received(address,address,uint256,uint256,bytes)\\"))`.","params":{"_data":"Additional data with no specified format, sent in call to `_to`","_from":"Source addresses","_id":"ID of the token type","_to":"Target addresses","_value":"Transfer amount"}},"setApprovalForAll(address,bool)":{"details":"MUST emit the ApprovalForAll event on success.","params":{"_approved":"True if the operator is approved, false to revoke approval","_operator":"Address to add to the set of authorized operators"}},"supportsInterface(bytes4)":{"details":"Interface identification is specified in ERC-165. This function uses less than 30,000 gas.","params":{"interfaceId":"The interface identifier, as specified in ERC-165"}}},"title":"ERC-1155 Multi Token Standard"},"userdoc":{"methods":{"balanceOf(address,uint256)":{"notice":"Get the balance of an account\'s Tokens."},"balanceOfBatch(address[],uint256[])":{"notice":"Get the balance of multiple account/token pairs"},"isApprovedForAll(address,address)":{"notice":"Queries the approval status of an operator for a given owner."},"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":{"notice":"Send multiple types of Tokens from a 3rd party in one transfer (with safety call)."},"safeTransferFrom(address,address,uint256,uint256,bytes)":{"notice":"Transfers value amount of an _id from the _from address to the _to addresses specified. Each parameter array should be the same length, with each index correlating."},"setApprovalForAll(address,bool)":{"notice":"Enable or disable approval for a third party (\\"operator\\") to manage all of the caller\'s tokens."},"supportsInterface(bytes4)":{"notice":"Query if a contract implements an interface"}}}};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiI1MjEuanMiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///521\n')}}]);