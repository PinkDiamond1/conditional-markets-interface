(window.webpackJsonp=window.webpackJsonp||[]).push([[10,3,11,20],{181:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "product", function() { return product; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "combinations", function() { return combinations; });\nfunction* product(...arrs) {\n  if (arrs.length === 0) yield [];else for (const h of arrs[0]) for (const ts of product(...arrs.slice(1))) yield [h, ...ts];\n}\nfunction* combinations(arr, n) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`invalid combination size ${n}`);\n\n  if (arr.length < n) {\n    return;\n  } else if (n === 0) {\n    yield [];\n  } else if (n === 1) {\n    yield* arr.map(el => [el]);\n  } else for (let i = 0; i < arr.length - n + 1; i++) {\n    for (const subTuple of combinations(arr.slice(i + 1), n - 1)) yield [arr[i], ...subTuple];\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdXRpbHMvaXRlcnRvb2xzLmpzP2I4NzUiXSwibmFtZXMiOlsicHJvZHVjdCIsImFycnMiLCJsZW5ndGgiLCJoIiwidHMiLCJzbGljZSIsImNvbWJpbmF0aW9ucyIsImFyciIsIm4iLCJOdW1iZXIiLCJpc1NhZmVJbnRlZ2VyIiwiRXJyb3IiLCJtYXAiLCJlbCIsImkiLCJzdWJUdXBsZSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQU8sVUFBVUEsT0FBVixDQUFrQixHQUFHQyxJQUFyQixFQUEyQjtBQUNoQyxNQUFJQSxJQUFJLENBQUNDLE1BQUwsS0FBZ0IsQ0FBcEIsRUFBdUIsTUFBTSxFQUFOLENBQXZCLEtBRUUsS0FBSyxNQUFNQyxDQUFYLElBQWdCRixJQUFJLENBQUMsQ0FBRCxDQUFwQixFQUNFLEtBQUssTUFBTUcsRUFBWCxJQUFpQkosT0FBTyxDQUFDLEdBQUdDLElBQUksQ0FBQ0ksS0FBTCxDQUFXLENBQVgsQ0FBSixDQUF4QixFQUE0QyxNQUFNLENBQUNGLENBQUQsRUFBSSxHQUFHQyxFQUFQLENBQU47QUFDakQ7QUFFTSxVQUFVRSxZQUFWLENBQXVCQyxHQUF2QixFQUE0QkMsQ0FBNUIsRUFBK0I7QUFDcEMsTUFBSSxDQUFDQyxNQUFNLENBQUNDLGFBQVAsQ0FBcUJGLENBQXJCLENBQUQsSUFBNEJBLENBQUMsR0FBRyxDQUFwQyxFQUNFLE1BQU0sSUFBSUcsS0FBSixDQUFXLDRCQUEyQkgsQ0FBRSxFQUF4QyxDQUFOOztBQUVGLE1BQUlELEdBQUcsQ0FBQ0wsTUFBSixHQUFhTSxDQUFqQixFQUFvQjtBQUNsQjtBQUNELEdBRkQsTUFFTyxJQUFJQSxDQUFDLEtBQUssQ0FBVixFQUFhO0FBQ2xCLFVBQU0sRUFBTjtBQUNELEdBRk0sTUFFQSxJQUFJQSxDQUFDLEtBQUssQ0FBVixFQUFhO0FBQ2xCLFdBQU9ELEdBQUcsQ0FBQ0ssR0FBSixDQUFRQyxFQUFFLElBQUksQ0FBQ0EsRUFBRCxDQUFkLENBQVA7QUFDRCxHQUZNLE1BR0wsS0FBSyxJQUFJQyxDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHUCxHQUFHLENBQUNMLE1BQUosR0FBYU0sQ0FBYixHQUFpQixDQUFyQyxFQUF3Q00sQ0FBQyxFQUF6QyxFQUE2QztBQUMzQyxTQUFLLE1BQU1DLFFBQVgsSUFBdUJULFlBQVksQ0FBQ0MsR0FBRyxDQUFDRixLQUFKLENBQVVTLENBQUMsR0FBRyxDQUFkLENBQUQsRUFBbUJOLENBQUMsR0FBRyxDQUF2QixDQUFuQyxFQUNFLE1BQU0sQ0FBQ0QsR0FBRyxDQUFDTyxDQUFELENBQUosRUFBUyxHQUFHQyxRQUFaLENBQU47QUFDSDtBQUNKIiwiZmlsZSI6IjE4MS5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiogcHJvZHVjdCguLi5hcnJzKSB7XG4gIGlmIChhcnJzLmxlbmd0aCA9PT0gMCkgeWllbGQgW107XG4gIGVsc2VcbiAgICBmb3IgKGNvbnN0IGggb2YgYXJyc1swXSlcbiAgICAgIGZvciAoY29uc3QgdHMgb2YgcHJvZHVjdCguLi5hcnJzLnNsaWNlKDEpKSkgeWllbGQgW2gsIC4uLnRzXTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uKiBjb21iaW5hdGlvbnMoYXJyLCBuKSB7XG4gIGlmICghTnVtYmVyLmlzU2FmZUludGVnZXIobikgfHwgbiA8IDApXG4gICAgdGhyb3cgbmV3IEVycm9yKGBpbnZhbGlkIGNvbWJpbmF0aW9uIHNpemUgJHtufWApO1xuXG4gIGlmIChhcnIubGVuZ3RoIDwgbikge1xuICAgIHJldHVybjtcbiAgfSBlbHNlIGlmIChuID09PSAwKSB7XG4gICAgeWllbGQgW107XG4gIH0gZWxzZSBpZiAobiA9PT0gMSkge1xuICAgIHlpZWxkKiBhcnIubWFwKGVsID0+IFtlbF0pO1xuICB9IGVsc2VcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGFyci5sZW5ndGggLSBuICsgMTsgaSsrKSB7XG4gICAgICBmb3IgKGNvbnN0IHN1YlR1cGxlIG9mIGNvbWJpbmF0aW9ucyhhcnIuc2xpY2UoaSArIDEpLCBuIC0gMSkpXG4gICAgICAgIHlpZWxkIFthcnJbaV0sIC4uLnN1YlR1cGxlXTtcbiAgICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///181\n')},532:function(module,exports,__webpack_require__){eval("\nvar content = __webpack_require__(533);\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(4)(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvU2lkZWJhci9zaWRlYmFyLnNjc3M/NmUwMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EsY0FBYyxtQkFBTyxDQUFDLEdBQXlIOztBQUUvSSw0Q0FBNEMsUUFBUzs7QUFFckQ7QUFDQTs7OztBQUlBLGVBQWU7O0FBRWY7QUFDQTs7QUFFQSxhQUFhLG1CQUFPLENBQUMsQ0FBc0Q7O0FBRTNFOztBQUVBLEdBQUcsS0FBVSxFQUFFIiwiZmlsZSI6IjUzMi5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS01LTEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9zaWRlYmFyLnNjc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTUtMSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL3NpZGViYXIuc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTUtMSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL3NpZGViYXIuc2Nzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///532\n")},533:function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(3)(false);\n// Module\nexports.push([module.i, ".sidebar__sidebar--2069T{height:100%;height:calc(100vh - 7.5rem)}\\n", ""]);\n// Exports\nexports.locals = {\n\t"sidebar": "sidebar__sidebar--2069T"\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvU2lkZWJhci9zaWRlYmFyLnNjc3M/Zjg1ZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSwyQkFBMkIsbUJBQU8sQ0FBQyxDQUFzRDtBQUN6RjtBQUNBLGNBQWMsUUFBUyw0QkFBNEIsWUFBWSw0QkFBNEI7QUFDM0Y7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiNTMzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuc2lkZWJhcl9fc2lkZWJhci0tMjA2OVR7aGVpZ2h0OjEwMCU7aGVpZ2h0OmNhbGMoMTAwdmggLSA3LjVyZW0pfVxcblwiLCBcIlwiXSk7XG4vLyBFeHBvcnRzXG5leHBvcnRzLmxvY2FscyA9IHtcblx0XCJzaWRlYmFyXCI6IFwic2lkZWJhcl9fc2lkZWJhci0tMjA2OVRcIlxufTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///533\n')},534:function(module,exports,__webpack_require__){eval("\nvar content = __webpack_require__(535);\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(4)(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvU2lkZWJhci9CYWxhbmNlL2JhbGFuY2Uuc2Nzcz8zMzQ1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSxjQUFjLG1CQUFPLENBQUMsR0FBK0g7O0FBRXJKLDRDQUE0QyxRQUFTOztBQUVyRDtBQUNBOzs7O0FBSUEsZUFBZTs7QUFFZjtBQUNBOztBQUVBLGFBQWEsbUJBQU8sQ0FBQyxDQUF5RDs7QUFFOUU7O0FBRUEsR0FBRyxLQUFVLEVBQUUiLCJmaWxlIjoiNTM0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTUtMSEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL2JhbGFuY2Uuc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tNS0xIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vYmFsYW5jZS5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tNS0xIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vYmFsYW5jZS5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///534\n")},535:function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(3)(false);\n// Module\nexports.push([module.i, ".balance__sidebar--zPnBJ{height:100%;height:calc(100vh - 7.5rem)}.balance__balance--2N_i_{padding:1.6rem;background-color:#fff;border-bottom:0.1rem solid #D8D8D8;font-size:1.4rem;display:flex;justify-content:space-between;align-items:center;line-height:1.3;font-size:1.3rem}.balance__balance--2N_i_ .balance__value--23BOE{font-weight:700}\\n", ""]);\n// Exports\nexports.locals = {\n\t"sidebar": "balance__sidebar--zPnBJ",\n\t"balance": "balance__balance--2N_i_",\n\t"value": "balance__value--23BOE"\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvU2lkZWJhci9CYWxhbmNlL2JhbGFuY2Uuc2Nzcz8yYjNiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDJCQUEyQixtQkFBTyxDQUFDLENBQXlEO0FBQzVGO0FBQ0EsY0FBYyxRQUFTLDRCQUE0QixZQUFZLDRCQUE0Qix5QkFBeUIsZUFBZSxzQkFBc0IsbUNBQW1DLGlCQUFpQixhQUFhLDhCQUE4QixtQkFBbUIsZ0JBQWdCLGlCQUFpQixnREFBZ0QsZ0JBQWdCO0FBQzVXO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiI1MzUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKShmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5iYWxhbmNlX19zaWRlYmFyLS16UG5CSntoZWlnaHQ6MTAwJTtoZWlnaHQ6Y2FsYygxMDB2aCAtIDcuNXJlbSl9LmJhbGFuY2VfX2JhbGFuY2UtLTJOX2lfe3BhZGRpbmc6MS42cmVtO2JhY2tncm91bmQtY29sb3I6I2ZmZjtib3JkZXItYm90dG9tOjAuMXJlbSBzb2xpZCAjRDhEOEQ4O2ZvbnQtc2l6ZToxLjRyZW07ZGlzcGxheTpmbGV4O2p1c3RpZnktY29udGVudDpzcGFjZS1iZXR3ZWVuO2FsaWduLWl0ZW1zOmNlbnRlcjtsaW5lLWhlaWdodDoxLjM7Zm9udC1zaXplOjEuM3JlbX0uYmFsYW5jZV9fYmFsYW5jZS0tMk5faV8gLmJhbGFuY2VfX3ZhbHVlLS0yM0JPRXtmb250LXdlaWdodDo3MDB9XFxuXCIsIFwiXCJdKTtcbi8vIEV4cG9ydHNcbmV4cG9ydHMubG9jYWxzID0ge1xuXHRcInNpZGViYXJcIjogXCJiYWxhbmNlX19zaWRlYmFyLS16UG5CSlwiLFxuXHRcImJhbGFuY2VcIjogXCJiYWxhbmNlX19iYWxhbmNlLS0yTl9pX1wiLFxuXHRcInZhbHVlXCI6IFwiYmFsYW5jZV9fdmFsdWUtLTIzQk9FXCJcbn07Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///535\n')},536:function(module,exports,__webpack_require__){eval("\nvar content = __webpack_require__(537);\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(4)(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvU2lkZWJhci9CdXkvYnV5LnNjc3M/MzcyZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EsY0FBYyxtQkFBTyxDQUFDLEdBQTJIOztBQUVqSiw0Q0FBNEMsUUFBUzs7QUFFckQ7QUFDQTs7OztBQUlBLGVBQWU7O0FBRWY7QUFDQTs7QUFFQSxhQUFhLG1CQUFPLENBQUMsQ0FBeUQ7O0FBRTlFOztBQUVBLEdBQUcsS0FBVSxFQUFFIiwiZmlsZSI6IjUzNi5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS01LTEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9idXkuc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tNS0xIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vYnV5LnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS01LTEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9idXkuc2Nzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///536\n")},537:function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(3)(false);\n// Module\nexports.push([module.i, ".buy__sidebar--32sfR{height:100%;height:calc(100vh - 7.5rem)}.buy__buy-heading--ZwO71{padding:1.6rem;background-color:#fff;border-bottom:0.1rem solid #D8D8D8;font-size:1.4rem;display:flex;justify-content:space-between;align-items:center;line-height:1.3;font-weight:700}.buy__buy-subheading--3lko1{padding:1.6rem;background-color:#fff;border-bottom:0.1rem solid #D8D8D8;font-size:1.4rem;display:flex;justify-content:space-between;align-items:center;line-height:1.3;font-weight:700;font-size:1.3rem;color:#526877;letter-spacing:0;text-align:center;border:0;justify-content:center;padding:1.8rem}.buy__buy-empty--3z0Ch{padding:1.6rem;background-color:#fff;border-bottom:0.1rem solid #D8D8D8;font-size:1.4rem;display:flex;justify-content:space-between;align-items:center;line-height:1.3;padding:4rem 1rem;text-align:center;font-weight:700;color:#526877;border-bottom:none;white-space:wrap}.buy__buy-confirm--AtKA0{padding:1.6rem;background-color:#fff;border-bottom:0.1rem solid #D8D8D8;font-size:1.4rem;display:flex;justify-content:space-between;align-items:center;line-height:1.3;padding-top:0}.buy__buy-summary-heading--2gEr5{padding:1.6rem;background-color:#fff;border-bottom:0.1rem solid #D8D8D8;font-size:1.4rem;display:flex;justify-content:space-between;align-items:center;line-height:1.3;padding:1rem 1.2rem;font-size:1.3rem;color:#526877;border-bottom:none}.buy__buy-summary-category--3bLPZ{padding:1.6rem;background-color:#fff;border-bottom:0.1rem solid #D8D8D8;font-size:1.4rem;display:flex;justify-content:space-between;align-items:center;line-height:1.3;font-size:1.5rem;line-height:1;background-color:#F7F8FB;display:flex;justify-content:flex-start;align-items:center;min-height:4.6rem;padding:1rem 1.6rem 0;flex-flow:row wrap}.buy__buy-summary--XRY40 .buy__category-values--1WI7o{margin:-1rem 0 0 auto;flex:0 1 auto;font-size:1.3rem;letter-spacing:0;text-align:right;line-height:1}.buy__buy-summary--XRY40 .buy__category-values-positive--z-8ud{color:#02AE60}.buy__buy-summary--XRY40 .buy__category-values-negative--UuYxM{color:#FF685E}.buy__buy-summary--XRY40 .buy__category-values--1WI7o .buy__category-value--3OQGX{text-align:right;white-space:nowrap;margin:0}.buy__buy-summary--XRY40 .buy__category-values--1WI7o .buy__category-value--3OQGX.buy__value--aNcNX{font-weight:700}.buy__buy-summary--XRY40 .buy__category-values--1WI7o .buy__category-value--3OQGX.buy__margin--1T3HH{font-size:80%}.buy__buy-summary--XRY40 .buy__category-entries--EWoth{display:flex;align-self:center;flex-flow:row wrap;flex:1}.buy__buy-investment--3dvYg{padding:1.6rem;background-color:#fff;border-bottom:0.1rem solid #D8D8D8;font-size:1.4rem;display:flex;justify-content:space-between;align-items:center;line-height:1.3;padding:1.6rem;background-color:#fff;font-size:1.5rem;justify-content:space-between;line-height:1;display:flex;align-items:center;position:relative;border-bottom:none;padding-top:0}.buy__buy-investment--3dvYg .buy__buy-invest--2_YOV{padding:0;-webkit-appearance:none;appearance:none;border:none;cursor:pointer;background:none;display:flex;font-size:3.4rem;color:#009CB4;outline:0;justify-content:center;align-items:center;line-height:0;height:100%;margin:-.7rem 0 0 1rem;text-align:center}.buy__buy-investment--3dvYg .buy__buy-invest-minus--WKlnb{margin:0 1rem 0 0}.buy__buy-investment--3dvYg .buy__buy-invest--2_YOV:hover,.buy__buy-investment--3dvYg .buy__buy-invest--2_YOV:focus,.buy__buy-investment--3dvYg .buy__buy-invest--2_YOV:active{color:#00444e}.buy__buy-investment--3dvYg .buy__input-group--3RISe{position:relative;display:flex;flex-flow:row nowrap;height:5rem;padding:0;font-weight:normal;border:0.1rem solid #dedfde;border-radius:.3rem;flex:1;justify-content:space-between;margin:0}.buy__buy-investment--3dvYg .buy__input--1QDiX{border:0;font-size:1.5rem;color:#526877;letter-spacing:0;text-align:right;font-weight:normal;margin:0 0 0 auto;outline:0}.buy__buy-investment--3dvYg .buy__input--1QDiX::-webkit-inner-spin-button,.buy__buy-investment--3dvYg .buy__input--1QDiX::-webkit-outer-spin-button{-webkit-appearance:none;margin:0}.buy__buy-investment--3dvYg .buy__input-append--f8BS1{font-weight:bold;font-size:1.3rem;color:#009CB4;letter-spacing:0}.buy__button--29cej{-webkit-appearance:none;appearance:none;border:none;text-transform:uppercase;display:block;width:100%;cursor:pointer;color:#fff;background:#02AE60;border-radius:.2rem;height:5.2rem;padding:0 1rem;font-weight:700;font-size:1.4rem;letter-spacing:0.05rem}.buy__button--29cej.buy__disabled--18-R9,.buy__button--29cej:disabled{opacity:0.5;cursor:auto}.buy__link-button--1z8Wt{-webkit-appearance:none;appearance:none;background:none;border:none;color:#009CB4;font-size:1.4rem;text-align:right;text-decoration:underline;float:right;cursor:pointer;outline:0}.buy__link-button--1z8Wt:hover,.buy__link-button--1z8Wt:focus,.buy__link-button--1z8Wt:active{color:#00444e}.buy__collateral-name--1Piaf{display:flex;height:100%;justify-content:center;align-items:center;line-height:1;padding:0 1rem;font-weight:700;font-size:1.1rem;color:#009CB4;letter-spacing:0;text-align:right}\\n", ""]);\n// Exports\nexports.locals = {\n\t"sidebar": "buy__sidebar--32sfR",\n\t"buy-heading": "buy__buy-heading--ZwO71",\n\t"buy-subheading": "buy__buy-subheading--3lko1",\n\t"buy-empty": "buy__buy-empty--3z0Ch",\n\t"buy-confirm": "buy__buy-confirm--AtKA0",\n\t"buy-summary-heading": "buy__buy-summary-heading--2gEr5",\n\t"buy-summary-category": "buy__buy-summary-category--3bLPZ",\n\t"buy-summary": "buy__buy-summary--XRY40",\n\t"category-values": "buy__category-values--1WI7o",\n\t"category-values-positive": "buy__category-values-positive--z-8ud",\n\t"category-values-negative": "buy__category-values-negative--UuYxM",\n\t"category-value": "buy__category-value--3OQGX",\n\t"value": "buy__value--aNcNX",\n\t"margin": "buy__margin--1T3HH",\n\t"category-entries": "buy__category-entries--EWoth",\n\t"buy-investment": "buy__buy-investment--3dvYg",\n\t"buy-invest": "buy__buy-invest--2_YOV",\n\t"buy-invest-minus": "buy__buy-invest-minus--WKlnb",\n\t"input-group": "buy__input-group--3RISe",\n\t"input": "buy__input--1QDiX",\n\t"input-append": "buy__input-append--f8BS1",\n\t"button": "buy__button--29cej",\n\t"disabled": "buy__disabled--18-R9",\n\t"link-button": "buy__link-button--1z8Wt",\n\t"collateral-name": "buy__collateral-name--1Piaf"\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///537\n')},538:function(module,exports,__webpack_require__){eval("\nvar content = __webpack_require__(539);\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(4)(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9vdXRjb21lQ2FyZC5zY3NzPzNhYTgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLGNBQWMsbUJBQU8sQ0FBQyxHQUE2SDs7QUFFbkosNENBQTRDLFFBQVM7O0FBRXJEO0FBQ0E7Ozs7QUFJQSxlQUFlOztBQUVmO0FBQ0E7O0FBRUEsYUFBYSxtQkFBTyxDQUFDLENBQXNEOztBQUUzRTs7QUFFQSxHQUFHLEtBQVUsRUFBRSIsImZpbGUiOiI1MzguanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tNS0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vb3V0Y29tZUNhcmQuc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tNS0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vb3V0Y29tZUNhcmQuc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTUtMSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL291dGNvbWVDYXJkLnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///538\n")},539:function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(3)(false);\n// Module\nexports.push([module.i, ".outcomeCard__outcome-card--eIeOC{position:relative;margin:0 0 1rem;display:flex;white-space:nowrap}.outcomeCard__outcome-card--eIeOC :first-child{border-top-left-radius:.3rem;border-bottom-left-radius:.3rem}.outcomeCard__outcome-card--eIeOC .outcomeCard__market--1VBhd{background-color:#526877;color:#fff;font-size:1.3rem;font-weight:700;display:flex;justify-content:center;align-items:center;padding:0 .6rem;letter-spacing:.1rem}.outcomeCard__outcome-card--eIeOC .outcomeCard__outcome--IfeII{border-top-right-radius:.3rem;border-bottom-right-radius:.3rem;border:0.1rem solid #dedfde;background:#fff;border-left:none;font-weight:bold;font-size:1.3rem;color:#00193C;letter-spacing:0;line-height:1;padding:.5rem}.outcomeCard__outcome-card--eIeOC .outcomeCard__outcome--IfeII .outcomeCard__dot--3xutp{width:1.2rem;height:0;display:inline-block;position:relative}.outcomeCard__outcome-card--eIeOC .outcomeCard__outcome--IfeII .outcomeCard__dot--3xutp::after{content:\'\';display:block;background-color:currentColor;position:absolute;left:calc(50% - .6rem);width:1.2rem;height:1.2rem;margin-top:-1.1rem;border-radius:100%}.outcomeCard__outcome-card--eIeOC.outcomeCard__glue-or--2Lihv:not(:last-of-type)::after{content:\'or\'}.outcomeCard__outcome-card--eIeOC.outcomeCard__glue-and--35Q_J:not(:last-of-type)::after{content:\'&\'}.outcomeCard__outcome-card--eIeOC.outcomeCard__glue-or--2Lihv:not(:last-of-type)::after,.outcomeCard__outcome-card--eIeOC.outcomeCard__glue-and--35Q_J:not(:last-of-type)::after{height:100%;line-height:1;margin:0 .5rem;font-weight:bold;font-size:1.3rem;display:flex;align-items:center;justify-content:center}.outcomeCard__outcome-card--eIeOC.outcomeCard__prefix-IF--2eOTJ::before{height:100%;content:\'IF\';line-height:1;margin:0 .5rem 0 0;font-weight:bold;font-size:1.3rem;display:flex;align-items:center;justify-content:center}\\n", ""]);\n// Exports\nexports.locals = {\n\t"outcome-card": "outcomeCard__outcome-card--eIeOC",\n\t"market": "outcomeCard__market--1VBhd",\n\t"outcome": "outcomeCard__outcome--IfeII",\n\t"dot": "outcomeCard__dot--3xutp",\n\t"glue-or": "outcomeCard__glue-or--2Lihv",\n\t"glue-and": "outcomeCard__glue-and--35Q_J",\n\t"prefix-IF": "outcomeCard__prefix-IF--2eOTJ"\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9vdXRjb21lQ2FyZC5zY3NzP2E0NGIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsMkJBQTJCLG1CQUFPLENBQUMsQ0FBc0Q7QUFDekY7QUFDQSxjQUFjLFFBQVMscUNBQXFDLGtCQUFrQixnQkFBZ0IsYUFBYSxtQkFBbUIsK0NBQStDLDZCQUE2QixnQ0FBZ0MsOERBQThELHlCQUF5QixXQUFXLGlCQUFpQixnQkFBZ0IsYUFBYSx1QkFBdUIsbUJBQW1CLGdCQUFnQixxQkFBcUIsK0RBQStELDhCQUE4QixpQ0FBaUMsNEJBQTRCLGdCQUFnQixpQkFBaUIsaUJBQWlCLGlCQUFpQixjQUFjLGlCQUFpQixjQUFjLGNBQWMsd0ZBQXdGLGFBQWEsU0FBUyxxQkFBcUIsa0JBQWtCLCtGQUErRixXQUFXLGNBQWMsOEJBQThCLGtCQUFrQix1QkFBdUIsYUFBYSxjQUFjLG1CQUFtQixtQkFBbUIsd0ZBQXdGLGFBQWEseUZBQXlGLFlBQVksaUxBQWlMLFlBQVksY0FBYyxlQUFlLGlCQUFpQixpQkFBaUIsYUFBYSxtQkFBbUIsdUJBQXVCLHdFQUF3RSxZQUFZLGFBQWEsY0FBYyxtQkFBbUIsaUJBQWlCLGlCQUFpQixhQUFhLG1CQUFtQix1QkFBdUI7QUFDOTBEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjUzOS5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLm91dGNvbWVDYXJkX19vdXRjb21lLWNhcmQtLWVJZU9De3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbjowIDAgMXJlbTtkaXNwbGF5OmZsZXg7d2hpdGUtc3BhY2U6bm93cmFwfS5vdXRjb21lQ2FyZF9fb3V0Y29tZS1jYXJkLS1lSWVPQyA6Zmlyc3QtY2hpbGR7Ym9yZGVyLXRvcC1sZWZ0LXJhZGl1czouM3JlbTtib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOi4zcmVtfS5vdXRjb21lQ2FyZF9fb3V0Y29tZS1jYXJkLS1lSWVPQyAub3V0Y29tZUNhcmRfX21hcmtldC0tMVZCaGR7YmFja2dyb3VuZC1jb2xvcjojNTI2ODc3O2NvbG9yOiNmZmY7Zm9udC1zaXplOjEuM3JlbTtmb250LXdlaWdodDo3MDA7ZGlzcGxheTpmbGV4O2p1c3RpZnktY29udGVudDpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmc6MCAuNnJlbTtsZXR0ZXItc3BhY2luZzouMXJlbX0ub3V0Y29tZUNhcmRfX291dGNvbWUtY2FyZC0tZUllT0MgLm91dGNvbWVDYXJkX19vdXRjb21lLS1JZmVJSXtib3JkZXItdG9wLXJpZ2h0LXJhZGl1czouM3JlbTtib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czouM3JlbTtib3JkZXI6MC4xcmVtIHNvbGlkICNkZWRmZGU7YmFja2dyb3VuZDojZmZmO2JvcmRlci1sZWZ0Om5vbmU7Zm9udC13ZWlnaHQ6Ym9sZDtmb250LXNpemU6MS4zcmVtO2NvbG9yOiMwMDE5M0M7bGV0dGVyLXNwYWNpbmc6MDtsaW5lLWhlaWdodDoxO3BhZGRpbmc6LjVyZW19Lm91dGNvbWVDYXJkX19vdXRjb21lLWNhcmQtLWVJZU9DIC5vdXRjb21lQ2FyZF9fb3V0Y29tZS0tSWZlSUkgLm91dGNvbWVDYXJkX19kb3QtLTN4dXRwe3dpZHRoOjEuMnJlbTtoZWlnaHQ6MDtkaXNwbGF5OmlubGluZS1ibG9jaztwb3NpdGlvbjpyZWxhdGl2ZX0ub3V0Y29tZUNhcmRfX291dGNvbWUtY2FyZC0tZUllT0MgLm91dGNvbWVDYXJkX19vdXRjb21lLS1JZmVJSSAub3V0Y29tZUNhcmRfX2RvdC0tM3h1dHA6OmFmdGVye2NvbnRlbnQ6Jyc7ZGlzcGxheTpibG9jaztiYWNrZ3JvdW5kLWNvbG9yOmN1cnJlbnRDb2xvcjtwb3NpdGlvbjphYnNvbHV0ZTtsZWZ0OmNhbGMoNTAlIC0gLjZyZW0pO3dpZHRoOjEuMnJlbTtoZWlnaHQ6MS4ycmVtO21hcmdpbi10b3A6LTEuMXJlbTtib3JkZXItcmFkaXVzOjEwMCV9Lm91dGNvbWVDYXJkX19vdXRjb21lLWNhcmQtLWVJZU9DLm91dGNvbWVDYXJkX19nbHVlLW9yLS0yTGlodjpub3QoOmxhc3Qtb2YtdHlwZSk6OmFmdGVye2NvbnRlbnQ6J29yJ30ub3V0Y29tZUNhcmRfX291dGNvbWUtY2FyZC0tZUllT0Mub3V0Y29tZUNhcmRfX2dsdWUtYW5kLS0zNVFfSjpub3QoOmxhc3Qtb2YtdHlwZSk6OmFmdGVye2NvbnRlbnQ6JyYnfS5vdXRjb21lQ2FyZF9fb3V0Y29tZS1jYXJkLS1lSWVPQy5vdXRjb21lQ2FyZF9fZ2x1ZS1vci0tMkxpaHY6bm90KDpsYXN0LW9mLXR5cGUpOjphZnRlciwub3V0Y29tZUNhcmRfX291dGNvbWUtY2FyZC0tZUllT0Mub3V0Y29tZUNhcmRfX2dsdWUtYW5kLS0zNVFfSjpub3QoOmxhc3Qtb2YtdHlwZSk6OmFmdGVye2hlaWdodDoxMDAlO2xpbmUtaGVpZ2h0OjE7bWFyZ2luOjAgLjVyZW07Zm9udC13ZWlnaHQ6Ym9sZDtmb250LXNpemU6MS4zcmVtO2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7anVzdGlmeS1jb250ZW50OmNlbnRlcn0ub3V0Y29tZUNhcmRfX291dGNvbWUtY2FyZC0tZUllT0Mub3V0Y29tZUNhcmRfX3ByZWZpeC1JRi0tMmVPVEo6OmJlZm9yZXtoZWlnaHQ6MTAwJTtjb250ZW50OidJRic7bGluZS1oZWlnaHQ6MTttYXJnaW46MCAuNXJlbSAwIDA7Zm9udC13ZWlnaHQ6Ym9sZDtmb250LXNpemU6MS4zcmVtO2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7anVzdGlmeS1jb250ZW50OmNlbnRlcn1cXG5cIiwgXCJcIl0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0cy5sb2NhbHMgPSB7XG5cdFwib3V0Y29tZS1jYXJkXCI6IFwib3V0Y29tZUNhcmRfX291dGNvbWUtY2FyZC0tZUllT0NcIixcblx0XCJtYXJrZXRcIjogXCJvdXRjb21lQ2FyZF9fbWFya2V0LS0xVkJoZFwiLFxuXHRcIm91dGNvbWVcIjogXCJvdXRjb21lQ2FyZF9fb3V0Y29tZS0tSWZlSUlcIixcblx0XCJkb3RcIjogXCJvdXRjb21lQ2FyZF9fZG90LS0zeHV0cFwiLFxuXHRcImdsdWUtb3JcIjogXCJvdXRjb21lQ2FyZF9fZ2x1ZS1vci0tMkxpaHZcIixcblx0XCJnbHVlLWFuZFwiOiBcIm91dGNvbWVDYXJkX19nbHVlLWFuZC0tMzVRX0pcIixcblx0XCJwcmVmaXgtSUZcIjogXCJvdXRjb21lQ2FyZF9fcHJlZml4LUlGLS0yZU9USlwiXG59OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///539\n')},540:function(module,exports,__webpack_require__){eval("\nvar content = __webpack_require__(541);\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(4)(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvU2lkZWJhci9Qb3NpdGlvbnMvcG9zaXRpb25zLnNjc3M/YThmOSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EsY0FBYyxtQkFBTyxDQUFDLEdBQWlJOztBQUV2Siw0Q0FBNEMsUUFBUzs7QUFFckQ7QUFDQTs7OztBQUlBLGVBQWU7O0FBRWY7QUFDQTs7QUFFQSxhQUFhLG1CQUFPLENBQUMsQ0FBeUQ7O0FBRTlFOztBQUVBLEdBQUcsS0FBVSxFQUFFIiwiZmlsZSI6IjU0MC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS01LTEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9wb3NpdGlvbnMuc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tNS0xIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vcG9zaXRpb25zLnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS01LTEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9wb3NpdGlvbnMuc2Nzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///540\n")},541:function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(3)(false);\n// Module\nexports.push([module.i, ".positions__sidebar--26KoX{height:100%;height:calc(100vh - 7.5rem)}.positions__positions-heading--2r16d{padding:1.6rem;background-color:#fff;border-bottom:0.1rem solid #D8D8D8;font-size:1.4rem;display:flex;justify-content:space-between;align-items:center;line-height:1.3;font-weight:700}.positions__positions-empty--3bkxV{padding:1.6rem;background-color:#fff;border-bottom:0.1rem solid #D8D8D8;font-size:1.4rem;display:flex;justify-content:space-between;align-items:center;line-height:1.3;padding:4rem 1rem;text-align:center;font-weight:700;color:#526877;font-size:1.4rem;justify-content:center}.positions__positions-subheading--2Hq7p{padding:1.6rem;background-color:#fff;border-bottom:0.1rem solid #D8D8D8;font-size:1.4rem;display:flex;justify-content:space-between;align-items:center;line-height:1.3;border-bottom:none;font-weight:400;display:flex;font-size:1.3rem;color:#526877;letter-spacing:0;height:3.2rem;padding:1.6rem}.positions__positions-redeem--31TBQ{padding:1.6rem;background-color:#fff;border-bottom:0.1rem solid #D8D8D8;font-size:1.4rem;display:flex;justify-content:space-between;align-items:center;line-height:1.3;border-bottom:none}.positions__positions-redeem--31TBQ .positions__redeem-all--1ycNl{-webkit-appearance:none;appearance:none;border:none;background-color:#02AE60;border-radius:.2rem;text-transform:uppercase;display:block;width:100%;padding:1rem 0;color:#fff}.positions__positions-redeem--31TBQ .positions__redeem-all--1ycNl.positions__disabled--7h_Hp,.positions__positions-redeem--31TBQ .positions__redeem-all--1ycNl:disabled{opacity:0.4}.positions__position-entry--3pTQ5{display:flex;align-self:flex-start;flex-wrap:wrap;padding:1.6rem;background-color:#fff;border-bottom:0.1rem solid #D8D8D8;font-size:1.4rem;display:flex;justify-content:space-between;align-items:center;line-height:1.3;padding-top:0;padding-bottom:0;border-bottom:none}.positions__position-entry--3pTQ5 .positions__value--3peuo{text-align:right;padding:0.3rem;margin:0}.positions__position-sell--n7B4h .positions__button--1ZXv3{appearance:none;-webkit-appearance:none;border-radius:.3rem;background-color:#FF685E;color:#fff;text-transform:uppercase;border:0;font-weight:700;font-size:1.3rem;letter-spacing:0;text-align:center;padding:.5rem 1.2rem}.positions__position-col-outcome--2J6ss{width:33%}.positions__position-col-value--3I8GJ{width:33%;text-align:right}.positions__position-col-sell--1glfh{text-align:right;width:33%}\\n", ""]);\n// Exports\nexports.locals = {\n\t"sidebar": "positions__sidebar--26KoX",\n\t"positions-heading": "positions__positions-heading--2r16d",\n\t"positions-empty": "positions__positions-empty--3bkxV",\n\t"positions-subheading": "positions__positions-subheading--2Hq7p",\n\t"positions-redeem": "positions__positions-redeem--31TBQ",\n\t"redeem-all": "positions__redeem-all--1ycNl",\n\t"disabled": "positions__disabled--7h_Hp",\n\t"position-entry": "positions__position-entry--3pTQ5",\n\t"value": "positions__value--3peuo",\n\t"position-sell": "positions__position-sell--n7B4h",\n\t"button": "positions__button--1ZXv3",\n\t"position-col-outcome": "positions__position-col-outcome--2J6ss",\n\t"position-col-value": "positions__position-col-value--3I8GJ",\n\t"position-col-sell": "positions__position-col-sell--1glfh"\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvU2lkZWJhci9Qb3NpdGlvbnMvcG9zaXRpb25zLnNjc3M/OWQ0OSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSwyQkFBMkIsbUJBQU8sQ0FBQyxDQUF5RDtBQUM1RjtBQUNBLGNBQWMsUUFBUyw4QkFBOEIsWUFBWSw0QkFBNEIscUNBQXFDLGVBQWUsc0JBQXNCLG1DQUFtQyxpQkFBaUIsYUFBYSw4QkFBOEIsbUJBQW1CLGdCQUFnQixnQkFBZ0IsbUNBQW1DLGVBQWUsc0JBQXNCLG1DQUFtQyxpQkFBaUIsYUFBYSw4QkFBOEIsbUJBQW1CLGdCQUFnQixrQkFBa0Isa0JBQWtCLGdCQUFnQixjQUFjLGlCQUFpQix1QkFBdUIsd0NBQXdDLGVBQWUsc0JBQXNCLG1DQUFtQyxpQkFBaUIsYUFBYSw4QkFBOEIsbUJBQW1CLGdCQUFnQixtQkFBbUIsZ0JBQWdCLGFBQWEsaUJBQWlCLGNBQWMsaUJBQWlCLGNBQWMsZUFBZSxvQ0FBb0MsZUFBZSxzQkFBc0IsbUNBQW1DLGlCQUFpQixhQUFhLDhCQUE4QixtQkFBbUIsZ0JBQWdCLG1CQUFtQixrRUFBa0Usd0JBQXdCLGdCQUFnQixZQUFZLHlCQUF5QixvQkFBb0IseUJBQXlCLGNBQWMsV0FBVyxlQUFlLFdBQVcsd0tBQXdLLFlBQVksa0NBQWtDLGFBQWEsc0JBQXNCLGVBQWUsZUFBZSxzQkFBc0IsbUNBQW1DLGlCQUFpQixhQUFhLDhCQUE4QixtQkFBbUIsZ0JBQWdCLGNBQWMsaUJBQWlCLG1CQUFtQiwyREFBMkQsaUJBQWlCLGVBQWUsU0FBUywyREFBMkQsZ0JBQWdCLHdCQUF3QixvQkFBb0IseUJBQXlCLFdBQVcseUJBQXlCLFNBQVMsZ0JBQWdCLGlCQUFpQixpQkFBaUIsa0JBQWtCLHFCQUFxQix3Q0FBd0MsVUFBVSxzQ0FBc0MsVUFBVSxpQkFBaUIscUNBQXFDLGlCQUFpQixVQUFVO0FBQ3A1RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjU0MS5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLnBvc2l0aW9uc19fc2lkZWJhci0tMjZLb1h7aGVpZ2h0OjEwMCU7aGVpZ2h0OmNhbGMoMTAwdmggLSA3LjVyZW0pfS5wb3NpdGlvbnNfX3Bvc2l0aW9ucy1oZWFkaW5nLS0ycjE2ZHtwYWRkaW5nOjEuNnJlbTtiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7Ym9yZGVyLWJvdHRvbTowLjFyZW0gc29saWQgI0Q4RDhEODtmb250LXNpemU6MS40cmVtO2Rpc3BsYXk6ZmxleDtqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYmV0d2VlbjthbGlnbi1pdGVtczpjZW50ZXI7bGluZS1oZWlnaHQ6MS4zO2ZvbnQtd2VpZ2h0OjcwMH0ucG9zaXRpb25zX19wb3NpdGlvbnMtZW1wdHktLTNia3hWe3BhZGRpbmc6MS42cmVtO2JhY2tncm91bmQtY29sb3I6I2ZmZjtib3JkZXItYm90dG9tOjAuMXJlbSBzb2xpZCAjRDhEOEQ4O2ZvbnQtc2l6ZToxLjRyZW07ZGlzcGxheTpmbGV4O2p1c3RpZnktY29udGVudDpzcGFjZS1iZXR3ZWVuO2FsaWduLWl0ZW1zOmNlbnRlcjtsaW5lLWhlaWdodDoxLjM7cGFkZGluZzo0cmVtIDFyZW07dGV4dC1hbGlnbjpjZW50ZXI7Zm9udC13ZWlnaHQ6NzAwO2NvbG9yOiM1MjY4Nzc7Zm9udC1zaXplOjEuNHJlbTtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyfS5wb3NpdGlvbnNfX3Bvc2l0aW9ucy1zdWJoZWFkaW5nLS0ySHE3cHtwYWRkaW5nOjEuNnJlbTtiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7Ym9yZGVyLWJvdHRvbTowLjFyZW0gc29saWQgI0Q4RDhEODtmb250LXNpemU6MS40cmVtO2Rpc3BsYXk6ZmxleDtqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYmV0d2VlbjthbGlnbi1pdGVtczpjZW50ZXI7bGluZS1oZWlnaHQ6MS4zO2JvcmRlci1ib3R0b206bm9uZTtmb250LXdlaWdodDo0MDA7ZGlzcGxheTpmbGV4O2ZvbnQtc2l6ZToxLjNyZW07Y29sb3I6IzUyNjg3NztsZXR0ZXItc3BhY2luZzowO2hlaWdodDozLjJyZW07cGFkZGluZzoxLjZyZW19LnBvc2l0aW9uc19fcG9zaXRpb25zLXJlZGVlbS0tMzFUQlF7cGFkZGluZzoxLjZyZW07YmFja2dyb3VuZC1jb2xvcjojZmZmO2JvcmRlci1ib3R0b206MC4xcmVtIHNvbGlkICNEOEQ4RDg7Zm9udC1zaXplOjEuNHJlbTtkaXNwbGF5OmZsZXg7anVzdGlmeS1jb250ZW50OnNwYWNlLWJldHdlZW47YWxpZ24taXRlbXM6Y2VudGVyO2xpbmUtaGVpZ2h0OjEuMztib3JkZXItYm90dG9tOm5vbmV9LnBvc2l0aW9uc19fcG9zaXRpb25zLXJlZGVlbS0tMzFUQlEgLnBvc2l0aW9uc19fcmVkZWVtLWFsbC0tMXljTmx7LXdlYmtpdC1hcHBlYXJhbmNlOm5vbmU7YXBwZWFyYW5jZTpub25lO2JvcmRlcjpub25lO2JhY2tncm91bmQtY29sb3I6IzAyQUU2MDtib3JkZXItcmFkaXVzOi4ycmVtO3RleHQtdHJhbnNmb3JtOnVwcGVyY2FzZTtkaXNwbGF5OmJsb2NrO3dpZHRoOjEwMCU7cGFkZGluZzoxcmVtIDA7Y29sb3I6I2ZmZn0ucG9zaXRpb25zX19wb3NpdGlvbnMtcmVkZWVtLS0zMVRCUSAucG9zaXRpb25zX19yZWRlZW0tYWxsLS0xeWNObC5wb3NpdGlvbnNfX2Rpc2FibGVkLS03aF9IcCwucG9zaXRpb25zX19wb3NpdGlvbnMtcmVkZWVtLS0zMVRCUSAucG9zaXRpb25zX19yZWRlZW0tYWxsLS0xeWNObDpkaXNhYmxlZHtvcGFjaXR5OjAuNH0ucG9zaXRpb25zX19wb3NpdGlvbi1lbnRyeS0tM3BUUTV7ZGlzcGxheTpmbGV4O2FsaWduLXNlbGY6ZmxleC1zdGFydDtmbGV4LXdyYXA6d3JhcDtwYWRkaW5nOjEuNnJlbTtiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7Ym9yZGVyLWJvdHRvbTowLjFyZW0gc29saWQgI0Q4RDhEODtmb250LXNpemU6MS40cmVtO2Rpc3BsYXk6ZmxleDtqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYmV0d2VlbjthbGlnbi1pdGVtczpjZW50ZXI7bGluZS1oZWlnaHQ6MS4zO3BhZGRpbmctdG9wOjA7cGFkZGluZy1ib3R0b206MDtib3JkZXItYm90dG9tOm5vbmV9LnBvc2l0aW9uc19fcG9zaXRpb24tZW50cnktLTNwVFE1IC5wb3NpdGlvbnNfX3ZhbHVlLS0zcGV1b3t0ZXh0LWFsaWduOnJpZ2h0O3BhZGRpbmc6MC4zcmVtO21hcmdpbjowfS5wb3NpdGlvbnNfX3Bvc2l0aW9uLXNlbGwtLW43QjRoIC5wb3NpdGlvbnNfX2J1dHRvbi0tMVpYdjN7YXBwZWFyYW5jZTpub25lOy13ZWJraXQtYXBwZWFyYW5jZTpub25lO2JvcmRlci1yYWRpdXM6LjNyZW07YmFja2dyb3VuZC1jb2xvcjojRkY2ODVFO2NvbG9yOiNmZmY7dGV4dC10cmFuc2Zvcm06dXBwZXJjYXNlO2JvcmRlcjowO2ZvbnQtd2VpZ2h0OjcwMDtmb250LXNpemU6MS4zcmVtO2xldHRlci1zcGFjaW5nOjA7dGV4dC1hbGlnbjpjZW50ZXI7cGFkZGluZzouNXJlbSAxLjJyZW19LnBvc2l0aW9uc19fcG9zaXRpb24tY29sLW91dGNvbWUtLTJKNnNze3dpZHRoOjMzJX0ucG9zaXRpb25zX19wb3NpdGlvbi1jb2wtdmFsdWUtLTNJOEdKe3dpZHRoOjMzJTt0ZXh0LWFsaWduOnJpZ2h0fS5wb3NpdGlvbnNfX3Bvc2l0aW9uLWNvbC1zZWxsLS0xZ2xmaHt0ZXh0LWFsaWduOnJpZ2h0O3dpZHRoOjMzJX1cXG5cIiwgXCJcIl0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0cy5sb2NhbHMgPSB7XG5cdFwic2lkZWJhclwiOiBcInBvc2l0aW9uc19fc2lkZWJhci0tMjZLb1hcIixcblx0XCJwb3NpdGlvbnMtaGVhZGluZ1wiOiBcInBvc2l0aW9uc19fcG9zaXRpb25zLWhlYWRpbmctLTJyMTZkXCIsXG5cdFwicG9zaXRpb25zLWVtcHR5XCI6IFwicG9zaXRpb25zX19wb3NpdGlvbnMtZW1wdHktLTNia3hWXCIsXG5cdFwicG9zaXRpb25zLXN1YmhlYWRpbmdcIjogXCJwb3NpdGlvbnNfX3Bvc2l0aW9ucy1zdWJoZWFkaW5nLS0ySHE3cFwiLFxuXHRcInBvc2l0aW9ucy1yZWRlZW1cIjogXCJwb3NpdGlvbnNfX3Bvc2l0aW9ucy1yZWRlZW0tLTMxVEJRXCIsXG5cdFwicmVkZWVtLWFsbFwiOiBcInBvc2l0aW9uc19fcmVkZWVtLWFsbC0tMXljTmxcIixcblx0XCJkaXNhYmxlZFwiOiBcInBvc2l0aW9uc19fZGlzYWJsZWQtLTdoX0hwXCIsXG5cdFwicG9zaXRpb24tZW50cnlcIjogXCJwb3NpdGlvbnNfX3Bvc2l0aW9uLWVudHJ5LS0zcFRRNVwiLFxuXHRcInZhbHVlXCI6IFwicG9zaXRpb25zX192YWx1ZS0tM3BldW9cIixcblx0XCJwb3NpdGlvbi1zZWxsXCI6IFwicG9zaXRpb25zX19wb3NpdGlvbi1zZWxsLS1uN0I0aFwiLFxuXHRcImJ1dHRvblwiOiBcInBvc2l0aW9uc19fYnV0dG9uLS0xWlh2M1wiLFxuXHRcInBvc2l0aW9uLWNvbC1vdXRjb21lXCI6IFwicG9zaXRpb25zX19wb3NpdGlvbi1jb2wtb3V0Y29tZS0tMko2c3NcIixcblx0XCJwb3NpdGlvbi1jb2wtdmFsdWVcIjogXCJwb3NpdGlvbnNfX3Bvc2l0aW9uLWNvbC12YWx1ZS0tM0k4R0pcIixcblx0XCJwb3NpdGlvbi1jb2wtc2VsbFwiOiBcInBvc2l0aW9uc19fcG9zaXRpb24tY29sLXNlbGwtLTFnbGZoXCJcbn07Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///541\n')},571:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ../node_modules/react/index.js\nvar react = __webpack_require__(0);\nvar react_default = /*#__PURE__*/__webpack_require__.n(react);\n\n// EXTERNAL MODULE: ../node_modules/classnames/bind.js\nvar bind = __webpack_require__(2);\nvar bind_default = /*#__PURE__*/__webpack_require__.n(bind);\n\n// EXTERNAL MODULE: ./src/Sidebar/sidebar.scss\nvar sidebar = __webpack_require__(532);\nvar sidebar_default = /*#__PURE__*/__webpack_require__.n(sidebar);\n\n// EXTERNAL MODULE: ./src/utils/formatting.js\nvar formatting = __webpack_require__(83);\n\n// EXTERNAL MODULE: ./src/utils/constants.js\nvar constants = __webpack_require__(58);\n\n// EXTERNAL MODULE: ./src/Sidebar/Balance/balance.scss\nvar balance = __webpack_require__(534);\nvar balance_default = /*#__PURE__*/__webpack_require__.n(balance);\n\n// CONCATENATED MODULE: ./src/Sidebar/Balance/index.js\n\n\n\n\n\nconst cx = bind_default.a.bind(balance_default.a);\n\nconst Balance = ({\n  collateral,\n  collateralBalance\n}) => {\n  return react_default.a.createElement("div", {\n    className: cx("balance")\n  }, react_default.a.createElement("div", {\n    className: cx("label")\n  }, "Wallet Balance"), react_default.a.createElement("div", {\n    className: cx("value")\n  }, Object(formatting["a" /* formatCollateral */])(collateralBalance ? collateralBalance.totalAmount : constants["f" /* zeroDecimal */], collateral)));\n};\n\n/* harmony default export */ var Sidebar_Balance = (Balance);\n// EXTERNAL MODULE: ../node_modules/prop-types/index.js\nvar prop_types = __webpack_require__(1);\nvar prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);\n\n// EXTERNAL MODULE: ../node_modules/decimal.js-light/decimal.js\nvar decimal = __webpack_require__(5);\nvar decimal_default = /*#__PURE__*/__webpack_require__.n(decimal);\n\n// EXTERNAL MODULE: ../node_modules/web3/src/index.js\nvar src = __webpack_require__(17);\nvar src_default = /*#__PURE__*/__webpack_require__.n(src);\n\n// EXTERNAL MODULE: ./src/Sidebar/Buy/buy.scss\nvar buy = __webpack_require__(536);\nvar buy_default = /*#__PURE__*/__webpack_require__.n(buy);\n\n// EXTERNAL MODULE: ./src/components/outcomeCard.scss\nvar outcomeCard = __webpack_require__(538);\nvar outcomeCard_default = /*#__PURE__*/__webpack_require__.n(outcomeCard);\n\n// CONCATENATED MODULE: ./src/components/OutcomeCard.js\n\n\n\n\nconst OutcomeCard_cx = bind_default.a.bind(outcomeCard_default.a);\n\nconst OutcomeCard = ({\n  marketIndex,\n  outcomeIndex,\n  short,\n  title,\n  glueType,\n  prefixType\n}) => react_default.a.createElement("div", {\n  className: OutcomeCard_cx("outcome-card", {\n    [`glue-${glueType}`]: !!glueType,\n    [`prefix-${prefixType}`]: !!prefixType\n  })\n}, react_default.a.createElement("span", {\n  className: OutcomeCard_cx("market")\n}, "#", marketIndex + 1), react_default.a.createElement("span", {\n  className: OutcomeCard_cx("outcome")\n}, react_default.a.createElement("i", {\n  className: OutcomeCard_cx("dot"),\n  style: {\n    color: constants["d" /* outcomeColors */][outcomeIndex].darken(0.5).toString()\n  }\n}), " ", title));\n\n/* harmony default export */ var components_OutcomeCard = (OutcomeCard);\n// EXTERNAL MODULE: ./src/utils/itertools.js\nvar itertools = __webpack_require__(181);\n\n// CONCATENATED MODULE: ./src/utils/position-groups.js\n\n\n\n\nconst {\n  toBN,\n  toHex: position_groups_toHex,\n  padLeft: position_groups_padLeft\n} = src_default.a.utils;\nfunction calcOutcomeTokenCounts(positions, {\n  funding,\n  positionBalances\n}, amount, marketSelections) {\n  if (marketSelections.every(({\n    isAssumed,\n    selectedOutcomeIndex\n  }) => isAssumed || selectedOutcomeIndex === -1)) throw new Error("Pick at least one non-conditional market outcome (any row below THEN ↓).");\n  const invB = new decimal_default.a(positions.length).ln().dividedBy(funding.toString());\n  const positionTypes = new Array(positions.length).fill(null);\n  let refundedTerm = constants["f" /* zeroDecimal */];\n  let takenTerm = constants["f" /* zeroDecimal */];\n  let refusedTerm = constants["f" /* zeroDecimal */];\n  positions.forEach(({\n    positionIndex,\n    outcomes\n  }) => {\n    const balance = positionBalances[positionIndex].toString();\n\n    if (outcomes.some(({\n      marketIndex,\n      outcomeIndex\n    }) => marketSelections[marketIndex].isAssumed && outcomeIndex !== marketSelections[marketIndex].selectedOutcomeIndex)) {\n      refundedTerm = refundedTerm.add(amount.sub(balance).mul(invB).exp());\n      positionTypes[positionIndex] = "refunded";\n    } else if (outcomes.every(({\n      marketIndex,\n      outcomeIndex\n    }) => marketSelections[marketIndex].selectedOutcomeIndex == -1 || outcomeIndex === marketSelections[marketIndex].selectedOutcomeIndex)) {\n      takenTerm = takenTerm.add(invB.mul(balance).neg().exp());\n      positionTypes[positionIndex] = "taken";\n    } else {\n      refusedTerm = refusedTerm.add(invB.mul(balance).neg().exp());\n      positionTypes[positionIndex] = "refused";\n    }\n  });\n  const takenPositionsAmountEach = amount.mul(invB).exp().sub(refundedTerm).sub(refusedTerm).div(takenTerm).ln().div(invB).toInteger();\n  return positionTypes.map(type => {\n    if (type === "taken") return takenPositionsAmountEach;\n    if (type === "refunded") return amount;\n    if (type === "refused") return constants["f" /* zeroDecimal */];\n    throw new Error(`Position types [${positionTypes.join(", ")}] invalid`);\n  });\n}\nfunction calcPositionGroups(markets, positions, positionAmounts) {\n  const positionGroups = [];\n  let positionAmountsCopy = positionAmounts.map(amount => toBN(amount.toFixed ? amount.toFixed(0) : amount.toString()));\n  let runningPositionAmounts = positionAmountsCopy.slice();\n  let outcomesToCombine = markets.map((market, marketIndex) => market.outcomes.map((outcome, outcomeIndex) => ({ ...outcome,\n    marketIndex,\n    outcomeIndex\n  })));\n\n  for (let numMarkets = 0; numMarkets <= markets.length; ++numMarkets) {\n    for (const outcomesTuples of Object(itertools["combinations"])(outcomesToCombine, numMarkets)) {\n      for (const outcomeSet of Object(itertools["product"])(...outcomesTuples)) {\n        const groupPositions = outcomeSet.reduce((positionsIntersection, {\n          positions: outcomePositions\n        }) => positionsIntersection.filter(({\n          id\n        }) => outcomePositions.find(({\n          id: otherId\n        }) => id === otherId) != null), positions);\n        const [groupAmount, groupRunningAmount] = groupPositions.reduce(([accAmount, accRunningAmount], {\n          positionIndex\n        }) => [accAmount.lte(positionAmountsCopy[positionIndex]) ? accAmount : positionAmountsCopy[positionIndex], accRunningAmount.lte(runningPositionAmounts[positionIndex]) ? accRunningAmount : runningPositionAmounts[positionIndex]], [constants["b" /* maxUint256BN */], constants["b" /* maxUint256BN */]]);\n\n        if (groupRunningAmount.gtn(0)) {\n          positionGroups.push({\n            collectionId: position_groups_padLeft(position_groups_toHex(outcomeSet.reduce((acc, {\n              collectionId\n            }) => acc.add(toBN(collectionId)), toBN(0))), 64),\n            outcomeSet,\n            amount: groupAmount,\n            runningAmount: groupRunningAmount,\n            positions: groupPositions\n          });\n\n          for (const {\n            positionIndex\n          } of groupPositions) {\n            runningPositionAmounts[positionIndex] = runningPositionAmounts[positionIndex].sub(groupRunningAmount);\n          }\n        }\n      }\n    }\n  }\n\n  return positionGroups;\n}\n// CONCATENATED MODULE: ./src/Sidebar/Buy/index.js\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n\n\n\n\n\n\n\n\n\n\nconst {\n  BN\n} = src_default.a.utils;\nconst Buy_cx = bind_default.a.bind(buy_default.a);\n\nconst Buy = ({\n  account,\n  markets,\n  positions,\n  collateral,\n  collateralBalance,\n  lmsrMarketMaker,\n  lmsrState,\n  marketSelections,\n  stagedTradeAmounts,\n  setStagedTradeAmounts,\n  stagedTransactionType,\n  setStagedTransactionType,\n  ongoingTransactionType,\n  resetMarketSelections,\n  asWrappedTransaction\n}) => {\n  const [investmentAmount, setInvestmentAmount] = Object(react["useState"])("");\n  const [humanReadablePositions, setHumanReadablePositions] = Object(react["useState"])(null);\n  const [error, setError] = Object(react["useState"])(null);\n  Object(react["useEffect"])(() => {\n    //if (stagedTransactionType !== "buy outcome tokens") return;\n    let hasEnteredInvestment = false;\n\n    try {\n      const decimalInvest = decimal_default()(investmentAmount);\n      hasEnteredInvestment = decimalInvest.gt(0);\n    } catch (e) {//\n    }\n\n    if (!(marketSelections || []).some(({\n      selectedOutcomeIndex\n    }) => selectedOutcomeIndex > -1)) {\n      setStagedTradeAmounts(null);\n      return;\n    }\n\n    try {\n      const investmentAmountInUnits = collateral.toUnitsMultiplier.mul(hasEnteredInvestment ? investmentAmount : constants["f" /* zeroDecimal */]);\n      if (!investmentAmountInUnits.isInteger()) throw new Error(`Got more than ${collateral.decimals} decimals in value ${investmentAmount}`);\n      setStagedTradeAmounts(calcOutcomeTokenCounts(positions, lmsrState, investmentAmountInUnits, marketSelections));\n      setError(null);\n    } catch (e) {\n      setStagedTradeAmounts(null);\n      setError(e);\n    }\n  }, [stagedTransactionType, positions, collateral, collateralBalance, lmsrState, investmentAmount, marketSelections]);\n  const marketStage = lmsrState && lmsrState.stage;\n  let hasAnyAllowance = false;\n  const buyOutcomeTokens = Object(react["useCallback"])(async () => {\n    if (stagedTradeAmounts == null) throw new Error(`No buy set yet`);\n    if (stagedTransactionType !== "buy outcome tokens") throw new Error(`Can\'t buy outcome tokens while staged transaction is to ${stagedTransactionType}`);\n    let investmentAmountInUnits;\n\n    try {\n      investmentAmountInUnits = collateral.toUnitsMultiplier.mul(investmentAmount);\n    } catch (err) {\n      investmentAmountInUnits = constants["f" /* zeroDecimal */];\n    }\n\n    if (investmentAmountInUnits.gt(collateralBalance.totalAmount.toString())) throw new Error(`Not enough collateral: missing ${Object(formatting["a" /* formatCollateral */])(investmentAmountInUnits.sub(collateralBalance.totalAmount.toString()), collateral)}`);\n    const tradeAmounts = stagedTradeAmounts.map(amount => amount.toString());\n    const collateralLimit = await lmsrMarketMaker.calcNetCost(tradeAmounts);\n\n    if (collateral.isWETH && collateralLimit.gt(collateralBalance.amount)) {\n      await collateral.contract.deposit({\n        value: collateralLimit.sub(collateralBalance.amount),\n        from: account\n      });\n    }\n\n    if (!hasAnyAllowance) {\n      await collateral.contract.approve(lmsrMarketMaker.address, constants["b" /* maxUint256BN */], {\n        from: account\n      });\n    }\n\n    await lmsrMarketMaker.trade(tradeAmounts, collateralLimit, {\n      from: account\n    });\n  }, [hasAnyAllowance, stagedTransactionType, stagedTradeAmounts, lmsrMarketMaker, collateral, account]);\n  const [stagedTradePositionGroups, setStagedTradePositionGroups] = Object(react["useState"])([]);\n  Object(react["useEffect"])(() => {\n    setStagedTradePositionGroups(stagedTradeAmounts && calcPositionGroups(markets, positions, stagedTradeAmounts));\n  }, [markets, positions, stagedTradeAmounts]);\n  let problemText;\n\n  if (!marketStage === "Closed") {\n    problemText = "The Market is closed.";\n  } else if (!marketSelections) {\n    problemText = "Select position(s) first.";\n  }\n\n  const makeStepper = Object(react["useCallback"])(amount => {\n    return () => {\n      setStagedTransactionType("buy outcome tokens");\n      setInvestmentAmount(prevValue => {\n        let prevValueDecimal;\n\n        try {\n          if (prevValue === "") {\n            prevValueDecimal = decimal_default()(0);\n          } else {\n            prevValueDecimal = decimal_default()(prevValue);\n          }\n        } catch (err) {\n          return prevValue;\n        }\n\n        return prevValueDecimal.add(amount).toString();\n      });\n    };\n  }, []);\n  const setInvestmentMax = Object(react["useCallback"])(() => {\n    if (collateralBalance != null && collateral != null) {\n      setStagedTransactionType("buy outcome tokens");\n      setInvestmentAmount(decimal_default()(collateralBalance.totalAmount.toString()).div(Math.pow(10, collateral.decimals)).toFixed(4));\n    }\n  }, [collateralBalance, collateral]);\n  const clearAllPositions = Object(react["useCallback"])(() => {\n    setStagedTransactionType(null);\n    setStagedTradeAmounts(null);\n    setInvestmentAmount("");\n    resetMarketSelections(null);\n    setError(null);\n  }, [setStagedTradeAmounts, setInvestmentAmount, setError]);\n  Object(react["useEffect"])(() => {\n    const hasConditional = (marketSelections || []).some(({\n      isAssumed\n    }) => isAssumed);\n    let humanReadablePositions = {\n      payOutWhen: {\n        title: "Pay out when:",\n        getGlue: () => "and",\n        getPrefix: () => "IF",\n        positions: []\n      },\n      loseInvestmentWhen: {\n        title: "Lose investment when:",\n        positions: [],\n        getGlue: () => hasConditional ? "and" : "or",\n        getPrefix: () => "IF"\n      },\n      refundWhen: {\n        title: "Refund when:",\n        positions: [],\n        getGlue: () => "or",\n        getPrefix: () => "IF"\n      }\n    };\n    (stagedTradePositionGroups || []).forEach(({\n      outcomeSet,\n      runningAmount\n    }) => {\n      let hasEnteredInvestment;\n\n      try {\n        const decimalInvest = decimal_default()(investmentAmount);\n        hasEnteredInvestment = decimalInvest.gt(0);\n      } catch (err) {} //\n      // all payouts\n\n\n      humanReadablePositions.payOutWhen.positions = outcomeSet;\n      humanReadablePositions.payOutWhen.runningAmount = hasEnteredInvestment ? runningAmount : constants["f" /* zeroDecimal */]; // all lose invests\n      // invert outcome sets\n\n      humanReadablePositions.loseInvestmentWhen.positions = outcomeSet.map(outcome => {\n        if (outcome.outcomeIndex == -1) {\n          return outcome;\n        }\n\n        return { ...outcome,\n          ...markets[outcome.marketIndex].outcomes[outcome.outcomeIndex == 0 && !marketSelections[outcome.marketIndex].isAssumed ? 1 : 0],\n          outcomeIndex: outcome.outcomeIndex == 0 && !marketSelections[outcome.marketIndex].isAssumed ? 1 : 0\n        };\n      });\n      humanReadablePositions.loseInvestmentWhen.runningAmount = decimal_default()(hasEnteredInvestment ? investmentAmount : constants["f" /* zeroDecimal */]).neg().mul(Math.pow(10, collateral.decimals));\n      humanReadablePositions.loseInvestmentWhen.margin = decimal_default()(-1.0); // refund when\n      // invert outcome sets\n\n      humanReadablePositions.refundWhen.positions = outcomeSet.filter(outcome => marketSelections[outcome.marketIndex].isAssumed).map(outcome => {\n        if (outcome.outcomeIndex == -1) {\n          return outcome;\n        }\n\n        return { ...outcome,\n          ...markets[outcome.marketIndex].outcomes[outcome.outcomeIndex == 0 ? 1 : 0],\n          outcomeIndex: outcome.outcomeIndex == 0 ? 1 : 0\n        };\n      });\n      humanReadablePositions.refundWhen.runningAmount = decimal_default()(hasEnteredInvestment ? investmentAmount : constants["f" /* zeroDecimal */]).mul(Math.pow(10, collateral.decimals));\n      humanReadablePositions.refundWhen.margin = decimal_default()(1.0);\n    });\n    setHumanReadablePositions(humanReadablePositions);\n  }, [stagedTradePositionGroups]);\n  return react_default.a.createElement(react_default.a.Fragment, null, react_default.a.createElement("div", {\n    className: Buy_cx("buy-heading")\n  }, "Order Position(s)", " ", react_default.a.createElement("button", {\n    type: "button",\n    className: Buy_cx("link-button", "clear"),\n    onClick: clearAllPositions\n  }, "clear all")), problemText && react_default.a.createElement("div", {\n    className: Buy_cx("buy-empty")\n  }, problemText), error && react_default.a.createElement("div", {\n    className: Buy_cx("buy-empty")\n  }, error === true ? "An error has occured" : error.message), react_default.a.createElement("div", {\n    className: Buy_cx("buy-summary")\n  }, humanReadablePositions && [humanReadablePositions.payOutWhen, humanReadablePositions.refundWhen, humanReadablePositions.loseInvestmentWhen].filter(category => category && category.positions.length).map(category => react_default.a.createElement(react["Fragment"], {\n    key: category.title\n  }, react_default.a.createElement("div", {\n    className: Buy_cx("buy-summary-heading")\n  }, category.title), react_default.a.createElement("div", {\n    className: Buy_cx("buy-summary-category")\n  }, react_default.a.createElement("div", {\n    className: Buy_cx("category-entries")\n  }, category.positions.map(outcome => react_default.a.createElement(components_OutcomeCard, _extends({\n    key: `${outcome.marketIndex}-${outcome.outcomeIndex}`,\n    glueType: category.getGlue(),\n    prefixType: category.getPrefix()\n  }, outcome)))), react_default.a.createElement("div", {\n    className: Buy_cx("category-values")\n  }, react_default.a.createElement("p", {\n    className: Buy_cx("category-value", "value")\n  }, Object(formatting["a" /* formatCollateral */])(category.runningAmount, collateral))))))), react_default.a.createElement("div", {\n    className: Buy_cx("buy-subheading")\n  }, "Total Investment (", collateral.name, ")"), react_default.a.createElement("div", {\n    className: Buy_cx("buy-investment")\n  }, react_default.a.createElement("button", {\n    className: Buy_cx("buy-invest", "buy-invest-minus"),\n    onClick: makeStepper(-0.001),\n    type: "button"\n  }, "\\u2013"), react_default.a.createElement("div", {\n    className: Buy_cx("input-group")\n  }, react_default.a.createElement("button", {\n    className: Buy_cx("input-append", "link-button", "invest-max"),\n    onClick: setInvestmentMax,\n    type: "button"\n  }, "max"), react_default.a.createElement("input", {\n    type: "number",\n    value: investmentAmount,\n    className: Buy_cx("input"),\n    onChange: e => {\n      setStagedTransactionType("buy outcome tokens");\n      setInvestmentAmount(e.target.value);\n    }\n  }), react_default.a.createElement("span", {\n    className: Buy_cx("input-append", "collateral-name")\n  }, collateral.symbol)), react_default.a.createElement("button", {\n    className: Buy_cx("buy-invest", "buy-invest-plus"),\n    onClick: makeStepper(0.001),\n    type: "button"\n  }, "+")), react_default.a.createElement("div", {\n    className: Buy_cx("buy-confirm")\n  }, react_default.a.createElement("button", {\n    className: Buy_cx("button"),\n    type: "button",\n    disabled: //!hasEnoughAllowance ||\n    stagedTransactionType !== "buy outcome tokens" || stagedTradeAmounts == null || ongoingTransactionType != null || marketStage !== "Running" || error != null,\n    onClick: asWrappedTransaction("buy outcome tokens", buyOutcomeTokens, setError)\n  }, "Place Order")));\n};\n\nBuy.propTypes = {\n  account: prop_types_default.a.string.isRequired,\n  markets: prop_types_default.a.arrayOf(prop_types_default.a.shape({\n    outcomes: prop_types_default.a.arrayOf(prop_types_default.a.shape({\n      positions: prop_types_default.a.arrayOf(prop_types_default.a.shape({\n        id: prop_types_default.a.string.isRequired\n      }).isRequired).isRequired\n    }).isRequired).isRequired\n  }).isRequired).isRequired,\n  positions: prop_types_default.a.arrayOf(prop_types_default.a.shape({\n    id: prop_types_default.a.string.isRequired,\n    positionIndex: prop_types_default.a.number.isRequired,\n    outcomes: prop_types_default.a.arrayOf(prop_types_default.a.shape({\n      marketIndex: prop_types_default.a.number.isRequired,\n      outcomeIndex: prop_types_default.a.number.isRequired\n    }).isRequired).isRequired\n  }).isRequired).isRequired,\n  collateral: prop_types_default.a.shape({\n    contract: prop_types_default.a.object.isRequired,\n    name: prop_types_default.a.string.isRequired,\n    symbol: prop_types_default.a.string.isRequired,\n    decimals: prop_types_default.a.number.isRequired,\n    isWETH: prop_types_default.a.bool.isRequired\n  }).isRequired,\n  collateralBalance: prop_types_default.a.shape({\n    amount: prop_types_default.a.instanceOf(BN).isRequired,\n    unwrappedAmount: prop_types_default.a.instanceOf(BN),\n    totalAmount: prop_types_default.a.instanceOf(BN).isRequired\n  }),\n  lmsrMarketMaker: prop_types_default.a.object.isRequired,\n  lmsrState: prop_types_default.a.shape({\n    funding: prop_types_default.a.instanceOf(BN).isRequired,\n    positionBalances: prop_types_default.a.arrayOf(prop_types_default.a.instanceOf(BN).isRequired).isRequired,\n    stage: prop_types_default.a.string.isRequired\n  }),\n  lmsrAllowance: prop_types_default.a.instanceOf(BN),\n  marketSelections: prop_types_default.a.arrayOf(prop_types_default.a.shape({\n    isAssumed: prop_types_default.a.bool.isRequired,\n    selectedOutcomeIndex: prop_types_default.a.number\n  }).isRequired),\n  stagedTradeAmounts: prop_types_default.a.arrayOf(prop_types_default.a.instanceOf(decimal_default.a).isRequired),\n  setStagedTradeAmounts: prop_types_default.a.func.isRequired,\n  stagedTransactionType: prop_types_default.a.string,\n  setStagedTransactionType: prop_types_default.a.func.isRequired,\n  ongoingTransactionType: prop_types_default.a.string,\n  asWrappedTransaction: prop_types_default.a.func.isRequired,\n  resetMarketSelections: prop_types_default.a.func.isRequired\n};\n/* harmony default export */ var Sidebar_Buy = (Buy);\n// EXTERNAL MODULE: ./src/components/Spinner.js\nvar Spinner = __webpack_require__(7);\n\n// EXTERNAL MODULE: ./src/Sidebar/Positions/positions.scss\nvar Positions_positions = __webpack_require__(540);\nvar positions_default = /*#__PURE__*/__webpack_require__.n(Positions_positions);\n\n// CONCATENATED MODULE: ./src/Sidebar/Positions/index.js\nfunction Positions_extends() { Positions_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Positions_extends.apply(this, arguments); }\n\n\n\n\n\n\n\n\n\n\n\n\nconst Positions_cx = bind_default.a.bind(positions_default.a);\nconst {\n  toBN: Positions_toBN\n} = src_default.a.utils;\n\nfunction calcNetCost({\n  funding,\n  positionBalances\n}, tradeAmounts) {\n  const invB = new decimal_default.a(positionBalances.length).ln().dividedBy(funding.toString());\n  return tradeAmounts.reduce((acc, tradeAmount, i) => acc.add(tradeAmount.sub(positionBalances[i].toString()).mul(invB).exp()), constants["f" /* zeroDecimal */]).ln().div(invB);\n}\n\nconst Positions = ({\n  account,\n  pmSystem,\n  markets,\n  marketResolutionStates,\n  positions,\n  collateral,\n  lmsrMarketMaker,\n  lmsrState,\n  positionBalances,\n  stagedTradeAmounts,\n  setStagedTradeAmounts,\n  stagedTransactionType,\n  setStagedTransactionType,\n  ongoingTransactionType,\n  asWrappedTransaction\n}) => {\n  const [positionGroups, setPositionGroups] = Object(react["useState"])(null);\n  Object(react["useEffect"])(() => {\n    if (positionBalances == null) {\n      setPositionGroups(null);\n    } else {\n      const positionGroups = calcPositionGroups(markets, positions, positionBalances);\n      setPositionGroups(positionGroups);\n    }\n  }, [markets, positions, positionBalances]);\n  const [salePositionGroup, setSalePositionGroup] = Object(react["useState"])(null);\n  Object(react["useEffect"])(() => {\n    if (positionGroups == null) {\n      setSalePositionGroup(null);\n    } else if (salePositionGroup != null) {\n      setSalePositionGroup(positionGroups.find(({\n        collectionId\n      }) => collectionId === salePositionGroup.collectionId));\n    }\n  }, [positionGroups]);\n  const [saleAmount, setSaleAmount] = Object(react["useState"])("");\n  const [estimatedSaleEarnings, setEstimatedSaleEarnings] = Object(react["useState"])(null);\n  const [error, setError] = Object(react["useState"])(null);\n  Object(react["useEffect"])(() => {\n    if (stagedTransactionType !== "sell outcome tokens") return;\n\n    if (saleAmount === "") {\n      setStagedTradeAmounts(null);\n      setEstimatedSaleEarnings(null);\n      setError(null);\n      return;\n    }\n\n    try {\n      const saleAmountInUnits = collateral.toUnitsMultiplier.mul(saleAmount);\n      if (!saleAmountInUnits.isInteger()) throw new Error(`Got more than ${collateral.decimals} decimals in value ${saleAmount}`);\n      if (saleAmountInUnits.gt(salePositionGroup.amount.toString())) throw new Error(`Not enough collateral: missing ${Object(formatting["a" /* formatCollateral */])(saleAmountInUnits.sub(salePositionGroup.amount.toString()), collateral)}`);\n      const stagedTradeAmounts = Array.from({\n        length: positions.length\n      }, (_, i) => salePositionGroup.positions.find(({\n        positionIndex\n      }) => positionIndex === i) == null ? constants["f" /* zeroDecimal */] : saleAmountInUnits.neg());\n      setStagedTradeAmounts(stagedTradeAmounts);\n      setEstimatedSaleEarnings(calcNetCost(lmsrState, stagedTradeAmounts).neg());\n      setError(null);\n    } catch (e) {\n      setStagedTradeAmounts(null);\n      setEstimatedSaleEarnings(null);\n      setError(e);\n    }\n  }, [stagedTransactionType, collateral, positions, lmsrState, salePositionGroup, saleAmount]);\n  const sellAllTokensOfGroup = Object(react["useCallback"])(async salePositionGroup => {\n    await setStagedTransactionType("sell outcome tokens");\n\n    if (!(await pmSystem.isApprovedForAll(account, lmsrMarketMaker.address))) {\n      await pmSystem.setApprovalForAll(lmsrMarketMaker.address, true, {\n        from: account\n      });\n    }\n\n    const stagedTradeAmounts = Array.from({\n      length: positions.length\n    }, (_, i) => salePositionGroup.positions.find(({\n      positionIndex\n    }) => positionIndex === i) == null ? constants["f" /* zeroDecimal */] : salePositionGroup.amount.neg());\n    const tradeAmounts = stagedTradeAmounts.map(amount => amount.toString());\n    const collateralLimit = await lmsrMarketMaker.calcNetCost(tradeAmounts);\n    await lmsrMarketMaker.trade(tradeAmounts, collateralLimit, {\n      from: account\n    });\n  }, [account, lmsrMarketMaker, collateral]);\n  const sellOutcomeTokens = Object(react["useCallback"])(async () => {\n    if (stagedTradeAmounts == null) throw new Error(`No sell set yet`);\n    if (stagedTransactionType !== "sell outcome tokens") throw new Error(`Can\'t sell outcome tokens while staged transaction is to ${stagedTransactionType}`);\n\n    if (!(await pmSystem.isApprovedForAll(account, lmsrMarketMaker.address))) {\n      await pmSystem.setApprovalForAll(lmsrMarketMaker.address, true, {\n        from: account\n      });\n    }\n\n    const tradeAmounts = stagedTradeAmounts.map(amount => amount.toString());\n    const collateralLimit = await lmsrMarketMaker.calcNetCost(tradeAmounts);\n    asWrappedTransaction("sell outcome tokens", sellOutcomeTokens, setError);\n    await lmsrMarketMaker.trade(tradeAmounts, collateralLimit, {\n      from: account\n    });\n  }, [collateral, stagedTradeAmounts, stagedTransactionType, pmSystem, asWrappedTransaction, account]);\n  const marketStage = lmsrState && lmsrState.stage;\n  const allMarketsResolved = marketResolutionStates && marketResolutionStates.every(({\n    isResolved\n  }) => isResolved);\n  const [redemptionAmount, setRedemptionAmount] = Object(react["useState"])(null);\n  Object(react["useEffect"])(() => {\n    setRedemptionAmount(allMarketsResolved && positionBalances != null ? positionBalances.reduce((payoutSum, balance, positionIndex) => payoutSum.add(positions[positionIndex].outcomes.reduce((payoutProduct, {\n      marketIndex,\n      outcomeIndex\n    }) => payoutProduct.mul(marketResolutionStates[marketIndex].payoutNumerators[outcomeIndex]).div(marketResolutionStates[marketIndex].payoutDenominator), balance)), Positions_toBN(0)) : null);\n  }, [positions, positionBalances, marketResolutionStates]);\n  const redeemPositions = Object(react["useCallback"])(async () => {\n    if (!allMarketsResolved) throw new Error("Can\'t redeem until all markets resolved");\n\n    async function redeemPositionsThroughAllMarkets(marketsLeft, parentCollectionId) {\n      if (marketsLeft === 0) return;\n      const market = markets[marketsLeft - 1];\n      const indexSets = [];\n\n      for (let outcomeIndex = 0; outcomeIndex < market.outcomes.length; outcomeIndex++) {\n        const outcome = market.outcomes[outcomeIndex];\n        const childCollectionId = padLeft(toHex(Positions_toBN(parentCollectionId).add(Positions_toBN(outcome.collectionId)).maskn(256)), 64);\n        const childPositionId = soliditySha3({\n          t: "address",\n          v: collateral.address\n        }, {\n          t: "uint",\n          v: childCollectionId\n        });\n        await redeemPositionsThroughAllMarkets(marketsLeft - 1, childCollectionId);\n\n        if ((await pmSystem.balanceOf(account, childPositionId)).gtn(0)) {\n          indexSets.push(Positions_toBN(1).shln(outcomeIndex));\n        }\n      }\n\n      if (indexSets.length > 0) {\n        await pmSystem.redeemPositions(collateral.address, parentCollectionId, market.conditionId, indexSets, {\n          from: account\n        });\n      }\n    }\n\n    await redeemPositionsThroughAllMarkets(markets.length, `0x${"0".repeat(64)}`);\n  }, [collateral, account, pmSystem]);\n\n  if (positionGroups === null) {\n    return react_default.a.createElement(react_default.a.Fragment, null, react_default.a.createElement("div", {\n      className: Positions_cx("positions-heading")\n    }, "Your Positions"), react_default.a.createElement("div", {\n      className: Positions_cx("positions-empty")\n    }, react_default.a.createElement(Spinner["a" /* default */], {\n      width: 25,\n      height: 25,\n      centered: true\n    })));\n  }\n\n  return react_default.a.createElement(react_default.a.Fragment, null, react_default.a.createElement("div", {\n    className: Positions_cx("positions-heading")\n  }, "Your Positions"), positionGroups.length === 0 && react_default.a.createElement("div", {\n    className: Positions_cx("positions-empty")\n  }, "You have no positions."), allMarketsResolved && react_default.a.createElement(react_default.a.Fragment, null, react_default.a.createElement("div", {\n    className: Positions_cx("positions-subheading")\n  }, "Redeeming your positions will net you a total of", " ", Object(formatting["a" /* formatCollateral */])(redemptionAmount, collateral)), react_default.a.createElement("div", {\n    className: Positions_cx("positions-redeem")\n  }, react_default.a.createElement("button", {\n    type: "button",\n    className: Positions_cx("redeem-all"),\n    disabled: ongoingTransactionType != null,\n    onClick: asWrappedTransaction("redeem positions", redeemPositions, setError)\n  }, ongoingTransactionType === "redeem positions" ? react_default.a.createElement(Spinner["a" /* default */], {\n    inverted: true,\n    width: 25,\n    height: 25\n  }) : react_default.a.createElement(react_default.a.Fragment, null, "Redeem Positions"))), error != null && react_default.a.createElement("span", {\n    className: Positions_cx("error")\n  }, error.message)), !allMarketsResolved && positionGroups.length > 0 && react_default.a.createElement(react_default.a.Fragment, null, react_default.a.createElement("div", {\n    className: Positions_cx("positions-subheading")\n  }, react_default.a.createElement("span", {\n    className: Positions_cx("position-col-outcome")\n  }, "Position"), react_default.a.createElement("span", {\n    className: Positions_cx("position-col-value")\n  }, "Current Value"), react_default.a.createElement("span", {\n    className: Positions_cx("position-col-sell")\n  })), react_default.a.createElement("div", {\n    className: Positions_cx("positions-entries")\n  }, positionGroups.map((positionGroup, index) => react_default.a.createElement("div", {\n    className: Positions_cx("position-entry"),\n    key: index\n  }, react_default.a.createElement("div", {\n    className: Positions_cx("position-col-outcome")\n  }, positionGroup.outcomeSet.map(outcome => react_default.a.createElement(components_OutcomeCard, Positions_extends({}, outcome, {\n    key: `${outcome.marketIndex}-${outcome.outcomeIndex}`,\n    glueType: "and",\n    prefixType: "IF"\n  })))), react_default.a.createElement("div", {\n    className: Positions_cx("position-col-value", "position-values")\n  }, react_default.a.createElement("p", {\n    className: Positions_cx("value")\n  }, Object(formatting["a" /* formatCollateral */])(positionGroup.runningAmount, collateral))), react_default.a.createElement("div", {\n    className: Positions_cx("position-col-sell", "position-sell")\n  }, react_default.a.createElement("button", {\n    className: Positions_cx("button"),\n    type: "button",\n    disabled: ongoingTransactionType === "sell outcome tokens",\n    onClick: asWrappedTransaction("sell outcome tokens", () => sellAllTokensOfGroup(positionGroup), setError)\n  }, ongoingTransactionType === "sell outcome tokens" ? react_default.a.createElement(Spinner["a" /* default */], {\n    width: 16,\n    height: 16,\n    centered: true,\n    inverted: true\n  }) : "Sell")))))), error != null && react_default.a.createElement("span", {\n    className: bind_default()("error")\n  }, error.message));\n};\n\n/* harmony default export */ var Sidebar_Positions = (Positions);\n// CONCATENATED MODULE: ./src/Sidebar/index.js\n\n\n\n\n\n\nconst Sidebar_cx = bind_default.a.bind(sidebar_default.a);\n\nconst Sidebar = props => {\n  return react_default.a.createElement("div", {\n    className: Sidebar_cx("sidebar")\n  }, react_default.a.createElement(Sidebar_Balance, props), react_default.a.createElement(Sidebar_Buy, props), react_default.a.createElement(Sidebar_Positions, props));\n};\n\n/* harmony default export */ var src_Sidebar = __webpack_exports__["default"] = (Sidebar);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///571\n')},58:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return maxUint256BN; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return zeroDecimal; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return oneDecimal; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return probabilityDecimalPlaces; });\n/* unused harmony export minDisplayedProbability */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return collateralSignificantDigits; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return outcomeColors; });\n/* harmony import */ var web3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(17);\n/* harmony import */ var web3__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(web3__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var color__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(309);\n/* harmony import */ var color__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(color__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var decimal_js_light__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(5);\n/* harmony import */ var decimal_js_light__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(decimal_js_light__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\nconst {\n  toBN\n} = web3__WEBPACK_IMPORTED_MODULE_0___default.a.utils;\nconst maxUint256BN = toBN(`0x${"ff".repeat(32)}`);\nconst zeroDecimal = new decimal_js_light__WEBPACK_IMPORTED_MODULE_2___default.a(0);\nconst oneDecimal = new decimal_js_light__WEBPACK_IMPORTED_MODULE_2___default.a(1);\nconst probabilityDecimalPlaces = 2;\nconst minDisplayedProbability = new decimal_js_light__WEBPACK_IMPORTED_MODULE_2___default.a(10).pow(-probabilityDecimalPlaces).mul("0.01");\nconst collateralSignificantDigits = 5;\nconst outcomeColors = [color__WEBPACK_IMPORTED_MODULE_1___default()("#D9F6FB"), color__WEBPACK_IMPORTED_MODULE_1___default()("#FFE6EA")];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdXRpbHMvY29uc3RhbnRzLmpzP2M5ZDkiXSwibmFtZXMiOlsidG9CTiIsIldlYjMiLCJ1dGlscyIsIm1heFVpbnQyNTZCTiIsInJlcGVhdCIsInplcm9EZWNpbWFsIiwiRGVjaW1hbCIsIm9uZURlY2ltYWwiLCJwcm9iYWJpbGl0eURlY2ltYWxQbGFjZXMiLCJtaW5EaXNwbGF5ZWRQcm9iYWJpbGl0eSIsInBvdyIsIm11bCIsImNvbGxhdGVyYWxTaWduaWZpY2FudERpZ2l0cyIsIm91dGNvbWVDb2xvcnMiLCJDb2xvciJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFFQSxNQUFNO0FBQUVBO0FBQUYsSUFBV0MsMkNBQUksQ0FBQ0MsS0FBdEI7QUFFTyxNQUFNQyxZQUFZLEdBQUdILElBQUksQ0FBRSxLQUFJLEtBQUtJLE1BQUwsQ0FBWSxFQUFaLENBQWdCLEVBQXRCLENBQXpCO0FBRUEsTUFBTUMsV0FBVyxHQUFHLElBQUlDLHVEQUFKLENBQVksQ0FBWixDQUFwQjtBQUNBLE1BQU1DLFVBQVUsR0FBRyxJQUFJRCx1REFBSixDQUFZLENBQVosQ0FBbkI7QUFFQSxNQUFNRSx3QkFBd0IsR0FBRyxDQUFqQztBQUNBLE1BQU1DLHVCQUF1QixHQUFHLElBQUlILHVEQUFKLENBQVksRUFBWixFQUNwQ0ksR0FEb0MsQ0FDaEMsQ0FBQ0Ysd0JBRCtCLEVBRXBDRyxHQUZvQyxDQUVoQyxNQUZnQyxDQUFoQztBQUdBLE1BQU1DLDJCQUEyQixHQUFHLENBQXBDO0FBRUEsTUFBTUMsYUFBYSxHQUFHLENBQUNDLDRDQUFLLENBQUMsU0FBRCxDQUFOLEVBQW1CQSw0Q0FBSyxDQUFDLFNBQUQsQ0FBeEIsQ0FBdEIiLCJmaWxlIjoiNTguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgV2ViMyBmcm9tIFwid2ViM1wiO1xuaW1wb3J0IENvbG9yIGZyb20gXCJjb2xvclwiO1xuXG5pbXBvcnQgRGVjaW1hbCBmcm9tIFwiZGVjaW1hbC5qcy1saWdodFwiO1xuXG5jb25zdCB7IHRvQk4gfSA9IFdlYjMudXRpbHM7XG5cbmV4cG9ydCBjb25zdCBtYXhVaW50MjU2Qk4gPSB0b0JOKGAweCR7XCJmZlwiLnJlcGVhdCgzMil9YCk7XG5cbmV4cG9ydCBjb25zdCB6ZXJvRGVjaW1hbCA9IG5ldyBEZWNpbWFsKDApO1xuZXhwb3J0IGNvbnN0IG9uZURlY2ltYWwgPSBuZXcgRGVjaW1hbCgxKTtcblxuZXhwb3J0IGNvbnN0IHByb2JhYmlsaXR5RGVjaW1hbFBsYWNlcyA9IDI7XG5leHBvcnQgY29uc3QgbWluRGlzcGxheWVkUHJvYmFiaWxpdHkgPSBuZXcgRGVjaW1hbCgxMClcbiAgLnBvdygtcHJvYmFiaWxpdHlEZWNpbWFsUGxhY2VzKVxuICAubXVsKFwiMC4wMVwiKTtcbmV4cG9ydCBjb25zdCBjb2xsYXRlcmFsU2lnbmlmaWNhbnREaWdpdHMgPSA1O1xuXG5leHBvcnQgY29uc3Qgb3V0Y29tZUNvbG9ycyA9IFtDb2xvcihcIiNEOUY2RkJcIiksIENvbG9yKFwiI0ZGRTZFQVwiKV07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///58\n')},60:function(module,exports){eval("module.exports = class DummyModule {\n  setProvider() {}\n\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9tb2R1bGUtc3R1Yi5qcz81NWU5Il0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJEdW1teU1vZHVsZSIsInNldFByb3ZpZGVyIl0sIm1hcHBpbmdzIjoiQUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLE1BQU1DLFdBQU4sQ0FBa0I7QUFDakNDLGFBQVcsR0FBRyxDQUFFOztBQURpQixDQUFuQyIsImZpbGUiOiI2MC5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gY2xhc3MgRHVtbXlNb2R1bGUge1xuICBzZXRQcm92aWRlcigpIHt9XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///60\n")},70:function(module,exports){eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vYnVmZmVyIChpZ25vcmVkKT80ODkwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjcwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogKGlnbm9yZWQpICovIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///70\n")},74:function(module,exports){eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vdXRpbCAoaWdub3JlZCk/Njk4YiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiI3NC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIChpZ25vcmVkKSAqLyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///74\n")},75:function(module,exports){eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vdXRpbCAoaWdub3JlZCk/YzlmYiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiI3NS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIChpZ25vcmVkKSAqLyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///75\n")},78:function(module,exports){eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vY3J5cHRvIChpZ25vcmVkKT8wYmIzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6Ijc4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogKGlnbm9yZWQpICovIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///78\n")},83:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return formatProbability; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return formatCollateral; });\n/* unused harmony export pseudoMarkdown */\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var decimal_js_light__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(5);\n/* harmony import */ var decimal_js_light__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(decimal_js_light__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(58);\n\n\n\nconst formatProbability = probability => `${probability.mul(100).toDecimalPlaces(_constants__WEBPACK_IMPORTED_MODULE_2__[/* probabilityDecimalPlaces */ "e"], decimal_js_light__WEBPACK_IMPORTED_MODULE_1___default.a.ROUND_HALF_UP)}%`;\nconst formatCollateral = (amount, collateral) => {\n  return `${new decimal_js_light__WEBPACK_IMPORTED_MODULE_1___default.a((amount || "0").toString()).mul(collateral.fromUnitsMultiplier).toSignificantDigits(_constants__WEBPACK_IMPORTED_MODULE_2__[/* collateralSignificantDigits */ "a"]).toString()} ${collateral.symbol}`;\n};\nconst REPLACEMENT_RULES = [[/_(.*)_/g, "<em>$1</em>"]];\nconst pseudoMarkdown = string => {\n  let parsedString = REPLACEMENT_RULES.reduce((prevString, [matcher, replacer]) => string.replace(matcher, replacer), string);\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", {\n    dangerouslySetInnerHTML: {\n      __html: parsedString\n    }\n  });\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdXRpbHMvZm9ybWF0dGluZy5qcz80YWNkIl0sIm5hbWVzIjpbImZvcm1hdFByb2JhYmlsaXR5IiwicHJvYmFiaWxpdHkiLCJtdWwiLCJ0b0RlY2ltYWxQbGFjZXMiLCJwcm9iYWJpbGl0eURlY2ltYWxQbGFjZXMiLCJEZWNpbWFsIiwiUk9VTkRfSEFMRl9VUCIsImZvcm1hdENvbGxhdGVyYWwiLCJhbW91bnQiLCJjb2xsYXRlcmFsIiwidG9TdHJpbmciLCJmcm9tVW5pdHNNdWx0aXBsaWVyIiwidG9TaWduaWZpY2FudERpZ2l0cyIsImNvbGxhdGVyYWxTaWduaWZpY2FudERpZ2l0cyIsInN5bWJvbCIsIlJFUExBQ0VNRU5UX1JVTEVTIiwicHNldWRvTWFya2Rvd24iLCJzdHJpbmciLCJwYXJzZWRTdHJpbmciLCJyZWR1Y2UiLCJwcmV2U3RyaW5nIiwibWF0Y2hlciIsInJlcGxhY2VyIiwicmVwbGFjZSIsIl9faHRtbCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFFQTtBQUtPLE1BQU1BLGlCQUFpQixHQUFHQyxXQUFXLElBQ3pDLEdBQUVBLFdBQVcsQ0FDWEMsR0FEQSxDQUNJLEdBREosRUFFQUMsZUFGQSxDQUVnQkMsMkVBRmhCLEVBRTBDQyx1REFBTyxDQUFDQyxhQUZsRCxDQUVpRSxHQUgvRDtBQUtBLE1BQU1DLGdCQUFnQixHQUFHLENBQUNDLE1BQUQsRUFBU0MsVUFBVCxLQUF3QjtBQUN0RCxTQUFRLEdBQUUsSUFBSUosdURBQUosQ0FBWSxDQUFDRyxNQUFNLElBQUksR0FBWCxFQUFnQkUsUUFBaEIsRUFBWixFQUNQUixHQURPLENBQ0hPLFVBQVUsQ0FBQ0UsbUJBRFIsRUFFUEMsbUJBRk8sQ0FFYUMsOEVBRmIsRUFHUEgsUUFITyxFQUdJLElBQUdELFVBQVUsQ0FBQ0ssTUFBTyxFQUhuQztBQUlELENBTE07QUFPUCxNQUFNQyxpQkFBaUIsR0FBRyxDQUFDLENBQUMsU0FBRCxFQUFZLGFBQVosQ0FBRCxDQUExQjtBQUVPLE1BQU1DLGNBQWMsR0FBR0MsTUFBTSxJQUFJO0FBQ3RDLE1BQUlDLFlBQVksR0FBR0gsaUJBQWlCLENBQUNJLE1BQWxCLENBQ2pCLENBQUNDLFVBQUQsRUFBYSxDQUFDQyxPQUFELEVBQVVDLFFBQVYsQ0FBYixLQUFxQ0wsTUFBTSxDQUFDTSxPQUFQLENBQWVGLE9BQWYsRUFBd0JDLFFBQXhCLENBRHBCLEVBRWpCTCxNQUZpQixDQUFuQjtBQUtBLFNBQU87QUFBTSwyQkFBdUIsRUFBRTtBQUFFTyxZQUFNLEVBQUVOO0FBQVY7QUFBL0IsSUFBUDtBQUNELENBUE0iLCJmaWxlIjoiODMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgRGVjaW1hbCBmcm9tIFwiZGVjaW1hbC5qcy1saWdodFwiO1xuXG5pbXBvcnQge1xuICBwcm9iYWJpbGl0eURlY2ltYWxQbGFjZXMsXG4gIGNvbGxhdGVyYWxTaWduaWZpY2FudERpZ2l0c1xufSBmcm9tIFwiLi9jb25zdGFudHNcIjtcblxuZXhwb3J0IGNvbnN0IGZvcm1hdFByb2JhYmlsaXR5ID0gcHJvYmFiaWxpdHkgPT5cbiAgYCR7cHJvYmFiaWxpdHlcbiAgICAubXVsKDEwMClcbiAgICAudG9EZWNpbWFsUGxhY2VzKHByb2JhYmlsaXR5RGVjaW1hbFBsYWNlcywgRGVjaW1hbC5ST1VORF9IQUxGX1VQKX0lYDtcblxuZXhwb3J0IGNvbnN0IGZvcm1hdENvbGxhdGVyYWwgPSAoYW1vdW50LCBjb2xsYXRlcmFsKSA9PiB7XG4gIHJldHVybiBgJHtuZXcgRGVjaW1hbCgoYW1vdW50IHx8IFwiMFwiKS50b1N0cmluZygpKVxuICAgIC5tdWwoY29sbGF0ZXJhbC5mcm9tVW5pdHNNdWx0aXBsaWVyKVxuICAgIC50b1NpZ25pZmljYW50RGlnaXRzKGNvbGxhdGVyYWxTaWduaWZpY2FudERpZ2l0cylcbiAgICAudG9TdHJpbmcoKX0gJHtjb2xsYXRlcmFsLnN5bWJvbH1gO1xufTtcblxuY29uc3QgUkVQTEFDRU1FTlRfUlVMRVMgPSBbWy9fKC4qKV8vZywgXCI8ZW0+JDE8L2VtPlwiXV07XG5cbmV4cG9ydCBjb25zdCBwc2V1ZG9NYXJrZG93biA9IHN0cmluZyA9PiB7XG4gIGxldCBwYXJzZWRTdHJpbmcgPSBSRVBMQUNFTUVOVF9SVUxFUy5yZWR1Y2UoXG4gICAgKHByZXZTdHJpbmcsIFttYXRjaGVyLCByZXBsYWNlcl0pID0+IHN0cmluZy5yZXBsYWNlKG1hdGNoZXIsIHJlcGxhY2VyKSxcbiAgICBzdHJpbmdcbiAgKTtcblxuICByZXR1cm4gPHNwYW4gZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3sgX19odG1sOiBwYXJzZWRTdHJpbmcgfX0gLz47XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///83\n')}}]);