(window.webpackJsonp=window.webpackJsonp||[]).push([[11,5,18,24],{122:function(module,exports,__webpack_require__){eval("\nvar content = __webpack_require__(123);\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(1)(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9zcGlubmVyLnNjc3M/YjQxZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EsY0FBYyxtQkFBTyxDQUFDLEdBQXlIOztBQUUvSSw0Q0FBNEMsUUFBUzs7QUFFckQ7QUFDQTs7OztBQUlBLGVBQWU7O0FBRWY7QUFDQTs7QUFFQSxhQUFhLG1CQUFPLENBQUMsQ0FBc0Q7O0FBRTNFOztBQUVBLEdBQUcsS0FBVSxFQUFFIiwiZmlsZSI6IjEyMi5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS01LTEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9zcGlubmVyLnNjc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTUtMSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL3NwaW5uZXIuc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTUtMSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL3NwaW5uZXIuc2Nzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///122\n")},123:function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(0)(false);\n// Module\nexports.push([module.i, ".spinner__spinner--2dUk_ path{fill:#000}.spinner__spinner--2dUk_.spinner__inverted--3r7Jz path{fill:#fff}\\n", ""]);\n// Exports\nexports.locals = {\n\t"spinner": "spinner__spinner--2dUk_",\n\t"inverted": "spinner__inverted--3r7Jz"\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9zcGlubmVyLnNjc3M/ZWI3OCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSwyQkFBMkIsbUJBQU8sQ0FBQyxDQUFzRDtBQUN6RjtBQUNBLGNBQWMsUUFBUyxpQ0FBaUMsVUFBVSx1REFBdUQsVUFBVTtBQUNuSTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjEyMy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLnNwaW5uZXJfX3NwaW5uZXItLTJkVWtfIHBhdGh7ZmlsbDojMDAwfS5zcGlubmVyX19zcGlubmVyLS0yZFVrXy5zcGlubmVyX19pbnZlcnRlZC0tM3I3SnogcGF0aHtmaWxsOiNmZmZ9XFxuXCIsIFwiXCJdKTtcbi8vIEV4cG9ydHNcbmV4cG9ydHMubG9jYWxzID0ge1xuXHRcInNwaW5uZXJcIjogXCJzcGlubmVyX19zcGlubmVyLS0yZFVrX1wiLFxuXHRcImludmVydGVkXCI6IFwic3Bpbm5lcl9faW52ZXJ0ZWQtLTNyN0p6XCJcbn07Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///123\n')},24:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(22);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(52);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var classnames_bind__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(3);\n/* harmony import */ var classnames_bind__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(classnames_bind__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _spinner_scss__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(122);\n/* harmony import */ var _spinner_scss__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_spinner_scss__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\nconst cx = classnames_bind__WEBPACK_IMPORTED_MODULE_2___default.a.bind(_spinner_scss__WEBPACK_IMPORTED_MODULE_3___default.a);\n\nconst Spinner = ({\n  centered,\n  inverted,\n  width,\n  height\n}) => react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("svg", {\n  version: "1.1",\n  id: "loader-1",\n  x: "0px",\n  y: "0px",\n  width: `${width}px`,\n  height: `${height}px`,\n  viewBox: "0 0 40 40",\n  enableBackground: "new 0 0 40 40",\n  className: cx("spinner", {\n    centered,\n    inverted\n  })\n}, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path", {\n  opacity: "0.2",\n  d: "M20.201,5.169c-8.254,0-14.946,6.692-14.946,14.946c0,8.255,6.692,14.946,14.946,14.946s14.946-6.691,14.946-14.946C35.146,11.861,28.455,5.169,20.201,5.169z M20.201,31.749c-6.425,0-11.634-5.208-11.634-11.634c0-6.425,5.209-11.634,11.634-11.634c6.425,0,11.633,5.209,11.633,11.634C31.834,26.541,26.626,31.749,20.201,31.749z"\n}), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path", {\n  d: "M26.013,10.047l1.654-2.866c-2.198-1.272-4.743-2.012-7.466-2.012h0v3.312h0C22.32,8.481,24.301,9.057,26.013,10.047z"\n}, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("animateTransform", {\n  attributeType: "xml",\n  attributeName: "transform",\n  type: "rotate",\n  from: "0 20 20",\n  to: "360 20 20",\n  dur: "0.5s",\n  repeatCount: "indefinite"\n})));\n\nSpinner.propTypes = {\n  centered: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,\n  inverted: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,\n  height: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,\n  width: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number\n};\nSpinner.defaultProps = {\n  centered: false,\n  inverted: false,\n  height: 40,\n  width: 40\n};\n/* harmony default export */ __webpack_exports__["default"] = (Spinner);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9TcGlubmVyLmpzPzk4Y2UiXSwibmFtZXMiOlsiY3giLCJjbiIsImJpbmQiLCJzdHlsZSIsIlNwaW5uZXIiLCJjZW50ZXJlZCIsImludmVydGVkIiwid2lkdGgiLCJoZWlnaHQiLCJwcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJib29sIiwibnVtYmVyIiwiZGVmYXVsdFByb3BzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFFQTtBQUVBLE1BQU1BLEVBQUUsR0FBR0Msc0RBQUUsQ0FBQ0MsSUFBSCxDQUFRQyxvREFBUixDQUFYOztBQUVBLE1BQU1DLE9BQU8sR0FBRyxDQUFDO0FBQUVDLFVBQUY7QUFBWUMsVUFBWjtBQUFzQkMsT0FBdEI7QUFBNkJDO0FBQTdCLENBQUQsS0FDZDtBQUNFLFNBQU8sRUFBQyxLQURWO0FBRUUsSUFBRSxFQUFDLFVBRkw7QUFHRSxHQUFDLEVBQUMsS0FISjtBQUlFLEdBQUMsRUFBQyxLQUpKO0FBS0UsT0FBSyxFQUFHLEdBQUVELEtBQU0sSUFMbEI7QUFNRSxRQUFNLEVBQUcsR0FBRUMsTUFBTyxJQU5wQjtBQU9FLFNBQU8sRUFBQyxXQVBWO0FBUUUsa0JBQWdCLEVBQUMsZUFSbkI7QUFTRSxXQUFTLEVBQUVSLEVBQUUsQ0FBQyxTQUFELEVBQVk7QUFDdkJLLFlBRHVCO0FBRXZCQztBQUZ1QixHQUFaO0FBVGYsR0FjRTtBQUNFLFNBQU8sRUFBQyxLQURWO0FBRUUsR0FBQyxFQUFDO0FBRkosRUFkRixFQWtCRTtBQUFNLEdBQUMsRUFBQztBQUFSLEdBQ0U7QUFDRSxlQUFhLEVBQUMsS0FEaEI7QUFFRSxlQUFhLEVBQUMsV0FGaEI7QUFHRSxNQUFJLEVBQUMsUUFIUDtBQUlFLE1BQUksRUFBQyxTQUpQO0FBS0UsSUFBRSxFQUFDLFdBTEw7QUFNRSxLQUFHLEVBQUMsTUFOTjtBQU9FLGFBQVcsRUFBQztBQVBkLEVBREYsQ0FsQkYsQ0FERjs7QUFpQ0FGLE9BQU8sQ0FBQ0ssU0FBUixHQUFvQjtBQUNsQkosVUFBUSxFQUFFSyxpREFBUyxDQUFDQyxJQURGO0FBRWxCTCxVQUFRLEVBQUVJLGlEQUFTLENBQUNDLElBRkY7QUFHbEJILFFBQU0sRUFBRUUsaURBQVMsQ0FBQ0UsTUFIQTtBQUlsQkwsT0FBSyxFQUFFRyxpREFBUyxDQUFDRTtBQUpDLENBQXBCO0FBT0FSLE9BQU8sQ0FBQ1MsWUFBUixHQUF1QjtBQUNyQlIsVUFBUSxFQUFFLEtBRFc7QUFFckJDLFVBQVEsRUFBRSxLQUZXO0FBR3JCRSxRQUFNLEVBQUUsRUFIYTtBQUlyQkQsT0FBSyxFQUFFO0FBSmMsQ0FBdkI7QUFPZUgsc0VBQWYiLCJmaWxlIjoiMjQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gXCJwcm9wLXR5cGVzXCI7XG5cbmltcG9ydCBjbiBmcm9tIFwiY2xhc3NuYW1lcy9iaW5kXCI7XG5cbmltcG9ydCBzdHlsZSBmcm9tIFwiLi9zcGlubmVyLnNjc3NcIjtcblxuY29uc3QgY3ggPSBjbi5iaW5kKHN0eWxlKTtcblxuY29uc3QgU3Bpbm5lciA9ICh7IGNlbnRlcmVkLCBpbnZlcnRlZCwgd2lkdGgsIGhlaWdodCB9KSA9PiAoXG4gIDxzdmdcbiAgICB2ZXJzaW9uPVwiMS4xXCJcbiAgICBpZD1cImxvYWRlci0xXCJcbiAgICB4PVwiMHB4XCJcbiAgICB5PVwiMHB4XCJcbiAgICB3aWR0aD17YCR7d2lkdGh9cHhgfVxuICAgIGhlaWdodD17YCR7aGVpZ2h0fXB4YH1cbiAgICB2aWV3Qm94PVwiMCAwIDQwIDQwXCJcbiAgICBlbmFibGVCYWNrZ3JvdW5kPVwibmV3IDAgMCA0MCA0MFwiXG4gICAgY2xhc3NOYW1lPXtjeChcInNwaW5uZXJcIiwge1xuICAgICAgY2VudGVyZWQsXG4gICAgICBpbnZlcnRlZFxuICAgIH0pfVxuICA+XG4gICAgPHBhdGhcbiAgICAgIG9wYWNpdHk9XCIwLjJcIlxuICAgICAgZD1cIk0yMC4yMDEsNS4xNjljLTguMjU0LDAtMTQuOTQ2LDYuNjkyLTE0Ljk0NiwxNC45NDZjMCw4LjI1NSw2LjY5MiwxNC45NDYsMTQuOTQ2LDE0Ljk0NnMxNC45NDYtNi42OTEsMTQuOTQ2LTE0Ljk0NkMzNS4xNDYsMTEuODYxLDI4LjQ1NSw1LjE2OSwyMC4yMDEsNS4xNjl6IE0yMC4yMDEsMzEuNzQ5Yy02LjQyNSwwLTExLjYzNC01LjIwOC0xMS42MzQtMTEuNjM0YzAtNi40MjUsNS4yMDktMTEuNjM0LDExLjYzNC0xMS42MzRjNi40MjUsMCwxMS42MzMsNS4yMDksMTEuNjMzLDExLjYzNEMzMS44MzQsMjYuNTQxLDI2LjYyNiwzMS43NDksMjAuMjAxLDMxLjc0OXpcIlxuICAgIC8+XG4gICAgPHBhdGggZD1cIk0yNi4wMTMsMTAuMDQ3bDEuNjU0LTIuODY2Yy0yLjE5OC0xLjI3Mi00Ljc0My0yLjAxMi03LjQ2Ni0yLjAxMmgwdjMuMzEyaDBDMjIuMzIsOC40ODEsMjQuMzAxLDkuMDU3LDI2LjAxMywxMC4wNDd6XCI+XG4gICAgICA8YW5pbWF0ZVRyYW5zZm9ybVxuICAgICAgICBhdHRyaWJ1dGVUeXBlPVwieG1sXCJcbiAgICAgICAgYXR0cmlidXRlTmFtZT1cInRyYW5zZm9ybVwiXG4gICAgICAgIHR5cGU9XCJyb3RhdGVcIlxuICAgICAgICBmcm9tPVwiMCAyMCAyMFwiXG4gICAgICAgIHRvPVwiMzYwIDIwIDIwXCJcbiAgICAgICAgZHVyPVwiMC41c1wiXG4gICAgICAgIHJlcGVhdENvdW50PVwiaW5kZWZpbml0ZVwiXG4gICAgICAvPlxuICAgIDwvcGF0aD5cbiAgPC9zdmc+XG4pO1xuXG5TcGlubmVyLnByb3BUeXBlcyA9IHtcbiAgY2VudGVyZWQ6IFByb3BUeXBlcy5ib29sLFxuICBpbnZlcnRlZDogUHJvcFR5cGVzLmJvb2wsXG4gIGhlaWdodDogUHJvcFR5cGVzLm51bWJlcixcbiAgd2lkdGg6IFByb3BUeXBlcy5udW1iZXJcbn07XG5cblNwaW5uZXIuZGVmYXVsdFByb3BzID0ge1xuICBjZW50ZXJlZDogZmFsc2UsXG4gIGludmVydGVkOiBmYWxzZSxcbiAgaGVpZ2h0OiA0MCxcbiAgd2lkdGg6IDQwXG59O1xuXG5leHBvcnQgZGVmYXVsdCBTcGlubmVyO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///24\n')},25:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "product", function() { return product; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "combinations", function() { return combinations; });\nfunction* product(...arrs) {\n  if (arrs.length === 0) yield [];else for (const h of arrs[0]) for (const ts of product(...arrs.slice(1))) yield [h, ...ts];\n}\nfunction* combinations(arr, n) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`invalid combination size ${n}`);\n\n  if (arr.length < n) {\n    return;\n  } else if (n === 0) {\n    yield [];\n  } else if (n === 1) {\n    yield* arr.map(el => [el]);\n  } else for (let i = 0; i < arr.length - n + 1; i++) {\n    for (const subTuple of combinations(arr.slice(i + 1), n - 1)) yield [arr[i], ...subTuple];\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdXRpbHMvaXRlcnRvb2xzLmpzP2I4NzUiXSwibmFtZXMiOlsicHJvZHVjdCIsImFycnMiLCJsZW5ndGgiLCJoIiwidHMiLCJzbGljZSIsImNvbWJpbmF0aW9ucyIsImFyciIsIm4iLCJOdW1iZXIiLCJpc1NhZmVJbnRlZ2VyIiwiRXJyb3IiLCJtYXAiLCJlbCIsImkiLCJzdWJUdXBsZSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQU8sVUFBVUEsT0FBVixDQUFrQixHQUFHQyxJQUFyQixFQUEyQjtBQUNoQyxNQUFJQSxJQUFJLENBQUNDLE1BQUwsS0FBZ0IsQ0FBcEIsRUFBdUIsTUFBTSxFQUFOLENBQXZCLEtBRUUsS0FBSyxNQUFNQyxDQUFYLElBQWdCRixJQUFJLENBQUMsQ0FBRCxDQUFwQixFQUNFLEtBQUssTUFBTUcsRUFBWCxJQUFpQkosT0FBTyxDQUFDLEdBQUdDLElBQUksQ0FBQ0ksS0FBTCxDQUFXLENBQVgsQ0FBSixDQUF4QixFQUE0QyxNQUFNLENBQUNGLENBQUQsRUFBSSxHQUFHQyxFQUFQLENBQU47QUFDakQ7QUFFTSxVQUFVRSxZQUFWLENBQXVCQyxHQUF2QixFQUE0QkMsQ0FBNUIsRUFBK0I7QUFDcEMsTUFBSSxDQUFDQyxNQUFNLENBQUNDLGFBQVAsQ0FBcUJGLENBQXJCLENBQUQsSUFBNEJBLENBQUMsR0FBRyxDQUFwQyxFQUNFLE1BQU0sSUFBSUcsS0FBSixDQUFXLDRCQUEyQkgsQ0FBRSxFQUF4QyxDQUFOOztBQUVGLE1BQUlELEdBQUcsQ0FBQ0wsTUFBSixHQUFhTSxDQUFqQixFQUFvQjtBQUNsQjtBQUNELEdBRkQsTUFFTyxJQUFJQSxDQUFDLEtBQUssQ0FBVixFQUFhO0FBQ2xCLFVBQU0sRUFBTjtBQUNELEdBRk0sTUFFQSxJQUFJQSxDQUFDLEtBQUssQ0FBVixFQUFhO0FBQ2xCLFdBQU9ELEdBQUcsQ0FBQ0ssR0FBSixDQUFRQyxFQUFFLElBQUksQ0FBQ0EsRUFBRCxDQUFkLENBQVA7QUFDRCxHQUZNLE1BR0wsS0FBSyxJQUFJQyxDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHUCxHQUFHLENBQUNMLE1BQUosR0FBYU0sQ0FBYixHQUFpQixDQUFyQyxFQUF3Q00sQ0FBQyxFQUF6QyxFQUE2QztBQUMzQyxTQUFLLE1BQU1DLFFBQVgsSUFBdUJULFlBQVksQ0FBQ0MsR0FBRyxDQUFDRixLQUFKLENBQVVTLENBQUMsR0FBRyxDQUFkLENBQUQsRUFBbUJOLENBQUMsR0FBRyxDQUF2QixDQUFuQyxFQUNFLE1BQU0sQ0FBQ0QsR0FBRyxDQUFDTyxDQUFELENBQUosRUFBUyxHQUFHQyxRQUFaLENBQU47QUFDSDtBQUNKIiwiZmlsZSI6IjI1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uKiBwcm9kdWN0KC4uLmFycnMpIHtcbiAgaWYgKGFycnMubGVuZ3RoID09PSAwKSB5aWVsZCBbXTtcbiAgZWxzZVxuICAgIGZvciAoY29uc3QgaCBvZiBhcnJzWzBdKVxuICAgICAgZm9yIChjb25zdCB0cyBvZiBwcm9kdWN0KC4uLmFycnMuc2xpY2UoMSkpKSB5aWVsZCBbaCwgLi4udHNdO1xufVxuXG5leHBvcnQgZnVuY3Rpb24qIGNvbWJpbmF0aW9ucyhhcnIsIG4pIHtcbiAgaWYgKCFOdW1iZXIuaXNTYWZlSW50ZWdlcihuKSB8fCBuIDwgMClcbiAgICB0aHJvdyBuZXcgRXJyb3IoYGludmFsaWQgY29tYmluYXRpb24gc2l6ZSAke259YCk7XG5cbiAgaWYgKGFyci5sZW5ndGggPCBuKSB7XG4gICAgcmV0dXJuO1xuICB9IGVsc2UgaWYgKG4gPT09IDApIHtcbiAgICB5aWVsZCBbXTtcbiAgfSBlbHNlIGlmIChuID09PSAxKSB7XG4gICAgeWllbGQqIGFyci5tYXAoZWwgPT4gW2VsXSk7XG4gIH0gZWxzZVxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYXJyLmxlbmd0aCAtIG4gKyAxOyBpKyspIHtcbiAgICAgIGZvciAoY29uc3Qgc3ViVHVwbGUgb2YgY29tYmluYXRpb25zKGFyci5zbGljZShpICsgMSksIG4gLSAxKSlcbiAgICAgICAgeWllbGQgW2FycltpXSwgLi4uc3ViVHVwbGVdO1xuICAgIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///25\n')},43:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ../node_modules/react/index.js\nvar react = __webpack_require__(22);\nvar react_default = /*#__PURE__*/__webpack_require__.n(react);\n\n// EXTERNAL MODULE: ../node_modules/classnames/bind.js\nvar bind = __webpack_require__(3);\nvar bind_default = /*#__PURE__*/__webpack_require__.n(bind);\n\n// EXTERNAL MODULE: ./src/Sidebar/sidebar.scss\nvar sidebar = __webpack_require__(539);\nvar sidebar_default = /*#__PURE__*/__webpack_require__.n(sidebar);\n\n// EXTERNAL MODULE: ./src/utils/formatting.js\nvar formatting = __webpack_require__(72);\n\n// EXTERNAL MODULE: ./src/utils/constants.js\nvar constants = __webpack_require__(59);\n\n// EXTERNAL MODULE: ./src/Sidebar/Balance/balance.scss\nvar balance = __webpack_require__(541);\nvar balance_default = /*#__PURE__*/__webpack_require__.n(balance);\n\n// CONCATENATED MODULE: ./src/Sidebar/Balance/index.js\n\n\n\n\n\nconst cx = bind_default.a.bind(balance_default.a);\n\nconst Balance = ({\n  collateral,\n  collateralBalance\n}) => {\n  return react_default.a.createElement("div", {\n    className: cx("balance")\n  }, react_default.a.createElement("div", {\n    className: cx("label")\n  }, "Wallet Balance"), react_default.a.createElement("div", {\n    className: cx("value")\n  }, Object(formatting["a" /* formatCollateral */])(collateralBalance ? collateralBalance.totalAmount : constants["f" /* zeroDecimal */], collateral)));\n};\n\n/* harmony default export */ var Sidebar_Balance = (Balance);\n// EXTERNAL MODULE: ../node_modules/prop-types/index.js\nvar prop_types = __webpack_require__(52);\nvar prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);\n\n// EXTERNAL MODULE: ../node_modules/decimal.js-light/decimal.js\nvar decimal = __webpack_require__(23);\nvar decimal_default = /*#__PURE__*/__webpack_require__.n(decimal);\n\n// EXTERNAL MODULE: ../node_modules/web3/src/index.js\nvar src = __webpack_require__(6);\nvar src_default = /*#__PURE__*/__webpack_require__.n(src);\n\n// EXTERNAL MODULE: ./src/Sidebar/Buy/buy.scss\nvar buy = __webpack_require__(543);\nvar buy_default = /*#__PURE__*/__webpack_require__.n(buy);\n\n// EXTERNAL MODULE: ../node_modules/classnames/index.js\nvar classnames = __webpack_require__(545);\nvar classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);\n\n// CONCATENATED MODULE: ./src/position-group-details.js\n\n\n\n\n\nconst {\n  BN\n} = src_default.a.utils;\nfunction PositionGroupDetails({\n  positionGroup,\n  collateral\n}) {\n  return react_default.a.createElement(react_default.a.Fragment, null, react_default.a.createElement("div", {\n    className: classnames_default()("value")\n  }, react_default.a.createElement("strong", null, Object(formatting["a" /* formatCollateral */])(positionGroup.runningAmount, collateral)), "\\xA0"), react_default.a.createElement("div", {\n    className: classnames_default()("description")\n  }, positionGroup.outcomeSet.length === 0 ? react_default.a.createElement("span", null, "in any case") : react_default.a.createElement("span", null, "when", " ", positionGroup.outcomeSet.map(({\n    when\n  }) => Object(formatting["c" /* pseudoMarkdown */])(when)).reduce((a, b) => react_default.a.createElement(react_default.a.Fragment, null, a, " ", react_default.a.createElement("strong", null, "and"), " ", b)))));\n}\nPositionGroupDetails.propTypes = {\n  positionGroup: prop_types_default.a.shape({\n    runningAmount: prop_types_default.a.instanceOf(BN).isRequired,\n    outcomeSet: prop_types_default.a.arrayOf(prop_types_default.a.shape({\n      when: prop_types_default.a.string.isRequired\n    }).isRequired).isRequired\n  }),\n  collateral: prop_types_default.a.shape({\n    symbol: prop_types_default.a.string.isRequired,\n    decimals: prop_types_default.a.number.isRequired\n  }).isRequired\n};\n// EXTERNAL MODULE: ./src/components/Spinner.js\nvar Spinner = __webpack_require__(24);\n\n// EXTERNAL MODULE: ./src/components/outcomeCard.scss\nvar outcomeCard = __webpack_require__(546);\nvar outcomeCard_default = /*#__PURE__*/__webpack_require__.n(outcomeCard);\n\n// CONCATENATED MODULE: ./src/components/OutcomeCard.js\n\n\n\n\nconst OutcomeCard_cx = bind_default.a.bind(outcomeCard_default.a);\n\nconst OutcomeCard = ({\n  marketIndex,\n  outcomeIndex,\n  short,\n  title,\n  glueType,\n  prefixType\n}) => react_default.a.createElement("div", {\n  className: OutcomeCard_cx("outcome-card", {\n    [`glue-${glueType}`]: !!glueType,\n    [`prefix-${prefixType}`]: !!prefixType\n  })\n}, react_default.a.createElement("span", {\n  className: OutcomeCard_cx("market")\n}, "#", marketIndex + 1), react_default.a.createElement("span", {\n  className: OutcomeCard_cx("outcome")\n}, react_default.a.createElement("i", {\n  className: OutcomeCard_cx("dot"),\n  style: {\n    color: constants["d" /* outcomeColors */][outcomeIndex].darken(0.5).toString()\n  }\n}), " ", title));\n\n/* harmony default export */ var components_OutcomeCard = (OutcomeCard);\n// EXTERNAL MODULE: ./src/utils/itertools.js\nvar itertools = __webpack_require__(25);\n\n// CONCATENATED MODULE: ./src/utils/position-groups.js\n\n\n\n\nconst {\n  toBN,\n  toHex: position_groups_toHex,\n  padLeft: position_groups_padLeft\n} = src_default.a.utils;\nfunction calcOutcomeTokenCounts(positions, {\n  funding,\n  positionBalances\n}, amount, marketSelections) {\n  if (marketSelections.every(({\n    isAssumed,\n    selectedOutcomeIndex\n  }) => isAssumed || selectedOutcomeIndex === -1)) throw new Error("At least one outcome selection must be made");\n  const invB = new decimal_default.a(positions.length).ln().dividedBy(funding.toString());\n  const positionTypes = new Array(positions.length).fill(null);\n  let refundedTerm = constants["f" /* zeroDecimal */];\n  let takenTerm = constants["f" /* zeroDecimal */];\n  let refusedTerm = constants["f" /* zeroDecimal */];\n  positions.forEach(({\n    positionIndex,\n    outcomes\n  }) => {\n    const balance = positionBalances[positionIndex].toString();\n\n    if (outcomes.some(({\n      marketIndex,\n      outcomeIndex\n    }) => marketSelections[marketIndex].isAssumed && outcomeIndex !== marketSelections[marketIndex].selectedOutcomeIndex)) {\n      refundedTerm = refundedTerm.add(amount.sub(balance).mul(invB).exp());\n      positionTypes[positionIndex] = "refunded";\n    } else if (outcomes.every(({\n      marketIndex,\n      outcomeIndex\n    }) => marketSelections[marketIndex].selectedOutcomeIndex == -1 || outcomeIndex === marketSelections[marketIndex].selectedOutcomeIndex)) {\n      takenTerm = takenTerm.add(invB.mul(balance).neg().exp());\n      positionTypes[positionIndex] = "taken";\n    } else {\n      refusedTerm = refusedTerm.add(invB.mul(balance).neg().exp());\n      positionTypes[positionIndex] = "refused";\n    }\n  });\n  const takenPositionsAmountEach = amount.mul(invB).exp().sub(refundedTerm).sub(refusedTerm).div(takenTerm).ln().div(invB).toInteger();\n  return positionTypes.map(type => {\n    if (type === "taken") return takenPositionsAmountEach;\n    if (type === "refunded") return amount;\n    if (type === "refused") return constants["f" /* zeroDecimal */];\n    throw new Error(`Position types [${positionTypes.join(", ")}] invalid`);\n  });\n}\nfunction calcPositionGroups(markets, positions, positionAmounts) {\n  const positionGroups = [];\n  let positionAmountsCopy = positionAmounts.map(amount => toBN(amount.toFixed ? amount.toFixed(0) : amount.toString()));\n  let runningPositionAmounts = positionAmountsCopy.slice();\n  let outcomesToCombine = markets.map((market, marketIndex) => market.outcomes.map((outcome, outcomeIndex) => ({ ...outcome,\n    marketIndex,\n    outcomeIndex\n  })));\n\n  for (let numMarkets = 0; numMarkets <= markets.length; ++numMarkets) {\n    for (const outcomesTuples of Object(itertools["combinations"])(outcomesToCombine, numMarkets)) {\n      for (const outcomeSet of Object(itertools["product"])(...outcomesTuples)) {\n        const groupPositions = outcomeSet.reduce((positionsIntersection, {\n          positions: outcomePositions\n        }) => positionsIntersection.filter(({\n          id\n        }) => outcomePositions.find(({\n          id: otherId\n        }) => id === otherId) != null), positions);\n        const [groupAmount, groupRunningAmount] = groupPositions.reduce(([accAmount, accRunningAmount], {\n          positionIndex\n        }) => [accAmount.lte(positionAmountsCopy[positionIndex]) ? accAmount : positionAmountsCopy[positionIndex], accRunningAmount.lte(runningPositionAmounts[positionIndex]) ? accRunningAmount : runningPositionAmounts[positionIndex]], [constants["b" /* maxUint256BN */], constants["b" /* maxUint256BN */]]);\n\n        if (groupRunningAmount.gtn(0)) {\n          positionGroups.push({\n            collectionId: position_groups_padLeft(position_groups_toHex(outcomeSet.reduce((acc, {\n              collectionId\n            }) => acc.add(toBN(collectionId)), toBN(0))), 64),\n            outcomeSet,\n            amount: groupAmount,\n            runningAmount: groupRunningAmount,\n            positions: groupPositions\n          });\n\n          for (const {\n            positionIndex\n          } of groupPositions) {\n            runningPositionAmounts[positionIndex] = runningPositionAmounts[positionIndex].sub(groupRunningAmount);\n          }\n        }\n      }\n    }\n  }\n\n  return positionGroups;\n}\n// CONCATENATED MODULE: ./src/Sidebar/Buy/index.js\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst {\n  BN: Buy_BN\n} = src_default.a.utils;\nconst Buy_cx = bind_default.a.bind(buy_default.a);\n\nconst Buy = ({\n  account,\n  markets,\n  positions,\n  collateral,\n  collateralBalance,\n  lmsrMarketMaker,\n  lmsrState,\n  lmsrAllowance,\n  marketSelections,\n  stagedTradeAmounts,\n  setStagedTradeAmounts,\n  stagedTransactionType,\n  setStagedTransactionType,\n  ongoingTransactionType,\n  resetMarketSelections,\n  asWrappedTransaction\n}) => {\n  const [investmentAmount, setInvestmentAmount] = Object(react["useState"])("");\n  const [humanReadablePositions, setHumanReadablePositions] = Object(react["useState"])(null);\n  const [error, setError] = Object(react["useState"])(null);\n  Object(react["useEffect"])(() => {\n    //if (stagedTransactionType !== "buy outcome tokens") return;\n    let hasEnteredInvestment = false;\n\n    try {\n      const decimalInvest = decimal_default()(investmentAmount);\n      hasEnteredInvestment = decimalInvest.gt(0);\n    } catch (e) {}\n\n    if (!(marketSelections || []).some(({\n      selectedOutcomeIndex\n    }) => selectedOutcomeIndex > -1)) {\n      setStagedTradeAmounts(null);\n      return;\n    }\n\n    try {\n      const investmentAmountInUnits = collateral.toUnitsMultiplier.mul(hasEnteredInvestment ? investmentAmount : constants["f" /* zeroDecimal */]);\n      if (!investmentAmountInUnits.isInteger()) throw new Error(`Got more than ${collateral.decimals} decimals in value ${investmentAmount}`);\n      setStagedTradeAmounts(calcOutcomeTokenCounts(positions, lmsrState, investmentAmountInUnits, marketSelections));\n      setError(null);\n    } catch (e) {\n      setStagedTradeAmounts(null);\n      setError(e);\n    }\n  }, [stagedTransactionType, positions, collateral, collateralBalance, lmsrState, investmentAmount, marketSelections]);\n  const marketStage = lmsrState && lmsrState.stage;\n  let hasAnyAllowance = false;\n  let hasEnoughAllowance = false;\n  let hasInfiniteAllowance = false;\n  if (lmsrAllowance != null) try {\n    hasAnyAllowance = lmsrAllowance.gtn(0);\n    hasEnoughAllowance = collateral.toUnitsMultiplier.mul(investmentAmount || "0").lte(lmsrAllowance.toString());\n    hasInfiniteAllowance = lmsrAllowance.eq(constants["b" /* maxUint256BN */]);\n  } catch (e) {// empty\n  }\n  const buyOutcomeTokens = Object(react["useCallback"])(async () => {\n    if (stagedTradeAmounts == null) throw new Error(`No buy set yet`);\n    if (stagedTransactionType !== "buy outcome tokens") throw new Error(`Can\'t buy outcome tokens while staged transaction is to ${stagedTransactionType}`);\n    let investmentAmountInUnits;\n\n    try {\n      investmentAmountInUnits = collateral.toUnitsMultiplier.mul(investmentAmount);\n    } catch (err) {\n      investmentAmountInUnits = constants["f" /* zeroDecimal */];\n    }\n\n    if (investmentAmountInUnits.gt(collateralBalance.totalAmount.toString())) throw new Error(`Not enough collateral: missing ${Object(formatting["a" /* formatCollateral */])(investmentAmountInUnits.sub(collateralBalance.totalAmount.toString()), collateral)}`);\n    const tradeAmounts = stagedTradeAmounts.map(amount => amount.toString());\n    const collateralLimit = await lmsrMarketMaker.calcNetCost(tradeAmounts);\n\n    if (collateral.isWETH && collateralLimit.gt(collateralBalance.amount)) {\n      await collateral.contract.deposit({\n        value: collateralLimit.sub(collateralBalance.amount),\n        from: account\n      });\n    }\n\n    if (!hasAnyAllowance) {\n      await collateral.contract.approve(lmsrMarketMaker.address, constants["b" /* maxUint256BN */], {\n        from: account\n      });\n    }\n\n    await lmsrMarketMaker.trade(tradeAmounts, collateralLimit, {\n      from: account\n    });\n  }, [hasAnyAllowance, stagedTransactionType, stagedTradeAmounts, lmsrMarketMaker, collateral, account]);\n  const setAllowance = Object(react["useCallback"])(async () => {\n    await collateral.contract.approve(lmsrMarketMaker.address, constants["b" /* maxUint256BN */], {\n      from: account\n    });\n  }, [collateral, lmsrMarketMaker]);\n  const [stagedTradePositionGroups, setStagedTradePositionGroups] = Object(react["useState"])([]);\n  Object(react["useEffect"])(() => {\n    setStagedTradePositionGroups(stagedTradeAmounts && calcPositionGroups(markets, positions, stagedTradeAmounts));\n  }, [markets, positions, stagedTradeAmounts]);\n  let problemText;\n\n  if (!marketStage === "Closed") {\n    problemText = "The Market is closed.";\n  } else if (!marketSelections) {\n    problemText = "Select position(s) first.";\n  }\n\n  const makeStepper = Object(react["useCallback"])(amount => {\n    return e => {\n      setStagedTransactionType("buy outcome tokens");\n      setInvestmentAmount(prevValue => {\n        let prevValueDecimal;\n\n        try {\n          if (prevValue === "") {\n            prevValueDecimal = decimal_default()(0);\n          } else {\n            prevValueDecimal = decimal_default()(prevValue);\n          }\n        } catch (err) {\n          return prevValue;\n        }\n\n        return prevValueDecimal.add(amount).toString();\n      });\n    };\n  }, []);\n  const setInvestmentMax = Object(react["useCallback"])(() => {\n    if (collateralBalance != null && collateral != null) {\n      setStagedTransactionType("buy outcome tokens");\n      setInvestmentAmount(decimal_default()(collateralBalance.totalAmount.toString()).div(Math.pow(10, collateral.decimals)).toFixed(4));\n    }\n  }, [collateralBalance, collateral]);\n  const clearAllPositions = Object(react["useCallback"])(() => {\n    setStagedTransactionType(null);\n    setStagedTradeAmounts(null);\n    setInvestmentAmount("");\n    resetMarketSelections(null);\n    setError(null);\n  }, [setStagedTradeAmounts, setInvestmentAmount, setError]);\n  Object(react["useEffect"])(() => {\n    const hasConditional = (marketSelections || []).some(({\n      isAssumed\n    }) => isAssumed);\n    let humanReadablePositions = {\n      payOutWhen: {\n        title: "Pay out when:",\n        getGlue: () => "and",\n        getPrefix: () => "IF",\n        positions: []\n      },\n      loseInvestmentWhen: {\n        title: "Lose investment when:",\n        positions: [],\n        getGlue: () => hasConditional ? "and" : "or",\n        getPrefix: () => "IF"\n      },\n      refundWhen: {\n        title: "Refund when:",\n        positions: [],\n        getGlue: () => "or",\n        getPrefix: () => "IF"\n      }\n    };\n    let stagePositionTradeAmount;\n\n    try {\n      stagePositionTradeAmount = decimal_default()(investmentAmount);\n    } catch (err) {\n      stagePositionTradeAmount = constants["f" /* zeroDecimal */];\n    }\n\n    (stagedTradePositionGroups || []).forEach(({\n      outcomeSet,\n      runningAmount\n    }, index) => {\n      //positions["payOutWhen"]\n      let hasEnteredInvestment;\n\n      try {\n        const decimalInvest = decimal_default()(investmentAmount);\n        hasEnteredInvestment = decimalInvest.gt(0);\n      } catch (err) {} // all payouts\n\n\n      humanReadablePositions.payOutWhen.positions = outcomeSet;\n      humanReadablePositions.payOutWhen.runningAmount = hasEnteredInvestment ? runningAmount : constants["f" /* zeroDecimal */]; // all lose invests\n      // invert outcome sets\n\n      humanReadablePositions.loseInvestmentWhen.positions = outcomeSet.map(outcome => {\n        if (outcome.outcomeIndex == -1) {\n          return outcome;\n        }\n\n        return { ...outcome,\n          ...markets[outcome.marketIndex].outcomes[outcome.outcomeIndex == 0 ? 1 : 0],\n          outcomeIndex: outcome.outcomeIndex == 0 ? 1 : 0\n        };\n      });\n      humanReadablePositions.loseInvestmentWhen.runningAmount = decimal_default()(hasEnteredInvestment ? investmentAmount : constants["f" /* zeroDecimal */]).neg().mul(Math.pow(10, collateral.decimals));\n      humanReadablePositions.loseInvestmentWhen.margin = decimal_default()(-1.0); // refund when\n      // invert outcome sets\n\n      humanReadablePositions.refundWhen.positions = outcomeSet.filter(outcome => marketSelections[outcome.marketIndex].isAssumed).map(outcome => {\n        if (outcome.outcomeIndex == -1) {\n          return outcome;\n        }\n\n        return { ...outcome,\n          ...markets[outcome.marketIndex].outcomes[outcome.outcomeIndex == 0 ? 1 : 0],\n          outcomeIndex: outcome.outcomeIndex == 0 ? 1 : 0\n        };\n      });\n      humanReadablePositions.refundWhen.runningAmount = decimal_default()(hasEnteredInvestment ? investmentAmount : constants["f" /* zeroDecimal */]).mul(Math.pow(10, collateral.decimals));\n      humanReadablePositions.refundWhen.margin = decimal_default()(1.0);\n    });\n    setHumanReadablePositions(humanReadablePositions);\n  }, [stagedTradePositionGroups]);\n  return react_default.a.createElement(react_default.a.Fragment, null, react_default.a.createElement("div", {\n    className: Buy_cx("buy-heading")\n  }, "Order Position(s)", " ", react_default.a.createElement("button", {\n    type: "button",\n    className: Buy_cx("link-button", "clear"),\n    onClick: clearAllPositions\n  }, "clear all")), problemText && react_default.a.createElement("div", {\n    className: Buy_cx("buy-empty")\n  }, problemText), error && react_default.a.createElement("div", {\n    className: Buy_cx("buy-empty")\n  }, error === true ? "An error has occured" : error.message), react_default.a.createElement("div", {\n    className: Buy_cx("buy-summary")\n  }, humanReadablePositions && [humanReadablePositions.payOutWhen, humanReadablePositions.refundWhen, humanReadablePositions.loseInvestmentWhen].filter(category => category && category.positions.length).map(category => react_default.a.createElement(react["Fragment"], {\n    key: category.title\n  }, react_default.a.createElement("div", {\n    className: Buy_cx("buy-summary-heading")\n  }, category.title), react_default.a.createElement("div", {\n    className: Buy_cx("buy-summary-category")\n  }, react_default.a.createElement("div", {\n    className: Buy_cx("category-entries")\n  }, category.positions.map(outcome => react_default.a.createElement(components_OutcomeCard, _extends({\n    key: `${outcome.marketIndex}-${outcome.outcomeIndex}`,\n    glueType: category.getGlue(),\n    prefixType: category.getPrefix()\n  }, outcome)))), react_default.a.createElement("div", {\n    className: Buy_cx("category-values")\n  }, react_default.a.createElement("p", {\n    className: Buy_cx("category-value", "value")\n  }, Object(formatting["a" /* formatCollateral */])(category.runningAmount, collateral))))))), react_default.a.createElement("div", {\n    className: Buy_cx("buy-subheading")\n  }, "Total Investment (", collateral.name, ")"), react_default.a.createElement("div", {\n    className: Buy_cx("buy-investment")\n  }, react_default.a.createElement("button", {\n    className: Buy_cx("buy-invest", "buy-invest-minus"),\n    onClick: makeStepper(-0.001),\n    type: "button"\n  }, "-"), react_default.a.createElement("div", {\n    className: Buy_cx("input-group")\n  }, react_default.a.createElement("button", {\n    className: Buy_cx("input-append", "link-button", "invest-max"),\n    onClick: setInvestmentMax,\n    type: "button"\n  }, "max"), react_default.a.createElement("input", {\n    type: "number",\n    value: investmentAmount,\n    className: Buy_cx("input"),\n    onChange: e => {\n      setStagedTransactionType("buy outcome tokens");\n      setInvestmentAmount(e.target.value);\n    }\n  }), react_default.a.createElement("span", {\n    className: Buy_cx("input-append", "collateral-name")\n  }, collateral.symbol)), react_default.a.createElement("button", {\n    className: Buy_cx("buy-invest", "buy-invest-plus"),\n    onClick: makeStepper(0.001),\n    type: "button"\n  }, "+")), react_default.a.createElement("div", {\n    className: Buy_cx("buy-confirm")\n  }, react_default.a.createElement("button", {\n    className: Buy_cx("button"),\n    type: "button",\n    disabled: //!hasEnoughAllowance ||\n    stagedTransactionType !== "buy outcome tokens" || stagedTradeAmounts == null || ongoingTransactionType != null || marketStage !== "Running" || error != null,\n    onClick: asWrappedTransaction("buy outcome tokens", buyOutcomeTokens, setError)\n  }, "Place Order")));\n  return react_default.a.createElement("div", {\n    className: bind_default()("positions")\n  }, collateralBalance != null && react_default.a.createElement("p", null, `Your balance: ${Object(formatting["a" /* formatCollateral */])(collateralBalance.amount, collateral)}`), collateralBalance != null && collateral.isWETH && react_default.a.createElement("p", null, `Your unwrapped balance: ${Object(formatting["a" /* formatCollateral */])(collateralBalance.unwrappedAmount, collateral)}`), marketStage === "Closed" ? react_default.a.createElement("p", null, "Market maker is closed.") : react_default.a.createElement(react_default.a.Fragment, null, lmsrAllowance != null && react_default.a.createElement("p", null, `Market maker allowance: ${hasInfiniteAllowance ? `∞ ${collateral.symbol}` : Object(formatting["a" /* formatCollateral */])(lmsrAllowance, collateral)}`), react_default.a.createElement("input", {\n    type: "text",\n    placeholder: `Investment amount in ${collateral && collateral.name}`,\n    value: investmentAmount,\n    onChange: e => {\n      setStagedTransactionType("buy outcome tokens");\n      setInvestmentAmount(e.target.value);\n    }\n  }), react_default.a.createElement("button", {\n    type: "button",\n    disabled: !hasEnoughAllowance || stagedTransactionType !== "buy outcome tokens" || stagedTradeAmounts == null || ongoingTransactionType != null || marketStage !== "Running" || error != null,\n    onClick: asWrappedTransaction("buy outcome tokens", buyOutcomeTokens, setError)\n  }, ongoingTransactionType === "buy outcome tokens" ? react_default.a.createElement(Spinner["default"], {\n    centered: true,\n    inverted: true,\n    width: 25,\n    height: 25\n  }) : marketStage === "Paused" ? react_default.a.createElement(react_default.a.Fragment, null, "[Market paused]") : react_default.a.createElement(react_default.a.Fragment, null, "Buy")), (!hasAnyAllowance && stagedTradeAmounts == null || !hasEnoughAllowance) && react_default.a.createElement("button", {\n    type: "button",\n    onClick: asWrappedTransaction("set allowance", setAllowance, setError)\n  }, ongoingTransactionType === "set allowance" ? react_default.a.createElement(Spinner["default"], {\n    centered: true,\n    inverted: true,\n    width: 25,\n    height: 25\n  }) : "Approve Market Maker for Trades")), error && react_default.a.createElement("div", {\n    className: bind_default()("error")\n  }, error === true ? "An error has occured" : error.message), stagedTradePositionGroups != null && react_default.a.createElement("div", null, react_default.a.createElement("div", null, "You will receive:"), stagedTradePositionGroups.map(positionGroup => react_default.a.createElement("div", {\n    key: positionGroup.collectionId,\n    className: bind_default()("position")\n  }, react_default.a.createElement("div", {\n    className: bind_default()("row", "details")\n  }, react_default.a.createElement(PositionGroupDetails, {\n    positionGroup,\n    collateral\n  }))))));\n};\n\nBuy.propTypes = {\n  account: prop_types_default.a.string.isRequired,\n  markets: prop_types_default.a.arrayOf(prop_types_default.a.shape({\n    outcomes: prop_types_default.a.arrayOf(prop_types_default.a.shape({\n      positions: prop_types_default.a.arrayOf(prop_types_default.a.shape({\n        id: prop_types_default.a.string.isRequired\n      }).isRequired).isRequired\n    }).isRequired).isRequired\n  }).isRequired).isRequired,\n  positions: prop_types_default.a.arrayOf(prop_types_default.a.shape({\n    id: prop_types_default.a.string.isRequired,\n    positionIndex: prop_types_default.a.number.isRequired,\n    outcomes: prop_types_default.a.arrayOf(prop_types_default.a.shape({\n      marketIndex: prop_types_default.a.number.isRequired,\n      outcomeIndex: prop_types_default.a.number.isRequired\n    }).isRequired).isRequired\n  }).isRequired).isRequired,\n  collateral: prop_types_default.a.shape({\n    contract: prop_types_default.a.object.isRequired,\n    name: prop_types_default.a.string.isRequired,\n    symbol: prop_types_default.a.string.isRequired,\n    decimals: prop_types_default.a.number.isRequired,\n    isWETH: prop_types_default.a.bool.isRequired\n  }).isRequired,\n  collateralBalance: prop_types_default.a.shape({\n    amount: prop_types_default.a.instanceOf(Buy_BN).isRequired,\n    unwrappedAmount: prop_types_default.a.instanceOf(Buy_BN),\n    totalAmount: prop_types_default.a.instanceOf(Buy_BN).isRequired\n  }),\n  lmsrMarketMaker: prop_types_default.a.object.isRequired,\n  lmsrState: prop_types_default.a.shape({\n    funding: prop_types_default.a.instanceOf(Buy_BN).isRequired,\n    positionBalances: prop_types_default.a.arrayOf(prop_types_default.a.instanceOf(Buy_BN).isRequired).isRequired,\n    stage: prop_types_default.a.string.isRequired\n  }),\n  lmsrAllowance: prop_types_default.a.instanceOf(Buy_BN),\n  marketSelections: prop_types_default.a.arrayOf(prop_types_default.a.shape({\n    isAssumed: prop_types_default.a.bool.isRequired,\n    selectedOutcomeIndex: prop_types_default.a.number\n  }).isRequired),\n  stagedTradeAmounts: prop_types_default.a.arrayOf(prop_types_default.a.instanceOf(decimal_default.a).isRequired),\n  setStagedTradeAmounts: prop_types_default.a.func.isRequired,\n  stagedTransactionType: prop_types_default.a.string,\n  setStagedTransactionType: prop_types_default.a.func.isRequired,\n  ongoingTransactionType: prop_types_default.a.string,\n  asWrappedTransaction: prop_types_default.a.func.isRequired\n};\n/* harmony default export */ var Sidebar_Buy = (Buy);\n// EXTERNAL MODULE: ./src/Sidebar/Positions/positions.scss\nvar Positions_positions = __webpack_require__(548);\nvar positions_default = /*#__PURE__*/__webpack_require__.n(Positions_positions);\n\n// CONCATENATED MODULE: ./src/Sidebar/Positions/index.js\nfunction Positions_extends() { Positions_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Positions_extends.apply(this, arguments); }\n\n\n\n\n\n\n\n\n\n\n\n\nconst Positions_cx = bind_default.a.bind(positions_default.a);\nconst {\n  toBN: Positions_toBN\n} = src_default.a.utils;\n\nfunction calcNetCost({\n  funding,\n  positionBalances\n}, tradeAmounts) {\n  const invB = new decimal_default.a(positionBalances.length).ln().dividedBy(funding.toString());\n  return tradeAmounts.reduce((acc, tradeAmount, i) => acc.add(tradeAmount.sub(positionBalances[i].toString()).mul(invB).exp()), constants["f" /* zeroDecimal */]).ln().div(invB);\n}\n\nconst Positions = ({\n  account,\n  pmSystem,\n  markets,\n  marketResolutionStates,\n  positions,\n  collateral,\n  lmsrMarketMaker,\n  lmsrState,\n  positionBalances,\n  stagedTradeAmounts,\n  setStagedTradeAmounts,\n  stagedTransactionType,\n  setStagedTransactionType,\n  ongoingTransactionType,\n  asWrappedTransaction\n}) => {\n  const [positionGroups, setPositionGroups] = Object(react["useState"])(null);\n  Object(react["useEffect"])(() => {\n    if (positionBalances == null) {\n      setPositionGroups(null);\n    } else {\n      const positionGroups = calcPositionGroups(markets, positions, positionBalances);\n      setPositionGroups(positionGroups);\n    }\n  }, [markets, positions, positionBalances]);\n  const [salePositionGroup, setSalePositionGroup] = Object(react["useState"])(null);\n  Object(react["useEffect"])(() => {\n    if (positionGroups == null) {\n      setSalePositionGroup(null);\n    } else if (salePositionGroup != null) {\n      setSalePositionGroup(positionGroups.find(({\n        collectionId\n      }) => collectionId === salePositionGroup.collectionId));\n    }\n  }, [positionGroups]);\n  const [saleAmount, setSaleAmount] = Object(react["useState"])("");\n  const [estimatedSaleEarnings, setEstimatedSaleEarnings] = Object(react["useState"])(null);\n  const [error, setError] = Object(react["useState"])(null);\n  Object(react["useEffect"])(() => {\n    if (stagedTransactionType !== "sell outcome tokens") return;\n\n    if (saleAmount === "") {\n      setStagedTradeAmounts(null);\n      setEstimatedSaleEarnings(null);\n      setError(null);\n      return;\n    }\n\n    try {\n      const saleAmountInUnits = collateral.toUnitsMultiplier.mul(saleAmount);\n      if (!saleAmountInUnits.isInteger()) throw new Error(`Got more than ${collateral.decimals} decimals in value ${saleAmount}`);\n      if (saleAmountInUnits.gt(salePositionGroup.amount.toString())) throw new Error(`Not enough collateral: missing ${Object(formatting["a" /* formatCollateral */])(saleAmountInUnits.sub(salePositionGroup.amount.toString()), collateral)}`);\n      const stagedTradeAmounts = Array.from({\n        length: positions.length\n      }, (_, i) => salePositionGroup.positions.find(({\n        positionIndex\n      }) => positionIndex === i) == null ? constants["f" /* zeroDecimal */] : saleAmountInUnits.neg());\n      setStagedTradeAmounts(stagedTradeAmounts);\n      setEstimatedSaleEarnings(calcNetCost(lmsrState, stagedTradeAmounts).neg());\n      setError(null);\n    } catch (e) {\n      setStagedTradeAmounts(null);\n      setEstimatedSaleEarnings(null);\n      setError(e);\n    }\n  }, [stagedTransactionType, collateral, positions, lmsrState, salePositionGroup, saleAmount]);\n  const sellAllTokensOfGroup = Object(react["useCallback"])(async salePositionGroup => {\n    await setStagedTransactionType("sell outcome tokens");\n\n    if (!(await pmSystem.isApprovedForAll(account, lmsrMarketMaker.address))) {\n      await pmSystem.setApprovalForAll(lmsrMarketMaker.address, true, {\n        from: account\n      });\n    }\n\n    const stagedTradeAmounts = Array.from({\n      length: positions.length\n    }, (_, i) => salePositionGroup.positions.find(({\n      positionIndex\n    }) => positionIndex === i) == null ? constants["f" /* zeroDecimal */] : salePositionGroup.amount.neg());\n    const tradeAmounts = stagedTradeAmounts.map(amount => amount.toString());\n    const collateralLimit = await lmsrMarketMaker.calcNetCost(tradeAmounts);\n    await lmsrMarketMaker.trade(tradeAmounts, collateralLimit, {\n      from: account\n    });\n  }, [account, lmsrMarketMaker, collateral]);\n  const sellOutcomeTokens = Object(react["useCallback"])(async () => {\n    if (stagedTradeAmounts == null) throw new Error(`No sell set yet`);\n    if (stagedTransactionType !== "sell outcome tokens") throw new Error(`Can\'t sell outcome tokens while staged transaction is to ${stagedTransactionType}`);\n\n    if (!(await pmSystem.isApprovedForAll(account, lmsrMarketMaker.address))) {\n      await pmSystem.setApprovalForAll(lmsrMarketMaker.address, true, {\n        from: account\n      });\n    }\n\n    const tradeAmounts = stagedTradeAmounts.map(amount => amount.toString());\n    const collateralLimit = await lmsrMarketMaker.calcNetCost(tradeAmounts);\n    asWrappedTransaction("sell outcome tokens", sellOutcomeTokens, setError);\n    await lmsrMarketMaker.trade(tradeAmounts, collateralLimit, {\n      from: account\n    });\n  }, [collateral, stagedTradeAmounts, stagedTransactionType, pmSystem, asWrappedTransaction, account]);\n  const marketStage = lmsrState && lmsrState.stage;\n  const allMarketsResolved = marketResolutionStates && marketResolutionStates.every(({\n    isResolved\n  }) => isResolved);\n  const [redemptionAmount, setRedemptionAmount] = Object(react["useState"])(null);\n  Object(react["useEffect"])(() => {\n    setRedemptionAmount(allMarketsResolved && positionBalances != null ? positionBalances.reduce((payoutSum, balance, positionIndex) => payoutSum.add(positions[positionIndex].outcomes.reduce((payoutProduct, {\n      marketIndex,\n      outcomeIndex\n    }) => payoutProduct.mul(marketResolutionStates[marketIndex].payoutNumerators[outcomeIndex]).div(marketResolutionStates[marketIndex].payoutDenominator), balance)), Positions_toBN(0)) : null);\n  }, [positions, positionBalances, marketResolutionStates]);\n  const redeemPositions = Object(react["useCallback"])(async () => {\n    if (!allMarketsResolved) throw new Error("Can\'t redeem until all markets resolved");\n\n    async function redeemPositionsThroughAllMarkets(marketsLeft, parentCollectionId) {\n      if (marketsLeft === 0) return;\n      const market = markets[marketsLeft - 1];\n      const indexSets = [];\n\n      for (let outcomeIndex = 0; outcomeIndex < market.outcomes.length; outcomeIndex++) {\n        const outcome = market.outcomes[outcomeIndex];\n        const childCollectionId = padLeft(toHex(Positions_toBN(parentCollectionId).add(Positions_toBN(outcome.collectionId)).maskn(256)), 64);\n        const childPositionId = soliditySha3({\n          t: "address",\n          v: collateral.address\n        }, {\n          t: "uint",\n          v: childCollectionId\n        });\n        await redeemPositionsThroughAllMarkets(marketsLeft - 1, childCollectionId);\n\n        if ((await pmSystem.balanceOf(account, childPositionId)).gtn(0)) {\n          indexSets.push(Positions_toBN(1).shln(outcomeIndex));\n        }\n      }\n\n      if (indexSets.length > 0) {\n        await pmSystem.redeemPositions(collateral.address, parentCollectionId, market.conditionId, indexSets, {\n          from: account\n        });\n      }\n    }\n\n    await redeemPositionsThroughAllMarkets(markets.length, `0x${"0".repeat(64)}`);\n  }, [collateral, account, pmSystem]);\n\n  if (positionGroups === null) {\n    return react_default.a.createElement(react_default.a.Fragment, null, react_default.a.createElement("div", {\n      className: Positions_cx("positions-heading")\n    }, "Your Positions"), react_default.a.createElement("div", {\n      className: Positions_cx("positions-empty")\n    }, react_default.a.createElement(Spinner["default"], {\n      width: 25,\n      height: 25,\n      centered: true\n    })));\n  }\n\n  return react_default.a.createElement(react_default.a.Fragment, null, react_default.a.createElement("div", {\n    className: Positions_cx("positions-heading")\n  }, "Your Positions"), positionGroups.length === 0 && react_default.a.createElement("div", {\n    className: Positions_cx("positions-empty")\n  }, "You have no positions."), allMarketsResolved && react_default.a.createElement(react_default.a.Fragment, null, react_default.a.createElement("div", {\n    className: Positions_cx("positions-subheading")\n  }, "Redeeming your positions will net you a total of", " ", Object(formatting["a" /* formatCollateral */])(redemptionAmount, collateral)), react_default.a.createElement("div", {\n    className: Positions_cx("positions-redeem")\n  }, react_default.a.createElement("button", {\n    type: "button",\n    className: Positions_cx("redeem-all"),\n    disabled: ongoingTransactionType != null,\n    onClick: asWrappedTransaction("redeem positions", redeemPositions, setError)\n  }, ongoingTransactionType === "redeem positions" ? react_default.a.createElement(Spinner["default"], {\n    inverted: true,\n    width: 25,\n    height: 25\n  }) : react_default.a.createElement(react_default.a.Fragment, null, "Redeem Positions"))), error != null && react_default.a.createElement("span", {\n    className: Positions_cx("error")\n  }, error.message)), !allMarketsResolved && positionGroups.length > 0 && react_default.a.createElement(react_default.a.Fragment, null, react_default.a.createElement("div", {\n    className: Positions_cx("positions-subheading")\n  }, react_default.a.createElement("span", {\n    className: Positions_cx("position-col-outcome")\n  }, "Position"), react_default.a.createElement("span", {\n    className: Positions_cx("position-col-value")\n  }, "Current Value"), react_default.a.createElement("span", {\n    className: Positions_cx("position-col-sell")\n  })), react_default.a.createElement("div", {\n    className: Positions_cx("positions-entries")\n  }, positionGroups.map((positionGroup, index) => react_default.a.createElement("div", {\n    className: Positions_cx("position-entry"),\n    key: index\n  }, react_default.a.createElement("div", {\n    className: Positions_cx("position-col-outcome")\n  }, positionGroup.outcomeSet.map(outcome => react_default.a.createElement(components_OutcomeCard, Positions_extends({}, outcome, {\n    key: `${outcome.marketIndex}-${outcome.outcomeIndex}`,\n    glueType: "and",\n    prefixType: "IF"\n  })))), react_default.a.createElement("div", {\n    className: Positions_cx("position-col-value", "position-values")\n  }, react_default.a.createElement("p", {\n    className: Positions_cx("value")\n  }, Object(formatting["a" /* formatCollateral */])(positionGroup.runningAmount, collateral))), react_default.a.createElement("div", {\n    className: Positions_cx("position-col-sell", "position-sell")\n  }, react_default.a.createElement("button", {\n    className: Positions_cx("button"),\n    type: "button",\n    disabled: ongoingTransactionType === "sell outcome tokens",\n    onClick: asWrappedTransaction("sell outcome tokens", () => sellAllTokensOfGroup(positionGroup), setError)\n  }, ongoingTransactionType === "sell outcome tokens" ? react_default.a.createElement(Spinner["default"], {\n    width: 16,\n    height: 16,\n    centered: true,\n    inverted: true\n  }) : "Sell")))))), error != null && react_default.a.createElement("span", {\n    className: bind_default()("error")\n  }, error.message));\n};\n\n/* harmony default export */ var Sidebar_Positions = (Positions);\n// CONCATENATED MODULE: ./src/Sidebar/index.js\n\n\n\n\n\n\nconst Sidebar_cx = bind_default.a.bind(sidebar_default.a);\n\nconst Sidebar = props => {\n  return react_default.a.createElement("div", {\n    className: Sidebar_cx("sidebar")\n  }, react_default.a.createElement(Sidebar_Balance, props), react_default.a.createElement(Sidebar_Buy, props), react_default.a.createElement(Sidebar_Positions, props));\n};\n\n/* harmony default export */ var src_Sidebar = __webpack_exports__["default"] = (Sidebar);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///43\n')},539:function(module,exports,__webpack_require__){eval("\nvar content = __webpack_require__(540);\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(1)(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvU2lkZWJhci9zaWRlYmFyLnNjc3M/NmUwMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EsY0FBYyxtQkFBTyxDQUFDLEdBQXlIOztBQUUvSSw0Q0FBNEMsUUFBUzs7QUFFckQ7QUFDQTs7OztBQUlBLGVBQWU7O0FBRWY7QUFDQTs7QUFFQSxhQUFhLG1CQUFPLENBQUMsQ0FBc0Q7O0FBRTNFOztBQUVBLEdBQUcsS0FBVSxFQUFFIiwiZmlsZSI6IjUzOS5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS01LTEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9zaWRlYmFyLnNjc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTUtMSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL3NpZGViYXIuc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTUtMSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL3NpZGViYXIuc2Nzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///539\n")},540:function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(0)(false);\n// Module\nexports.push([module.i, "", ""]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvU2lkZWJhci9zaWRlYmFyLnNjc3M/Zjg1ZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSwyQkFBMkIsbUJBQU8sQ0FBQyxDQUFzRDtBQUN6RjtBQUNBLGNBQWMsUUFBUyIsImZpbGUiOiI1NDAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKShmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIlwiLCBcIlwiXSk7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///540\n')},541:function(module,exports,__webpack_require__){eval("\nvar content = __webpack_require__(542);\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(1)(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvU2lkZWJhci9CYWxhbmNlL2JhbGFuY2Uuc2Nzcz8zMzQ1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSxjQUFjLG1CQUFPLENBQUMsR0FBK0g7O0FBRXJKLDRDQUE0QyxRQUFTOztBQUVyRDtBQUNBOzs7O0FBSUEsZUFBZTs7QUFFZjtBQUNBOztBQUVBLGFBQWEsbUJBQU8sQ0FBQyxDQUF5RDs7QUFFOUU7O0FBRUEsR0FBRyxLQUFVLEVBQUUiLCJmaWxlIjoiNTQxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTUtMSEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL2JhbGFuY2Uuc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tNS0xIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vYmFsYW5jZS5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tNS0xIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vYmFsYW5jZS5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///541\n")},542:function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(0)(false);\n// Module\nexports.push([module.i, ".balance__balance--2N_i_{padding:1.2rem 0.8rem;background-color:#ffffff;border-bottom:1px solid #dedfde;font-size:100%;display:flex;justify-content:space-between}.balance__balance--2N_i_ .balance__value--23BOE{font-weight:800}\\n", ""]);\n// Exports\nexports.locals = {\n\t"balance": "balance__balance--2N_i_",\n\t"value": "balance__value--23BOE"\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvU2lkZWJhci9CYWxhbmNlL2JhbGFuY2Uuc2Nzcz8yYjNiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDJCQUEyQixtQkFBTyxDQUFDLENBQXlEO0FBQzVGO0FBQ0EsY0FBYyxRQUFTLDRCQUE0QixzQkFBc0IseUJBQXlCLGdDQUFnQyxlQUFlLGFBQWEsOEJBQThCLGdEQUFnRCxnQkFBZ0I7QUFDNVA7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiI1NDIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKShmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5iYWxhbmNlX19iYWxhbmNlLS0yTl9pX3twYWRkaW5nOjEuMnJlbSAwLjhyZW07YmFja2dyb3VuZC1jb2xvcjojZmZmZmZmO2JvcmRlci1ib3R0b206MXB4IHNvbGlkICNkZWRmZGU7Zm9udC1zaXplOjEwMCU7ZGlzcGxheTpmbGV4O2p1c3RpZnktY29udGVudDpzcGFjZS1iZXR3ZWVufS5iYWxhbmNlX19iYWxhbmNlLS0yTl9pXyAuYmFsYW5jZV9fdmFsdWUtLTIzQk9Fe2ZvbnQtd2VpZ2h0OjgwMH1cXG5cIiwgXCJcIl0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0cy5sb2NhbHMgPSB7XG5cdFwiYmFsYW5jZVwiOiBcImJhbGFuY2VfX2JhbGFuY2UtLTJOX2lfXCIsXG5cdFwidmFsdWVcIjogXCJiYWxhbmNlX192YWx1ZS0tMjNCT0VcIlxufTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///542\n')},543:function(module,exports,__webpack_require__){eval("\nvar content = __webpack_require__(544);\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(1)(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvU2lkZWJhci9CdXkvYnV5LnNjc3M/MzcyZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EsY0FBYyxtQkFBTyxDQUFDLEdBQTJIOztBQUVqSiw0Q0FBNEMsUUFBUzs7QUFFckQ7QUFDQTs7OztBQUlBLGVBQWU7O0FBRWY7QUFDQTs7QUFFQSxhQUFhLG1CQUFPLENBQUMsQ0FBeUQ7O0FBRTlFOztBQUVBLEdBQUcsS0FBVSxFQUFFIiwiZmlsZSI6IjU0My5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS01LTEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9idXkuc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tNS0xIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vYnV5LnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS01LTEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9idXkuc2Nzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///543\n")},544:function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(0)(false);\n// Module\nexports.push([module.i, ".buy__buy-heading--ZwO71{padding:1.2rem 0.8rem;background-color:#ffffff;border-bottom:1px solid #dedfde;font-size:100%;font-weight:800}.buy__buy-subheading--3lko1{padding:1.2rem 0.8rem;background-color:#ffffff;border-bottom:1px solid #dedfde;font-size:100%;border-bottom:none;text-align:center;font-size:90%;font-weight:800}.buy__buy-empty--3z0Ch{padding:1.2rem 0.8rem;background-color:#ffffff;border-bottom:1px solid #dedfde;font-size:100%;padding-top:4rem;padding-bottom:4rem;text-align:center;font-size:90%;font-weight:600;border-bottom:none;white-space:wrap}.buy__buy-confirm--AtKA0{padding:1.2rem 0.8rem;background-color:#ffffff;border-bottom:1px solid #dedfde;font-size:100%;padding-top:0}.buy__buy-summary-heading--2gEr5{padding:1.2rem 0.8rem;background-color:#ffffff;border-bottom:1px solid #dedfde;font-size:100%;padding-top:0.8rem;padding-bottom:0.8rem;font-size:80%;color:#526877;border-bottom:none}.buy__buy-summary-category--3bLPZ{padding:1.2rem 0.8rem;background-color:#ffffff;border-bottom:1px solid #dedfde;font-size:100%;padding-top:0.5rem;padding-bottom:0.5rem;background-color:#f7f8fb;display:flex;justify-content:space-between}.buy__buy-summary--XRY40 .buy__category-values-positive--z-8ud{color:#02ae60}.buy__buy-summary--XRY40 .buy__category-values-negative--UuYxM{color:#ff685e}.buy__buy-summary--XRY40 .buy__category-values--1WI7o .buy__category-value--3OQGX{text-align:right;white-space:nowrap;margin:0}.buy__buy-summary--XRY40 .buy__category-values--1WI7o .buy__category-value--3OQGX.buy__value--aNcNX{font-weight:800}.buy__buy-summary--XRY40 .buy__category-values--1WI7o .buy__category-value--3OQGX.buy__margin--1T3HH{font-size:80%}.buy__buy-summary--XRY40 .buy__category-entries--EWoth{display:flex;align-self:flex-start;flex-wrap:wrap}.buy__buy-investment--3dvYg{padding:1.2rem 0.8rem;background-color:#ffffff;border-bottom:1px solid #dedfde;font-size:100%;display:flex;align-items:center;position:relative;border-bottom:none;padding-top:0}.buy__buy-investment--3dvYg .buy__buy-invest--2_YOV{-webkit-appearance:none;padding:0;appearance:none;border:none;background:none;width:24px;height:24px;display:block;font-size:200%;line-height:0;color:#009cb4}.buy__buy-investment--3dvYg .buy__buy-invest--2_YOV:hover,.buy__buy-investment--3dvYg .buy__buy-invest--2_YOV:focus,.buy__buy-investment--3dvYg .buy__buy-invest--2_YOV:active{color:#00444e}.buy__buy-investment--3dvYg .buy__input-group--3RISe{position:relative;margin:0 0.4rem}.buy__buy-investment--3dvYg .buy__input--1QDiX{height:24px;padding:1.4rem 2rem 1.4rem 3rem;text-align:right;font-weight:100;border:1px solid #dedfed;border-radius:2px;flex:1}.buy__buy-investment--3dvYg .buy__input--1QDiX::-webkit-inner-spin-button,.buy__buy-investment--3dvYg .buy__input--1QDiX::-webkit-outer-spin-button{-webkit-appearance:none;margin:0}.buy__buy-investment--3dvYg .buy__input-append--f8BS1{position:absolute;height:100%}.buy__buy-investment--3dvYg .buy__input-append--f8BS1:last-child{right:0}.buy__buy-investment--3dvYg .buy__input-append--f8BS1:first-child{left:0}.buy__button--29cej{-webkit-appearance:none;appearance:none;border:none;background-color:#02ae60;border-radius:2px;text-transform:uppercase;display:block;width:100%;padding:1rem 0;color:#ffffff}.buy__button--29cej.buy__disabled--18-R9,.buy__button--29cej:disabled{opacity:0.4}.buy__link-button--1z8Wt{-webkit-appearance:none;appearance:none;background:none;border:none;color:#009cb4;font-size:90%;text-align:right;text-decoration:underline;float:right}.buy__link-button--1z8Wt:hover,.buy__link-button--1z8Wt:focus,.buy__link-button--1z8Wt:active{color:#00444e}.buy__collateral-name--1Piaf{line-height:3rem;padding:0 0.7rem}\\n", ""]);\n// Exports\nexports.locals = {\n\t"buy-heading": "buy__buy-heading--ZwO71",\n\t"buy-subheading": "buy__buy-subheading--3lko1",\n\t"buy-empty": "buy__buy-empty--3z0Ch",\n\t"buy-confirm": "buy__buy-confirm--AtKA0",\n\t"buy-summary-heading": "buy__buy-summary-heading--2gEr5",\n\t"buy-summary-category": "buy__buy-summary-category--3bLPZ",\n\t"buy-summary": "buy__buy-summary--XRY40",\n\t"category-values-positive": "buy__category-values-positive--z-8ud",\n\t"category-values-negative": "buy__category-values-negative--UuYxM",\n\t"category-values": "buy__category-values--1WI7o",\n\t"category-value": "buy__category-value--3OQGX",\n\t"value": "buy__value--aNcNX",\n\t"margin": "buy__margin--1T3HH",\n\t"category-entries": "buy__category-entries--EWoth",\n\t"buy-investment": "buy__buy-investment--3dvYg",\n\t"buy-invest": "buy__buy-invest--2_YOV",\n\t"input-group": "buy__input-group--3RISe",\n\t"input": "buy__input--1QDiX",\n\t"input-append": "buy__input-append--f8BS1",\n\t"button": "buy__button--29cej",\n\t"disabled": "buy__disabled--18-R9",\n\t"link-button": "buy__link-button--1z8Wt",\n\t"collateral-name": "buy__collateral-name--1Piaf"\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///544\n')},545:function(module,exports,__webpack_require__){eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif ( true && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (true) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n\t\t\treturn classNames;\n\t\t}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else {}\n}());\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NsYXNzbmFtZXMvaW5kZXguanM/ZjA5NyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSxnQkFBZ0I7O0FBRWhCO0FBQ0E7O0FBRUEsaUJBQWlCLHNCQUFzQjtBQUN2QztBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSxLQUFLLEtBQTZCO0FBQ2xDO0FBQ0E7QUFDQSxFQUFFLFVBQVUsSUFBNEU7QUFDeEY7QUFDQSxFQUFFLGlDQUFxQixFQUFFLG1DQUFFO0FBQzNCO0FBQ0EsR0FBRztBQUFBLG9HQUFDO0FBQ0osRUFBRSxNQUFNLEVBRU47QUFDRixDQUFDIiwiZmlsZSI6IjU0NS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICBDb3B5cmlnaHQgKGMpIDIwMTcgSmVkIFdhdHNvbi5cbiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlIChNSVQpLCBzZWVcbiAgaHR0cDovL2plZHdhdHNvbi5naXRodWIuaW8vY2xhc3NuYW1lc1xuKi9cbi8qIGdsb2JhbCBkZWZpbmUgKi9cblxuKGZ1bmN0aW9uICgpIHtcblx0J3VzZSBzdHJpY3QnO1xuXG5cdHZhciBoYXNPd24gPSB7fS5oYXNPd25Qcm9wZXJ0eTtcblxuXHRmdW5jdGlvbiBjbGFzc05hbWVzICgpIHtcblx0XHR2YXIgY2xhc3NlcyA9IFtdO1xuXG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBhcmcgPSBhcmd1bWVudHNbaV07XG5cdFx0XHRpZiAoIWFyZykgY29udGludWU7XG5cblx0XHRcdHZhciBhcmdUeXBlID0gdHlwZW9mIGFyZztcblxuXHRcdFx0aWYgKGFyZ1R5cGUgPT09ICdzdHJpbmcnIHx8IGFyZ1R5cGUgPT09ICdudW1iZXInKSB7XG5cdFx0XHRcdGNsYXNzZXMucHVzaChhcmcpO1xuXHRcdFx0fSBlbHNlIGlmIChBcnJheS5pc0FycmF5KGFyZykgJiYgYXJnLmxlbmd0aCkge1xuXHRcdFx0XHR2YXIgaW5uZXIgPSBjbGFzc05hbWVzLmFwcGx5KG51bGwsIGFyZyk7XG5cdFx0XHRcdGlmIChpbm5lcikge1xuXHRcdFx0XHRcdGNsYXNzZXMucHVzaChpbm5lcik7XG5cdFx0XHRcdH1cblx0XHRcdH0gZWxzZSBpZiAoYXJnVHlwZSA9PT0gJ29iamVjdCcpIHtcblx0XHRcdFx0Zm9yICh2YXIga2V5IGluIGFyZykge1xuXHRcdFx0XHRcdGlmIChoYXNPd24uY2FsbChhcmcsIGtleSkgJiYgYXJnW2tleV0pIHtcblx0XHRcdFx0XHRcdGNsYXNzZXMucHVzaChrZXkpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiBjbGFzc2VzLmpvaW4oJyAnKTtcblx0fVxuXG5cdGlmICh0eXBlb2YgbW9kdWxlICE9PSAndW5kZWZpbmVkJyAmJiBtb2R1bGUuZXhwb3J0cykge1xuXHRcdGNsYXNzTmFtZXMuZGVmYXVsdCA9IGNsYXNzTmFtZXM7XG5cdFx0bW9kdWxlLmV4cG9ydHMgPSBjbGFzc05hbWVzO1xuXHR9IGVsc2UgaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIGRlZmluZS5hbWQgPT09ICdvYmplY3QnICYmIGRlZmluZS5hbWQpIHtcblx0XHQvLyByZWdpc3RlciBhcyAnY2xhc3NuYW1lcycsIGNvbnNpc3RlbnQgd2l0aCBucG0gcGFja2FnZSBuYW1lXG5cdFx0ZGVmaW5lKCdjbGFzc25hbWVzJywgW10sIGZ1bmN0aW9uICgpIHtcblx0XHRcdHJldHVybiBjbGFzc05hbWVzO1xuXHRcdH0pO1xuXHR9IGVsc2Uge1xuXHRcdHdpbmRvdy5jbGFzc05hbWVzID0gY2xhc3NOYW1lcztcblx0fVxufSgpKTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///545\n")},546:function(module,exports,__webpack_require__){eval("\nvar content = __webpack_require__(547);\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(1)(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9vdXRjb21lQ2FyZC5zY3NzPzNhYTgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLGNBQWMsbUJBQU8sQ0FBQyxHQUE2SDs7QUFFbkosNENBQTRDLFFBQVM7O0FBRXJEO0FBQ0E7Ozs7QUFJQSxlQUFlOztBQUVmO0FBQ0E7O0FBRUEsYUFBYSxtQkFBTyxDQUFDLENBQXNEOztBQUUzRTs7QUFFQSxHQUFHLEtBQVUsRUFBRSIsImZpbGUiOiI1NDYuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tNS0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vb3V0Y29tZUNhcmQuc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tNS0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vb3V0Y29tZUNhcmQuc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTUtMSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL291dGNvbWVDYXJkLnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///546\n")},547:function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(0)(false);\n// Module\nexports.push([module.i, ".outcomeCard__outcome-card--eIeOC{position:relative;border-radius:3px;border:1px solid #dedfde;margin-top:3px;display:flex;white-space:nowrap}.outcomeCard__outcome-card--eIeOC :first-child{border-top-left-radius:2px;border-bottom-left-radius:2px}.outcomeCard__outcome-card--eIeOC .outcomeCard__market--1VBhd{background-color:#526877;color:#ffffff;padding:0.3rem}.outcomeCard__outcome-card--eIeOC .outcomeCard__outcome--IfeII{padding:0.3rem}.outcomeCard__outcome-card--eIeOC .outcomeCard__outcome--IfeII .outcomeCard__dot--3xutp{width:12px;height:0;display:inline-block;position:relative}.outcomeCard__outcome-card--eIeOC .outcomeCard__outcome--IfeII .outcomeCard__dot--3xutp::after{content:\'\';display:block;background-color:currentColor;position:absolute;left:calc(50% - 6px);width:12px;height:12px;margin-top:-11px;border-radius:100%}.outcomeCard__outcome-card--eIeOC.outcomeCard__glue-or--2Lihv{margin-left:20px}.outcomeCard__outcome-card--eIeOC.outcomeCard__glue-or--2Lihv:not(:last-of-type)::after{content:\'or\'}.outcomeCard__outcome-card--eIeOC.outcomeCard__glue-and--35Q_J{margin-left:20px}.outcomeCard__outcome-card--eIeOC.outcomeCard__glue-and--35Q_J:not(:last-of-type)::after{content:\'&\'}.outcomeCard__outcome-card--eIeOC.outcomeCard__glue-or--2Lihv:not(:last-of-type)::after,.outcomeCard__outcome-card--eIeOC.outcomeCard__glue-and--35Q_J:not(:last-of-type)::after{display:block;position:absolute;width:12px;height:100%;line-height:28px;right:-18px;top:0}.outcomeCard__outcome-card--eIeOC.outcomeCard__prefix-IF--2eOTJ:first-of-type{margin-left:20px}.outcomeCard__outcome-card--eIeOC.outcomeCard__prefix-IF--2eOTJ:first-of-type::before{display:block;position:absolute;width:12px;height:100%;line-height:28px;left:-18px;top:0;content:\'IF\'}\\n", ""]);\n// Exports\nexports.locals = {\n\t"outcome-card": "outcomeCard__outcome-card--eIeOC",\n\t"market": "outcomeCard__market--1VBhd",\n\t"outcome": "outcomeCard__outcome--IfeII",\n\t"dot": "outcomeCard__dot--3xutp",\n\t"glue-or": "outcomeCard__glue-or--2Lihv",\n\t"glue-and": "outcomeCard__glue-and--35Q_J",\n\t"prefix-IF": "outcomeCard__prefix-IF--2eOTJ"\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9vdXRjb21lQ2FyZC5zY3NzP2E0NGIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsMkJBQTJCLG1CQUFPLENBQUMsQ0FBc0Q7QUFDekY7QUFDQSxjQUFjLFFBQVMscUNBQXFDLGtCQUFrQixrQkFBa0IseUJBQXlCLGVBQWUsYUFBYSxtQkFBbUIsK0NBQStDLDJCQUEyQiw4QkFBOEIsOERBQThELHlCQUF5QixjQUFjLGVBQWUsK0RBQStELGVBQWUsd0ZBQXdGLFdBQVcsU0FBUyxxQkFBcUIsa0JBQWtCLCtGQUErRixXQUFXLGNBQWMsOEJBQThCLGtCQUFrQixxQkFBcUIsV0FBVyxZQUFZLGlCQUFpQixtQkFBbUIsOERBQThELGlCQUFpQix3RkFBd0YsYUFBYSwrREFBK0QsaUJBQWlCLHlGQUF5RixZQUFZLGlMQUFpTCxjQUFjLGtCQUFrQixXQUFXLFlBQVksaUJBQWlCLFlBQVksTUFBTSw4RUFBOEUsaUJBQWlCLHNGQUFzRixjQUFjLGtCQUFrQixXQUFXLFlBQVksaUJBQWlCLFdBQVcsTUFBTSxhQUFhO0FBQzV1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiI1NDcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKShmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5vdXRjb21lQ2FyZF9fb3V0Y29tZS1jYXJkLS1lSWVPQ3twb3NpdGlvbjpyZWxhdGl2ZTtib3JkZXItcmFkaXVzOjNweDtib3JkZXI6MXB4IHNvbGlkICNkZWRmZGU7bWFyZ2luLXRvcDozcHg7ZGlzcGxheTpmbGV4O3doaXRlLXNwYWNlOm5vd3JhcH0ub3V0Y29tZUNhcmRfX291dGNvbWUtY2FyZC0tZUllT0MgOmZpcnN0LWNoaWxke2JvcmRlci10b3AtbGVmdC1yYWRpdXM6MnB4O2JvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6MnB4fS5vdXRjb21lQ2FyZF9fb3V0Y29tZS1jYXJkLS1lSWVPQyAub3V0Y29tZUNhcmRfX21hcmtldC0tMVZCaGR7YmFja2dyb3VuZC1jb2xvcjojNTI2ODc3O2NvbG9yOiNmZmZmZmY7cGFkZGluZzowLjNyZW19Lm91dGNvbWVDYXJkX19vdXRjb21lLWNhcmQtLWVJZU9DIC5vdXRjb21lQ2FyZF9fb3V0Y29tZS0tSWZlSUl7cGFkZGluZzowLjNyZW19Lm91dGNvbWVDYXJkX19vdXRjb21lLWNhcmQtLWVJZU9DIC5vdXRjb21lQ2FyZF9fb3V0Y29tZS0tSWZlSUkgLm91dGNvbWVDYXJkX19kb3QtLTN4dXRwe3dpZHRoOjEycHg7aGVpZ2h0OjA7ZGlzcGxheTppbmxpbmUtYmxvY2s7cG9zaXRpb246cmVsYXRpdmV9Lm91dGNvbWVDYXJkX19vdXRjb21lLWNhcmQtLWVJZU9DIC5vdXRjb21lQ2FyZF9fb3V0Y29tZS0tSWZlSUkgLm91dGNvbWVDYXJkX19kb3QtLTN4dXRwOjphZnRlcntjb250ZW50OicnO2Rpc3BsYXk6YmxvY2s7YmFja2dyb3VuZC1jb2xvcjpjdXJyZW50Q29sb3I7cG9zaXRpb246YWJzb2x1dGU7bGVmdDpjYWxjKDUwJSAtIDZweCk7d2lkdGg6MTJweDtoZWlnaHQ6MTJweDttYXJnaW4tdG9wOi0xMXB4O2JvcmRlci1yYWRpdXM6MTAwJX0ub3V0Y29tZUNhcmRfX291dGNvbWUtY2FyZC0tZUllT0Mub3V0Y29tZUNhcmRfX2dsdWUtb3ItLTJMaWh2e21hcmdpbi1sZWZ0OjIwcHh9Lm91dGNvbWVDYXJkX19vdXRjb21lLWNhcmQtLWVJZU9DLm91dGNvbWVDYXJkX19nbHVlLW9yLS0yTGlodjpub3QoOmxhc3Qtb2YtdHlwZSk6OmFmdGVye2NvbnRlbnQ6J29yJ30ub3V0Y29tZUNhcmRfX291dGNvbWUtY2FyZC0tZUllT0Mub3V0Y29tZUNhcmRfX2dsdWUtYW5kLS0zNVFfSnttYXJnaW4tbGVmdDoyMHB4fS5vdXRjb21lQ2FyZF9fb3V0Y29tZS1jYXJkLS1lSWVPQy5vdXRjb21lQ2FyZF9fZ2x1ZS1hbmQtLTM1UV9KOm5vdCg6bGFzdC1vZi10eXBlKTo6YWZ0ZXJ7Y29udGVudDonJid9Lm91dGNvbWVDYXJkX19vdXRjb21lLWNhcmQtLWVJZU9DLm91dGNvbWVDYXJkX19nbHVlLW9yLS0yTGlodjpub3QoOmxhc3Qtb2YtdHlwZSk6OmFmdGVyLC5vdXRjb21lQ2FyZF9fb3V0Y29tZS1jYXJkLS1lSWVPQy5vdXRjb21lQ2FyZF9fZ2x1ZS1hbmQtLTM1UV9KOm5vdCg6bGFzdC1vZi10eXBlKTo6YWZ0ZXJ7ZGlzcGxheTpibG9jaztwb3NpdGlvbjphYnNvbHV0ZTt3aWR0aDoxMnB4O2hlaWdodDoxMDAlO2xpbmUtaGVpZ2h0OjI4cHg7cmlnaHQ6LTE4cHg7dG9wOjB9Lm91dGNvbWVDYXJkX19vdXRjb21lLWNhcmQtLWVJZU9DLm91dGNvbWVDYXJkX19wcmVmaXgtSUYtLTJlT1RKOmZpcnN0LW9mLXR5cGV7bWFyZ2luLWxlZnQ6MjBweH0ub3V0Y29tZUNhcmRfX291dGNvbWUtY2FyZC0tZUllT0Mub3V0Y29tZUNhcmRfX3ByZWZpeC1JRi0tMmVPVEo6Zmlyc3Qtb2YtdHlwZTo6YmVmb3Jle2Rpc3BsYXk6YmxvY2s7cG9zaXRpb246YWJzb2x1dGU7d2lkdGg6MTJweDtoZWlnaHQ6MTAwJTtsaW5lLWhlaWdodDoyOHB4O2xlZnQ6LTE4cHg7dG9wOjA7Y29udGVudDonSUYnfVxcblwiLCBcIlwiXSk7XG4vLyBFeHBvcnRzXG5leHBvcnRzLmxvY2FscyA9IHtcblx0XCJvdXRjb21lLWNhcmRcIjogXCJvdXRjb21lQ2FyZF9fb3V0Y29tZS1jYXJkLS1lSWVPQ1wiLFxuXHRcIm1hcmtldFwiOiBcIm91dGNvbWVDYXJkX19tYXJrZXQtLTFWQmhkXCIsXG5cdFwib3V0Y29tZVwiOiBcIm91dGNvbWVDYXJkX19vdXRjb21lLS1JZmVJSVwiLFxuXHRcImRvdFwiOiBcIm91dGNvbWVDYXJkX19kb3QtLTN4dXRwXCIsXG5cdFwiZ2x1ZS1vclwiOiBcIm91dGNvbWVDYXJkX19nbHVlLW9yLS0yTGlodlwiLFxuXHRcImdsdWUtYW5kXCI6IFwib3V0Y29tZUNhcmRfX2dsdWUtYW5kLS0zNVFfSlwiLFxuXHRcInByZWZpeC1JRlwiOiBcIm91dGNvbWVDYXJkX19wcmVmaXgtSUYtLTJlT1RKXCJcbn07Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///547\n')},548:function(module,exports,__webpack_require__){eval("\nvar content = __webpack_require__(549);\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(1)(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvU2lkZWJhci9Qb3NpdGlvbnMvcG9zaXRpb25zLnNjc3M/YThmOSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EsY0FBYyxtQkFBTyxDQUFDLEdBQWlJOztBQUV2Siw0Q0FBNEMsUUFBUzs7QUFFckQ7QUFDQTs7OztBQUlBLGVBQWU7O0FBRWY7QUFDQTs7QUFFQSxhQUFhLG1CQUFPLENBQUMsQ0FBeUQ7O0FBRTlFOztBQUVBLEdBQUcsS0FBVSxFQUFFIiwiZmlsZSI6IjU0OC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS01LTEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9wb3NpdGlvbnMuc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tNS0xIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vcG9zaXRpb25zLnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS01LTEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9wb3NpdGlvbnMuc2Nzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///548\n")},549:function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(0)(false);\n// Module\nexports.push([module.i, ".positions__positions-heading--2r16d{padding:1.2rem 0.8rem;background-color:#ffffff;border-bottom:1px solid #dedfde;font-size:100%;font-weight:800}.positions__positions-empty--3bkxV{padding:1.2rem 0.8rem;background-color:#ffffff;border-bottom:1px solid #dedfde;font-size:100%;padding-top:4rem;padding-bottom:4rem;text-align:center;font-size:90%;font-weight:600}.positions__positions-subheading--2Hq7p{padding:1.2rem 0.8rem;background-color:#ffffff;border-bottom:1px solid #dedfde;font-size:100%;border-bottom:none;font-weight:100;font-size:90%;color:#5a5a5a;display:flex;padding-top:0.5em;padding-bottom:0.5em}.positions__positions-redeem--31TBQ{padding:1.2rem 0.8rem;background-color:#ffffff;border-bottom:1px solid #dedfde;font-size:100%;border-bottom:none}.positions__positions-redeem--31TBQ .positions__redeem-all--1ycNl{-webkit-appearance:none;appearance:none;border:none;background-color:#02ae60;border-radius:2px;text-transform:uppercase;display:block;width:100%;padding:1rem 0;color:#ffffff}.positions__positions-redeem--31TBQ .positions__redeem-all--1ycNl.positions__disabled--7h_Hp,.positions__positions-redeem--31TBQ .positions__redeem-all--1ycNl:disabled{opacity:0.4}.positions__position-entry--3pTQ5{display:flex;align-self:flex-start;flex-wrap:wrap;padding:1.2rem 0.8rem;background-color:#ffffff;border-bottom:1px solid #dedfde;font-size:100%;padding-top:0;padding-bottom:0;border-bottom:none}.positions__position-entry--3pTQ5 .positions__value--3peuo{text-align:right;padding:0.3em;margin:0}.positions__position-sell--n7B4h .positions__button--1ZXv3{appearance:none;-webkit-appearance:none;border-radius:3px;background-color:#ff685e;padding:0.3rem 0.8em;color:#ffffff;text-transform:uppercase}.positions__position-col-outcome--2J6ss{width:33%}.positions__position-col-value--3I8GJ{width:33%;text-align:right}.positions__position-col-sell--1glfh{text-align:right;width:33%}\\n", ""]);\n// Exports\nexports.locals = {\n\t"positions-heading": "positions__positions-heading--2r16d",\n\t"positions-empty": "positions__positions-empty--3bkxV",\n\t"positions-subheading": "positions__positions-subheading--2Hq7p",\n\t"positions-redeem": "positions__positions-redeem--31TBQ",\n\t"redeem-all": "positions__redeem-all--1ycNl",\n\t"disabled": "positions__disabled--7h_Hp",\n\t"position-entry": "positions__position-entry--3pTQ5",\n\t"value": "positions__value--3peuo",\n\t"position-sell": "positions__position-sell--n7B4h",\n\t"button": "positions__button--1ZXv3",\n\t"position-col-outcome": "positions__position-col-outcome--2J6ss",\n\t"position-col-value": "positions__position-col-value--3I8GJ",\n\t"position-col-sell": "positions__position-col-sell--1glfh"\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvU2lkZWJhci9Qb3NpdGlvbnMvcG9zaXRpb25zLnNjc3M/OWQ0OSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSwyQkFBMkIsbUJBQU8sQ0FBQyxDQUF5RDtBQUM1RjtBQUNBLGNBQWMsUUFBUyx3Q0FBd0Msc0JBQXNCLHlCQUF5QixnQ0FBZ0MsZUFBZSxnQkFBZ0IsbUNBQW1DLHNCQUFzQix5QkFBeUIsZ0NBQWdDLGVBQWUsaUJBQWlCLG9CQUFvQixrQkFBa0IsY0FBYyxnQkFBZ0Isd0NBQXdDLHNCQUFzQix5QkFBeUIsZ0NBQWdDLGVBQWUsbUJBQW1CLGdCQUFnQixjQUFjLGNBQWMsYUFBYSxrQkFBa0IscUJBQXFCLG9DQUFvQyxzQkFBc0IseUJBQXlCLGdDQUFnQyxlQUFlLG1CQUFtQixrRUFBa0Usd0JBQXdCLGdCQUFnQixZQUFZLHlCQUF5QixrQkFBa0IseUJBQXlCLGNBQWMsV0FBVyxlQUFlLGNBQWMsd0tBQXdLLFlBQVksa0NBQWtDLGFBQWEsc0JBQXNCLGVBQWUsc0JBQXNCLHlCQUF5QixnQ0FBZ0MsZUFBZSxjQUFjLGlCQUFpQixtQkFBbUIsMkRBQTJELGlCQUFpQixjQUFjLFNBQVMsMkRBQTJELGdCQUFnQix3QkFBd0Isa0JBQWtCLHlCQUF5QixxQkFBcUIsY0FBYyx5QkFBeUIsd0NBQXdDLFVBQVUsc0NBQXNDLFVBQVUsaUJBQWlCLHFDQUFxQyxpQkFBaUIsVUFBVTtBQUN6M0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiNTQ5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIucG9zaXRpb25zX19wb3NpdGlvbnMtaGVhZGluZy0tMnIxNmR7cGFkZGluZzoxLjJyZW0gMC44cmVtO2JhY2tncm91bmQtY29sb3I6I2ZmZmZmZjtib3JkZXItYm90dG9tOjFweCBzb2xpZCAjZGVkZmRlO2ZvbnQtc2l6ZToxMDAlO2ZvbnQtd2VpZ2h0OjgwMH0ucG9zaXRpb25zX19wb3NpdGlvbnMtZW1wdHktLTNia3hWe3BhZGRpbmc6MS4ycmVtIDAuOHJlbTtiYWNrZ3JvdW5kLWNvbG9yOiNmZmZmZmY7Ym9yZGVyLWJvdHRvbToxcHggc29saWQgI2RlZGZkZTtmb250LXNpemU6MTAwJTtwYWRkaW5nLXRvcDo0cmVtO3BhZGRpbmctYm90dG9tOjRyZW07dGV4dC1hbGlnbjpjZW50ZXI7Zm9udC1zaXplOjkwJTtmb250LXdlaWdodDo2MDB9LnBvc2l0aW9uc19fcG9zaXRpb25zLXN1YmhlYWRpbmctLTJIcTdwe3BhZGRpbmc6MS4ycmVtIDAuOHJlbTtiYWNrZ3JvdW5kLWNvbG9yOiNmZmZmZmY7Ym9yZGVyLWJvdHRvbToxcHggc29saWQgI2RlZGZkZTtmb250LXNpemU6MTAwJTtib3JkZXItYm90dG9tOm5vbmU7Zm9udC13ZWlnaHQ6MTAwO2ZvbnQtc2l6ZTo5MCU7Y29sb3I6IzVhNWE1YTtkaXNwbGF5OmZsZXg7cGFkZGluZy10b3A6MC41ZW07cGFkZGluZy1ib3R0b206MC41ZW19LnBvc2l0aW9uc19fcG9zaXRpb25zLXJlZGVlbS0tMzFUQlF7cGFkZGluZzoxLjJyZW0gMC44cmVtO2JhY2tncm91bmQtY29sb3I6I2ZmZmZmZjtib3JkZXItYm90dG9tOjFweCBzb2xpZCAjZGVkZmRlO2ZvbnQtc2l6ZToxMDAlO2JvcmRlci1ib3R0b206bm9uZX0ucG9zaXRpb25zX19wb3NpdGlvbnMtcmVkZWVtLS0zMVRCUSAucG9zaXRpb25zX19yZWRlZW0tYWxsLS0xeWNObHstd2Via2l0LWFwcGVhcmFuY2U6bm9uZTthcHBlYXJhbmNlOm5vbmU7Ym9yZGVyOm5vbmU7YmFja2dyb3VuZC1jb2xvcjojMDJhZTYwO2JvcmRlci1yYWRpdXM6MnB4O3RleHQtdHJhbnNmb3JtOnVwcGVyY2FzZTtkaXNwbGF5OmJsb2NrO3dpZHRoOjEwMCU7cGFkZGluZzoxcmVtIDA7Y29sb3I6I2ZmZmZmZn0ucG9zaXRpb25zX19wb3NpdGlvbnMtcmVkZWVtLS0zMVRCUSAucG9zaXRpb25zX19yZWRlZW0tYWxsLS0xeWNObC5wb3NpdGlvbnNfX2Rpc2FibGVkLS03aF9IcCwucG9zaXRpb25zX19wb3NpdGlvbnMtcmVkZWVtLS0zMVRCUSAucG9zaXRpb25zX19yZWRlZW0tYWxsLS0xeWNObDpkaXNhYmxlZHtvcGFjaXR5OjAuNH0ucG9zaXRpb25zX19wb3NpdGlvbi1lbnRyeS0tM3BUUTV7ZGlzcGxheTpmbGV4O2FsaWduLXNlbGY6ZmxleC1zdGFydDtmbGV4LXdyYXA6d3JhcDtwYWRkaW5nOjEuMnJlbSAwLjhyZW07YmFja2dyb3VuZC1jb2xvcjojZmZmZmZmO2JvcmRlci1ib3R0b206MXB4IHNvbGlkICNkZWRmZGU7Zm9udC1zaXplOjEwMCU7cGFkZGluZy10b3A6MDtwYWRkaW5nLWJvdHRvbTowO2JvcmRlci1ib3R0b206bm9uZX0ucG9zaXRpb25zX19wb3NpdGlvbi1lbnRyeS0tM3BUUTUgLnBvc2l0aW9uc19fdmFsdWUtLTNwZXVve3RleHQtYWxpZ246cmlnaHQ7cGFkZGluZzowLjNlbTttYXJnaW46MH0ucG9zaXRpb25zX19wb3NpdGlvbi1zZWxsLS1uN0I0aCAucG9zaXRpb25zX19idXR0b24tLTFaWHYze2FwcGVhcmFuY2U6bm9uZTstd2Via2l0LWFwcGVhcmFuY2U6bm9uZTtib3JkZXItcmFkaXVzOjNweDtiYWNrZ3JvdW5kLWNvbG9yOiNmZjY4NWU7cGFkZGluZzowLjNyZW0gMC44ZW07Y29sb3I6I2ZmZmZmZjt0ZXh0LXRyYW5zZm9ybTp1cHBlcmNhc2V9LnBvc2l0aW9uc19fcG9zaXRpb24tY29sLW91dGNvbWUtLTJKNnNze3dpZHRoOjMzJX0ucG9zaXRpb25zX19wb3NpdGlvbi1jb2wtdmFsdWUtLTNJOEdKe3dpZHRoOjMzJTt0ZXh0LWFsaWduOnJpZ2h0fS5wb3NpdGlvbnNfX3Bvc2l0aW9uLWNvbC1zZWxsLS0xZ2xmaHt0ZXh0LWFsaWduOnJpZ2h0O3dpZHRoOjMzJX1cXG5cIiwgXCJcIl0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0cy5sb2NhbHMgPSB7XG5cdFwicG9zaXRpb25zLWhlYWRpbmdcIjogXCJwb3NpdGlvbnNfX3Bvc2l0aW9ucy1oZWFkaW5nLS0ycjE2ZFwiLFxuXHRcInBvc2l0aW9ucy1lbXB0eVwiOiBcInBvc2l0aW9uc19fcG9zaXRpb25zLWVtcHR5LS0zYmt4VlwiLFxuXHRcInBvc2l0aW9ucy1zdWJoZWFkaW5nXCI6IFwicG9zaXRpb25zX19wb3NpdGlvbnMtc3ViaGVhZGluZy0tMkhxN3BcIixcblx0XCJwb3NpdGlvbnMtcmVkZWVtXCI6IFwicG9zaXRpb25zX19wb3NpdGlvbnMtcmVkZWVtLS0zMVRCUVwiLFxuXHRcInJlZGVlbS1hbGxcIjogXCJwb3NpdGlvbnNfX3JlZGVlbS1hbGwtLTF5Y05sXCIsXG5cdFwiZGlzYWJsZWRcIjogXCJwb3NpdGlvbnNfX2Rpc2FibGVkLS03aF9IcFwiLFxuXHRcInBvc2l0aW9uLWVudHJ5XCI6IFwicG9zaXRpb25zX19wb3NpdGlvbi1lbnRyeS0tM3BUUTVcIixcblx0XCJ2YWx1ZVwiOiBcInBvc2l0aW9uc19fdmFsdWUtLTNwZXVvXCIsXG5cdFwicG9zaXRpb24tc2VsbFwiOiBcInBvc2l0aW9uc19fcG9zaXRpb24tc2VsbC0tbjdCNGhcIixcblx0XCJidXR0b25cIjogXCJwb3NpdGlvbnNfX2J1dHRvbi0tMVpYdjNcIixcblx0XCJwb3NpdGlvbi1jb2wtb3V0Y29tZVwiOiBcInBvc2l0aW9uc19fcG9zaXRpb24tY29sLW91dGNvbWUtLTJKNnNzXCIsXG5cdFwicG9zaXRpb24tY29sLXZhbHVlXCI6IFwicG9zaXRpb25zX19wb3NpdGlvbi1jb2wtdmFsdWUtLTNJOEdKXCIsXG5cdFwicG9zaXRpb24tY29sLXNlbGxcIjogXCJwb3NpdGlvbnNfX3Bvc2l0aW9uLWNvbC1zZWxsLS0xZ2xmaFwiXG59OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///549\n')},59:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return maxUint256BN; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return zeroDecimal; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return oneDecimal; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return probabilityDecimalPlaces; });\n/* unused harmony export minDisplayedProbability */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return collateralSignificantDigits; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return outcomeColors; });\n/* harmony import */ var web3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6);\n/* harmony import */ var web3__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(web3__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var color__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(313);\n/* harmony import */ var color__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(color__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var decimal_js_light__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(23);\n/* harmony import */ var decimal_js_light__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(decimal_js_light__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\nconst {\n  toBN\n} = web3__WEBPACK_IMPORTED_MODULE_0___default.a.utils;\nconst maxUint256BN = toBN(`0x${"ff".repeat(32)}`);\nconst zeroDecimal = new decimal_js_light__WEBPACK_IMPORTED_MODULE_2___default.a(0);\nconst oneDecimal = new decimal_js_light__WEBPACK_IMPORTED_MODULE_2___default.a(1);\nconst probabilityDecimalPlaces = 2;\nconst minDisplayedProbability = new decimal_js_light__WEBPACK_IMPORTED_MODULE_2___default.a(10).pow(-probabilityDecimalPlaces).mul("0.01");\nconst collateralSignificantDigits = 5;\nconst outcomeColors = [color__WEBPACK_IMPORTED_MODULE_1___default()("#d9f6fb"), color__WEBPACK_IMPORTED_MODULE_1___default()("#ffe6ea")];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdXRpbHMvY29uc3RhbnRzLmpzP2M5ZDkiXSwibmFtZXMiOlsidG9CTiIsIldlYjMiLCJ1dGlscyIsIm1heFVpbnQyNTZCTiIsInJlcGVhdCIsInplcm9EZWNpbWFsIiwiRGVjaW1hbCIsIm9uZURlY2ltYWwiLCJwcm9iYWJpbGl0eURlY2ltYWxQbGFjZXMiLCJtaW5EaXNwbGF5ZWRQcm9iYWJpbGl0eSIsInBvdyIsIm11bCIsImNvbGxhdGVyYWxTaWduaWZpY2FudERpZ2l0cyIsIm91dGNvbWVDb2xvcnMiLCJDb2xvciJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFFQSxNQUFNO0FBQUVBO0FBQUYsSUFBV0MsMkNBQUksQ0FBQ0MsS0FBdEI7QUFFTyxNQUFNQyxZQUFZLEdBQUdILElBQUksQ0FBRSxLQUFJLEtBQUtJLE1BQUwsQ0FBWSxFQUFaLENBQWdCLEVBQXRCLENBQXpCO0FBRUEsTUFBTUMsV0FBVyxHQUFHLElBQUlDLHVEQUFKLENBQVksQ0FBWixDQUFwQjtBQUNBLE1BQU1DLFVBQVUsR0FBRyxJQUFJRCx1REFBSixDQUFZLENBQVosQ0FBbkI7QUFFQSxNQUFNRSx3QkFBd0IsR0FBRyxDQUFqQztBQUNBLE1BQU1DLHVCQUF1QixHQUFHLElBQUlILHVEQUFKLENBQVksRUFBWixFQUNwQ0ksR0FEb0MsQ0FDaEMsQ0FBQ0Ysd0JBRCtCLEVBRXBDRyxHQUZvQyxDQUVoQyxNQUZnQyxDQUFoQztBQUdBLE1BQU1DLDJCQUEyQixHQUFHLENBQXBDO0FBRUEsTUFBTUMsYUFBYSxHQUFHLENBQUNDLDRDQUFLLENBQUMsU0FBRCxDQUFOLEVBQW1CQSw0Q0FBSyxDQUFDLFNBQUQsQ0FBeEIsQ0FBdEIiLCJmaWxlIjoiNTkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgV2ViMyBmcm9tIFwid2ViM1wiO1xuaW1wb3J0IENvbG9yIGZyb20gXCJjb2xvclwiO1xuXG5pbXBvcnQgRGVjaW1hbCBmcm9tIFwiZGVjaW1hbC5qcy1saWdodFwiO1xuXG5jb25zdCB7IHRvQk4gfSA9IFdlYjMudXRpbHM7XG5cbmV4cG9ydCBjb25zdCBtYXhVaW50MjU2Qk4gPSB0b0JOKGAweCR7XCJmZlwiLnJlcGVhdCgzMil9YCk7XG5cbmV4cG9ydCBjb25zdCB6ZXJvRGVjaW1hbCA9IG5ldyBEZWNpbWFsKDApO1xuZXhwb3J0IGNvbnN0IG9uZURlY2ltYWwgPSBuZXcgRGVjaW1hbCgxKTtcblxuZXhwb3J0IGNvbnN0IHByb2JhYmlsaXR5RGVjaW1hbFBsYWNlcyA9IDI7XG5leHBvcnQgY29uc3QgbWluRGlzcGxheWVkUHJvYmFiaWxpdHkgPSBuZXcgRGVjaW1hbCgxMClcbiAgLnBvdygtcHJvYmFiaWxpdHlEZWNpbWFsUGxhY2VzKVxuICAubXVsKFwiMC4wMVwiKTtcbmV4cG9ydCBjb25zdCBjb2xsYXRlcmFsU2lnbmlmaWNhbnREaWdpdHMgPSA1O1xuXG5leHBvcnQgY29uc3Qgb3V0Y29tZUNvbG9ycyA9IFtDb2xvcihcIiNkOWY2ZmJcIiksIENvbG9yKFwiI2ZmZTZlYVwiKV07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///59\n')},61:function(module,exports){eval("module.exports = class DummyModule {\n  setProvider() {}\n\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9tb2R1bGUtc3R1Yi5qcz81NWU5Il0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJEdW1teU1vZHVsZSIsInNldFByb3ZpZGVyIl0sIm1hcHBpbmdzIjoiQUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLE1BQU1DLFdBQU4sQ0FBa0I7QUFDakNDLGFBQVcsR0FBRyxDQUFFOztBQURpQixDQUFuQyIsImZpbGUiOiI2MS5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gY2xhc3MgRHVtbXlNb2R1bGUge1xuICBzZXRQcm92aWRlcigpIHt9XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///61\n")},72:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return formatProbability; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return formatCollateral; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return pseudoMarkdown; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(22);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var decimal_js_light__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(23);\n/* harmony import */ var decimal_js_light__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(decimal_js_light__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(59);\n\n\n\nconst formatProbability = probability => `${probability.mul(100).toDecimalPlaces(_constants__WEBPACK_IMPORTED_MODULE_2__[/* probabilityDecimalPlaces */ "e"], decimal_js_light__WEBPACK_IMPORTED_MODULE_1___default.a.ROUND_HALF_UP)}%`;\nconst formatCollateral = (amount, collateral) => {\n  return `${new decimal_js_light__WEBPACK_IMPORTED_MODULE_1___default.a((amount || "0").toString()).mul(collateral.fromUnitsMultiplier).toSignificantDigits(_constants__WEBPACK_IMPORTED_MODULE_2__[/* collateralSignificantDigits */ "a"]).toString()} ${collateral.symbol}`;\n};\nconst REPLACEMENT_RULES = [[/_(.*)_/g, "<em>$1</em>"]];\nconst pseudoMarkdown = string => {\n  let parsedString = REPLACEMENT_RULES.reduce((prevString, [matcher, replacer]) => string.replace(matcher, replacer), string);\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", {\n    dangerouslySetInnerHTML: {\n      __html: parsedString\n    }\n  });\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdXRpbHMvZm9ybWF0dGluZy5qcz80YWNkIl0sIm5hbWVzIjpbImZvcm1hdFByb2JhYmlsaXR5IiwicHJvYmFiaWxpdHkiLCJtdWwiLCJ0b0RlY2ltYWxQbGFjZXMiLCJwcm9iYWJpbGl0eURlY2ltYWxQbGFjZXMiLCJEZWNpbWFsIiwiUk9VTkRfSEFMRl9VUCIsImZvcm1hdENvbGxhdGVyYWwiLCJhbW91bnQiLCJjb2xsYXRlcmFsIiwidG9TdHJpbmciLCJmcm9tVW5pdHNNdWx0aXBsaWVyIiwidG9TaWduaWZpY2FudERpZ2l0cyIsImNvbGxhdGVyYWxTaWduaWZpY2FudERpZ2l0cyIsInN5bWJvbCIsIlJFUExBQ0VNRU5UX1JVTEVTIiwicHNldWRvTWFya2Rvd24iLCJzdHJpbmciLCJwYXJzZWRTdHJpbmciLCJyZWR1Y2UiLCJwcmV2U3RyaW5nIiwibWF0Y2hlciIsInJlcGxhY2VyIiwicmVwbGFjZSIsIl9faHRtbCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFFQTtBQUtPLE1BQU1BLGlCQUFpQixHQUFHQyxXQUFXLElBQ3pDLEdBQUVBLFdBQVcsQ0FDWEMsR0FEQSxDQUNJLEdBREosRUFFQUMsZUFGQSxDQUVnQkMsMkVBRmhCLEVBRTBDQyx1REFBTyxDQUFDQyxhQUZsRCxDQUVpRSxHQUgvRDtBQUtBLE1BQU1DLGdCQUFnQixHQUFHLENBQUNDLE1BQUQsRUFBU0MsVUFBVCxLQUF3QjtBQUN0RCxTQUFRLEdBQUUsSUFBSUosdURBQUosQ0FBWSxDQUFDRyxNQUFNLElBQUksR0FBWCxFQUFnQkUsUUFBaEIsRUFBWixFQUNQUixHQURPLENBQ0hPLFVBQVUsQ0FBQ0UsbUJBRFIsRUFFUEMsbUJBRk8sQ0FFYUMsOEVBRmIsRUFHUEgsUUFITyxFQUdJLElBQUdELFVBQVUsQ0FBQ0ssTUFBTyxFQUhuQztBQUlELENBTE07QUFPUCxNQUFNQyxpQkFBaUIsR0FBRyxDQUFDLENBQUMsU0FBRCxFQUFZLGFBQVosQ0FBRCxDQUExQjtBQUVPLE1BQU1DLGNBQWMsR0FBR0MsTUFBTSxJQUFJO0FBQ3RDLE1BQUlDLFlBQVksR0FBR0gsaUJBQWlCLENBQUNJLE1BQWxCLENBQ2pCLENBQUNDLFVBQUQsRUFBYSxDQUFDQyxPQUFELEVBQVVDLFFBQVYsQ0FBYixLQUFxQ0wsTUFBTSxDQUFDTSxPQUFQLENBQWVGLE9BQWYsRUFBd0JDLFFBQXhCLENBRHBCLEVBRWpCTCxNQUZpQixDQUFuQjtBQUtBLFNBQU87QUFBTSwyQkFBdUIsRUFBRTtBQUFFTyxZQUFNLEVBQUVOO0FBQVY7QUFBL0IsSUFBUDtBQUNELENBUE0iLCJmaWxlIjoiNzIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgRGVjaW1hbCBmcm9tIFwiZGVjaW1hbC5qcy1saWdodFwiO1xuXG5pbXBvcnQge1xuICBwcm9iYWJpbGl0eURlY2ltYWxQbGFjZXMsXG4gIGNvbGxhdGVyYWxTaWduaWZpY2FudERpZ2l0c1xufSBmcm9tIFwiLi9jb25zdGFudHNcIjtcblxuZXhwb3J0IGNvbnN0IGZvcm1hdFByb2JhYmlsaXR5ID0gcHJvYmFiaWxpdHkgPT5cbiAgYCR7cHJvYmFiaWxpdHlcbiAgICAubXVsKDEwMClcbiAgICAudG9EZWNpbWFsUGxhY2VzKHByb2JhYmlsaXR5RGVjaW1hbFBsYWNlcywgRGVjaW1hbC5ST1VORF9IQUxGX1VQKX0lYDtcblxuZXhwb3J0IGNvbnN0IGZvcm1hdENvbGxhdGVyYWwgPSAoYW1vdW50LCBjb2xsYXRlcmFsKSA9PiB7XG4gIHJldHVybiBgJHtuZXcgRGVjaW1hbCgoYW1vdW50IHx8IFwiMFwiKS50b1N0cmluZygpKVxuICAgIC5tdWwoY29sbGF0ZXJhbC5mcm9tVW5pdHNNdWx0aXBsaWVyKVxuICAgIC50b1NpZ25pZmljYW50RGlnaXRzKGNvbGxhdGVyYWxTaWduaWZpY2FudERpZ2l0cylcbiAgICAudG9TdHJpbmcoKX0gJHtjb2xsYXRlcmFsLnN5bWJvbH1gO1xufTtcblxuY29uc3QgUkVQTEFDRU1FTlRfUlVMRVMgPSBbWy9fKC4qKV8vZywgXCI8ZW0+JDE8L2VtPlwiXV07XG5cbmV4cG9ydCBjb25zdCBwc2V1ZG9NYXJrZG93biA9IHN0cmluZyA9PiB7XG4gIGxldCBwYXJzZWRTdHJpbmcgPSBSRVBMQUNFTUVOVF9SVUxFUy5yZWR1Y2UoXG4gICAgKHByZXZTdHJpbmcsIFttYXRjaGVyLCByZXBsYWNlcl0pID0+IHN0cmluZy5yZXBsYWNlKG1hdGNoZXIsIHJlcGxhY2VyKSxcbiAgICBzdHJpbmdcbiAgKTtcblxuICByZXR1cm4gPHNwYW4gZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3sgX19odG1sOiBwYXJzZWRTdHJpbmcgfX0gLz47XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///72\n')},74:function(module,exports){eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vYnVmZmVyIChpZ25vcmVkKT80ODkwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6Ijc0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogKGlnbm9yZWQpICovIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///74\n")},78:function(module,exports){eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vdXRpbCAoaWdub3JlZCk/Njk4YiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiI3OC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIChpZ25vcmVkKSAqLyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///78\n")},79:function(module,exports){eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vdXRpbCAoaWdub3JlZCk/YzlmYiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiI3OS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIChpZ25vcmVkKSAqLyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///79\n")},82:function(module,exports){eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vY3J5cHRvIChpZ25vcmVkKT8wYmIzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjgyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogKGlnbm9yZWQpICovIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///82\n")}}]);