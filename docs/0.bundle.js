(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{510:function(module){eval('module.exports = {"contractName":"Address","abi":[],"bytecode":"0x604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a72305820e71887f199e22b9206875072895cf06af937d9a7bfb8e38732099a694a50c5df0029","deployedBytecode":"0x73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a72305820e71887f199e22b9206875072895cf06af937d9a7bfb8e38732099a694a50c5df0029","sourceMap":"85:996:21:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24","deployedSourceMap":"85:996:21:-;;;;;;;;","source":"pragma solidity ^0.5.0;\\n\\n/**\\n * Utility library of inline functions on addresses\\n */\\nlibrary Address {\\n    /**\\n     * Returns whether the target address is a contract\\n     * @dev This function will return false if invoked during the constructor of a contract,\\n     * as the code is not actually created until after the constructor finishes.\\n     * @param account address of the account to check\\n     * @return whether the target address is a contract\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        uint256 size;\\n        // XXX Currently there is no better way to check if there is a contract in an address\\n        // than to check the size of the code at that address.\\n        // See https://ethereum.stackexchange.com/a/14016/36603\\n        // for more details about how this works.\\n        // TODO Check this again before the Serenity release, because all addresses will be\\n        // contracts then.\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n}\\n","sourcePath":"openzeppelin-solidity/contracts/utils/Address.sol","ast":{"absolutePath":"openzeppelin-solidity/contracts/utils/Address.sol","exportedSymbols":{"Address":[5458]},"id":5459,"nodeType":"SourceUnit","nodes":[{"id":5441,"literals":["solidity","^","0.5",".0"],"nodeType":"PragmaDirective","src":"0:23:21"},{"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":"Utility library of inline functions on addresses","fullyImplemented":true,"id":5458,"linearizedBaseContracts":[5458],"name":"Address","nodeType":"ContractDefinition","nodes":[{"body":{"id":5456,"nodeType":"Block","src":"529:550:21","statements":[{"assignments":[5449],"declarations":[{"constant":false,"id":5449,"name":"size","nodeType":"VariableDeclaration","scope":5456,"src":"539:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5448,"name":"uint256","nodeType":"ElementaryTypeName","src":"539:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":5450,"initialValue":null,"nodeType":"VariableDeclarationStatement","src":"539:12:21"},{"externalReferences":[{"size":{"declaration":5449,"isOffset":false,"isSlot":false,"src":"1018:4:21","valueSize":1}},{"account":{"declaration":5443,"isOffset":false,"isSlot":false,"src":"1038:7:21","valueSize":1}}],"id":5451,"nodeType":"InlineAssembly","operations":"{\\n    size := extcodesize(account)\\n}","src":"1007:56:21"},{"expression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":5452,"name":"size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5449,"src":"1064:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":5453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1071:1:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1064:8:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5447,"id":5455,"nodeType":"Return","src":"1057:15:21"}]},"documentation":"Returns whether the target address is a contract\\n@dev This function will return false if invoked during the constructor of a contract,\\nas the code is not actually created until after the constructor finishes.\\n@param account address of the account to check\\n@return whether the target address is a contract","id":5457,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nodeType":"FunctionDefinition","parameters":{"id":5444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5443,"name":"account","nodeType":"VariableDeclaration","scope":5457,"src":"483:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5442,"name":"address","nodeType":"ElementaryTypeName","src":"483:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"482:17:21"},"returnParameters":{"id":5447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5446,"name":"","nodeType":"VariableDeclaration","scope":5457,"src":"523:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5445,"name":"bool","nodeType":"ElementaryTypeName","src":"523:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"522:6:21"},"scope":5458,"src":"463:616:21","stateMutability":"view","superFunction":null,"visibility":"internal"}],"scope":5459,"src":"85:996:21"}],"src":"0:1082:21"},"legacyAST":{"absolutePath":"openzeppelin-solidity/contracts/utils/Address.sol","exportedSymbols":{"Address":[5458]},"id":5459,"nodeType":"SourceUnit","nodes":[{"id":5441,"literals":["solidity","^","0.5",".0"],"nodeType":"PragmaDirective","src":"0:23:21"},{"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":"Utility library of inline functions on addresses","fullyImplemented":true,"id":5458,"linearizedBaseContracts":[5458],"name":"Address","nodeType":"ContractDefinition","nodes":[{"body":{"id":5456,"nodeType":"Block","src":"529:550:21","statements":[{"assignments":[5449],"declarations":[{"constant":false,"id":5449,"name":"size","nodeType":"VariableDeclaration","scope":5456,"src":"539:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5448,"name":"uint256","nodeType":"ElementaryTypeName","src":"539:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":5450,"initialValue":null,"nodeType":"VariableDeclarationStatement","src":"539:12:21"},{"externalReferences":[{"size":{"declaration":5449,"isOffset":false,"isSlot":false,"src":"1018:4:21","valueSize":1}},{"account":{"declaration":5443,"isOffset":false,"isSlot":false,"src":"1038:7:21","valueSize":1}}],"id":5451,"nodeType":"InlineAssembly","operations":"{\\n    size := extcodesize(account)\\n}","src":"1007:56:21"},{"expression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":5452,"name":"size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5449,"src":"1064:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":5453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1071:1:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1064:8:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5447,"id":5455,"nodeType":"Return","src":"1057:15:21"}]},"documentation":"Returns whether the target address is a contract\\n@dev This function will return false if invoked during the constructor of a contract,\\nas the code is not actually created until after the constructor finishes.\\n@param account address of the account to check\\n@return whether the target address is a contract","id":5457,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nodeType":"FunctionDefinition","parameters":{"id":5444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5443,"name":"account","nodeType":"VariableDeclaration","scope":5457,"src":"483:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5442,"name":"address","nodeType":"ElementaryTypeName","src":"483:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"482:17:21"},"returnParameters":{"id":5447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5446,"name":"","nodeType":"VariableDeclaration","scope":5457,"src":"523:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5445,"name":"bool","nodeType":"ElementaryTypeName","src":"523:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"522:6:21"},"scope":5458,"src":"463:616:21","stateMutability":"view","superFunction":null,"visibility":"internal"}],"scope":5459,"src":"85:996:21"}],"src":"0:1082:21"},"compiler":{"name":"solc","version":"0.5.1+commit.c8a2cb62.Emscripten.clang"},"networks":{},"schemaVersion":"3.0.1","updatedAt":"2019-03-05T11:58:09.775Z","devdoc":{"methods":{}},"userdoc":{"methods":{},"notice":"Utility library of inline functions on addresses"}};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiI1MTAuanMiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///510\n')}}]);