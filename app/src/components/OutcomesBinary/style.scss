@import "~style/vars.scss";

.binary-outcome {
  position: relative;

  .summary {
    text-transform: uppercase;
    text-align: center;
    padding: 0 12px;
  }


  .bar {
    outline: none;
    margin-top: 50px;
    width: 100%;
    height: 36px;
    position: relative;
    display: block;
    appearance: none;
    border: 0;
    padding: 0;
    box-sizing: border-box;
    border: 1px solid transparent;

    /*
    &:active, &:focus {
      box-shadow: 0px 0px 5px $highlight-color;
      border: 1px solid $highlight-color;
      
      &.inner {
        opacity: 0.2;
      }
    }*/

    background-color: rgba(220, 220, 220, 0.4);


    .inner {
      position: relative;
      height: 100%;
      transition: all 1s ease-in-out;

      // increase brightness dynamically
      &::after {
        content: '';
        background: white;
        position: absolute;
        width: 100%;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;

        transition: opacity ease 0.2s;

        opacity: 0.4;
      }
    }

    .prediction { 
      position: absolute;

      &.inverted {
        right: 0;
        left: initial;

        &::after {
          opacity: 0.2;
        }
      }

      left: 0;

      top: 0;
      bottom: 0;
      height: 100%;
      transition: all 1s ease-in-out;

      // increase brightness dynamically
      &::after {
        content: '';
        background: white;
        position: absolute;
        width: 100%;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;

        transition: opacity ease 0.2s;

        opacity: 0.8;
      }

      // shift left/right if we're too close to the edges of the outcome-bar
      &.shiftLeft {
        .hint {
          transform: translate(100%, -100%);

          &::after {
            left: 5%;
          }
        }
      }

      &.shiftRight {
        .hint {
          transform: translate(0%, -100%);

          &::after {
            left: 95%;
          }
        }
      }

      .hint {
        min-width: 170px;
        white-space: nowrap;
        top: calc(100% + 50px);
        
        &::after {
          top: -7px;
          bottom: auto;
          border-width: 0px 5px 8px 5px;
          border-bottom-color: inherit;
          border-top-color: transparent;
        }
      }
    }

    .hint {
      right: 50%;
      transform: translate(50%, -100%);
      top: -(8px + 2px); // 8px = arrow height, 2px = spacing
      position: absolute;
      color: #000;

      text-align: center;
      min-width: 70px;

      background-color: inherit;
      border-color: inherit;
      border-radius: 4px;
      padding: 8px 6px;
      opacity: 0.8;

      transition: all .2s ease;

      .text {
        width: 100%;
        display: block;
        overflow: hidden;
        text-overflow: ellipsis;
      }

      &::after {
        position: absolute;
        bottom: -8px;
        content: '';
        left: 50%;
        margin-left: -5px;

        width: 0;
        height: 0;
        transform: rotate(360deg);
        -webkit-transform: rotate(360deg);

        border-style: inset;
        border-style: solid;
        border-width: 8px 5px 0 5px;
        border-color: inherit;
        border-left-color: transparent;
        border-right-color: transparent;
        border-bottom-color: transparent;
      }
    }
  }
}